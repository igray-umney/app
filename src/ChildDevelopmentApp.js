// Telegram Bot –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è –¥–µ—Ç–µ–π
const express = require('express');
const TelegramBot = require('node-telegram-bot-api');
const app = express();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BOT_TOKEN = 'YOUR_BOT_TOKEN_HERE'; // –ü–æ–ª—É—á–∏—Ç—å —É @BotFather
const WEBHOOK_URL = 'https://your-domain.com/webhook'; // –í–∞—à –¥–æ–º–µ–Ω –¥–ª—è webhook
const PORT = process.env.PORT || 3000;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { webHook: true });
bot.setWebHook(`${WEBHOOK_URL}/${BOT_TOKEN}`);

app.use(express.json());

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ë–î)
const users = new Map();

// –î–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –∏–∑ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const activitiesDatabase = {
  1: [
    {
      id: 1,
      title: '–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞',
      description: '–ò—Å—Å–ª–µ–¥—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã: –ø–µ—Å–æ–∫, –∫—Ä—É–ø—ã, —Ç–∫–∞–Ω–∏',
      duration: '15 –º–∏–Ω',
      category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
      premium: false,
      icon: 'ü§≤',
      difficulty: '–õ–µ–≥–∫–æ',
      materials: ['–ö–æ—Ä–æ–±–∫–∞', '–†–∏—Å/–≥—Ä–µ—á–∫–∞', '–¢–∫–∞–Ω–∏ —Ä–∞–∑–Ω–æ–π —Ç–µ–∫—Å—Ç—É—Ä—ã', '–ú–µ–ª–∫–∏–µ –∏–≥—Ä—É—à–∫–∏'],
      instructions: [
        '–í–æ–∑—å–º–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –∫–æ—Ä–æ–±–∫—É –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä',
        '–ù–∞–ø–æ–ª–Ω–∏—Ç–µ –µ—ë —Ä–∏—Å–æ–º, –≥—Ä–µ—á–∫–æ–π –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫—Ä—É–ø–æ–π',
        '–î–æ–±–∞–≤—å—Ç–µ –∫—É—Å–æ—á–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∫–∞–Ω–µ–π',
        '–°–ø—Ä—è—á—å—Ç–µ –º–µ–ª–∫–∏–µ –∏–≥—Ä—É—à–∫–∏ –≤ –Ω–∞–ø–æ–ª–Ω–∏—Ç–µ–ª–µ',
        '–ü—É—Å—Ç—å –º–∞–ª—ã—à –∏—Å—Å–ª–µ–¥—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä—É–∫–∞–º–∏',
        '–ü–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –∏ –Ω–∞–∑—ã–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã'
      ],
      benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –≤–Ω–∏–º–∞–Ω–∏—è',
      ageRange: '12-18 –º–µ—Å—è—Ü–µ–≤'
    },
    {
      id: 2,
      title: '–ò–≥—Ä–∞ —Å –≤–æ–¥–æ–π',
      description: '–ü–µ—Ä–µ–ª–∏–≤–∞–µ–º –≤–æ–¥—É –º–µ–∂–¥—É –µ–º–∫–æ—Å—Ç—è–º–∏, —Ä–∞–∑–≤–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é',
      duration: '20 –º–∏–Ω',
      category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
      premium: false,
      icon: 'üíß',
      difficulty: '–õ–µ–≥–∫–æ',
      materials: ['2-3 –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞', '–í–æ–¥–∞', '–ì—É–±–∫–∞', '–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ'],
      instructions: [
        '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞',
        '–ù–∞–ª–µ–π—Ç–µ –≤–æ–¥—É –≤ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö',
        '–ü–æ–∫–∞–∂–∏—Ç–µ –º–∞–ª—ã—à—É, –∫–∞–∫ –ø–µ—Ä–µ–ª–∏–≤–∞—Ç—å –≤–æ–¥—É',
        '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ',
        '–î–∞–π—Ç–µ –≥—É–±–∫—É - –ø—É—Å—Ç—å –≤—ã–∂–∏–º–∞–µ—Ç –≤–æ–¥—É',
        '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ –¥–ª—è —É–±–æ—Ä–∫–∏!'
      ],
      benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—è, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è',
      ageRange: '10-24 –º–µ—Å—è—Ü–∞'
    },
    {
      id: 3,
      title: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
      description: '–ò–∑—É—á–∞–µ–º –∑–≤—É–∫–∏: –ø–æ–≥—Ä–µ–º—É—à–∫–∏, –±–∞—Ä–∞–±–∞–Ω, –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏',
      duration: '10 –º–∏–Ω',
      category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
      premium: true,
      icon: 'üéµ',
      difficulty: '–õ–µ–≥–∫–æ',
      materials: ['–ü–æ–≥—Ä–µ–º—É—à–∫–∏', '–ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏', '–°–∞–º–æ–¥–µ–ª—å–Ω—ã–π –±–∞—Ä–∞–±–∞–Ω', '–õ–æ–∂–∫–∏'],
      instructions: [
        '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–∑–Ω—ã–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
        '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∏–∑–≤–ª–µ–∫–∞—Ç—å –∑–≤—É–∫–∏ –∏–∑ –∫–∞–∂–¥–æ–≥–æ',
        '–ü—É—Å—Ç—å –º–∞–ª—ã—à –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∞–º',
        '–ò–≥—Ä–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ä–∏—Ç–º—ã',
        '–ü–æ–π—Ç–µ –ø–µ—Å–µ–Ω–∫–∏ –ø–æ–¥ –∞–∫–∫–æ–º–ø–∞–Ω–µ–º–µ–Ω—Ç',
        '–¢–∞–Ω—Ü—É–π—Ç–µ –ø–æ–¥ –º—É–∑—ã–∫—É'
      ],
      benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Å–ª—É—Ö, —á—É–≤—Å—Ç–≤–æ —Ä–∏—Ç–º–∞, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏–π, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏',
      ageRange: '8-18 –º–µ—Å—è—Ü–µ–≤'
    }
  ],
  2: [
    {
      id: 4,
      title: '–°–æ–±–∏—Ä–∞–µ–º –ø–∏—Ä–∞–º–∏–¥–∫—É',
      description: '–†–∞–∑–≤–∏–≤–∞–µ–º –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤',
      duration: '15 –º–∏–Ω',
      category: '–õ–æ–≥–∏–∫–∞',
      premium: false,
      icon: 'üìê',
      difficulty: '–õ–µ–≥–∫–æ',
      materials: ['–ü–∏—Ä–∞–º–∏–¥–∫–∞ —Å –∫–æ–ª—å—Ü–∞–º–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞'],
      instructions: [
        '–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É –ø–∏—Ä–∞–º–∏–¥–∫—É',
        '–†–∞–∑–±–µ—Ä–∏—Ç–µ –µ—ë –Ω–∞ —á–∞—Å—Ç–∏',
        '–û–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–Ω—è—Ç–∏—è "–±–æ–ª—å—à–æ–π" –∏ "–º–∞–ª–µ–Ω—å–∫–∏–π"',
        '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–æ–±—Ä–∞—Ç—å —Å–∞–º',
        '–ü–æ–º–æ–≥–∞–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏',
        '–•–≤–∞–ª–∏—Ç–µ –∑–∞ –∫–∞–∂–¥–æ–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'
      ],
      benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —Ç–µ—Ä–ø–µ–Ω–∏–µ',
      ageRange: '18-30 –º–µ—Å—è—Ü–µ–≤'
    },
    {
      id: 5,
      title: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏',
      description: '–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –∫—Ä–∞—Å–∫–∞–º–∏',
      duration: '25 –º–∏–Ω',
      category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
      premium: false,
      icon: 'üé®',
      difficulty: '–°—Ä–µ–¥–Ω–µ',
      materials: ['–ü–∞–ª—å—á–∏–∫–æ–≤—ã–µ –∫—Ä–∞—Å–∫–∏', '–ë–æ–ª—å—à–æ–π –ª–∏—Å—Ç –±—É–º–∞–≥–∏', '–í–ª–∞–∂–Ω—ã–µ —Å–∞–ª—Ñ–µ—Ç–∫–∏'],
      instructions: [
        '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ',
        '–ù–∞–¥–µ–Ω—å—Ç–µ –Ω–∞ —Ä–µ–±–µ–Ω–∫–∞ —Å—Ç–∞—Ä—É—é –æ–¥–µ–∂–¥—É',
        '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –º–∞–∫–∞—Ç—å –ø–∞–ª–µ—Ü –≤ –∫—Ä–∞—Å–∫—É',
        '–ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤',
        '–†–∏—Å—É–π—Ç–µ –≤–º–µ—Å—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–≥—É—Ä—ã',
        '–ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Ç–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ —Ä–µ–±–µ–Ω–∫–∞'
      ],
      benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, —Ü–≤–µ—Ç–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è',
      ageRange: '18-36 –º–µ—Å—è—Ü–µ–≤'
    }
  ],
  3: [
    {
      id: 7,
      title: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º',
      description: '–ò–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è',
      duration: '20 –º–∏–Ω',
      category: '–õ–æ–≥–∏–∫–∞',
      premium: false,
      icon: 'üåà',
      difficulty: '–õ–µ–≥–∫–æ',
      materials: ['–¶–≤–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã', '4-5 –∫–æ—Ä–æ–±–æ—á–µ–∫ –∏–ª–∏ –µ–º–∫–æ—Å—Ç–µ–π'],
      instructions: [
        '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã 4-5 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤',
        '–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É, –∫–∞–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ü–≤–µ—Ç–∞–º',
        '–ù–∞–∑—ã–≤–∞–π—Ç–µ –∫–∞–∂–¥—ã–π —Ü–≤–µ—Ç –ø—Ä–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ',
        '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–º–µ—Å—Ç–µ',
        '–£—Å–ª–æ–∂–Ω–∏—Ç–µ –∑–∞–¥–∞—á—É, –¥–æ–±–∞–≤–∏–≤ –±–æ–ª—å—à–µ —Ü–≤–µ—Ç–æ–≤'
      ],
      benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –≤–Ω–∏–º–∞–Ω–∏–µ, —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å',
      ageRange: '2-4 –≥–æ–¥–∞'
    }
  ]
};

// –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
const motivationalMessages = {
  daily: [
    'üåü –í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å {name}! –°–µ–≥–æ–¥–Ω—è –∏–∑—É—á–∞–µ–º —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ?',
    'üí´ {name} –∂–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º —Å–µ–≥–æ–¥–Ω—è?',
    'üéØ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º streak! –£–∂–µ {streak} –¥–Ω–µ–π —Ä–∞–∑–≤–∏–≤–∞–µ–º—Å—è –≤–º–µ—Å—Ç–µ!',
    'üöÄ –ü–æ—Ä–∞ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å {name}! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å - –Ω–æ–≤–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ!',
    '‚≠ê {name} –≥–æ—Ç–æ–≤(–∞) –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–Ω–∏—è–º! –ù–∞—á–∏–Ω–∞–µ–º?'
  ],
  streak: [
    'üî• –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! {streak} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥! {name} –Ω–∞—Å—Ç–æ—è—â–∏–π —á–µ–º–ø–∏–æ–Ω!',
    'üëë –ü–æ—Ç—Ä—è—Å–∞—é—â–∏–π streak - {streak} –¥–Ω–µ–π! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!',
    'üèÜ {streak} –¥–Ω–µ–π –∑–∞–Ω—è—Ç–∏–π! {name} —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–º–Ω–µ–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!'
  ],
  encouragement: [
    'üí™ –î–∞–∂–µ 10 –º–∏–Ω—É—Ç –∑–∞–Ω—è—Ç–∏–π –ø—Ä–∏–Ω–µ—Å—É—Ç –ø–æ–ª—å–∑—É {name}!',
    'üå± –ö–∞–∂–¥–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ–≥–∞–µ—Ç {name} —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!',
    '‚ù§Ô∏è {name} –ª—é–±–∏—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è —Å –≤–∞–º–∏ –∑–∞ –∏–≥—Ä–∞–º–∏!'
  ]
};

// Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const keyboards = {
  main: {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üéØ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', callback_data: 'activities' },
          { text: 'üìÖ –ü—Ä–æ–≥—Ä–µ—Å—Å', callback_data: 'progress' }
        ],
        [
          { text: 'üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞', callback_data: 'library' },
          { text: 'üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è', callback_data: 'notifications' }
        ],
        [
          { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings' },
          { text: 'üëë –ü—Ä–µ–º–∏—É–º', callback_data: 'premium' }
        ]
      ]
    }
  },
  
  activities: (age) => ({
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'ü§≤ –ú–æ—Ç–æ—Ä–∏–∫–∞', callback_data: 'category_–ú–æ—Ç–æ—Ä–∏–∫–∞' },
          { text: 'üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', callback_data: 'category_–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ' }
        ],
        [
          { text: 'üß† –õ–æ–≥–∏–∫–∞', callback_data: 'category_–õ–æ–≥–∏–∫–∞' },
          { text: 'üó£Ô∏è –†–µ—á—å', callback_data: 'category_–†–µ—á—å' }
        ],
        [
          { text: 'üìã –í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', callback_data: 'all_activities' }
        ],
        [
          { text: '‚Üê –ù–∞–∑–∞–¥', callback_data: 'back_main' }
        ]
      ]
    }
  }),

  activity_detail: (activityId, isPremium) => ({
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üöÄ –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', callback_data: `start_activity_${activityId}` }
        ],
        [
          { text: 'üìã –ú–∞—Ç–µ—Ä–∏–∞–ª—ã', callback_data: `materials_${activityId}` },
          { text: 'üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data: `instructions_${activityId}` }
        ],
        [
          { text: '‚Üê –ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º', callback_data: 'activities' }
        ]
      ]
    }
  }),

  back_to_activities: {
    reply_markup: {
      inline_keyboard: [
        [{ text: '‚Üê –ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º', callback_data: 'activities' }]
      ]
    }
  },

  back_to_main: {
    reply_markup: {
      inline_keyboard: [
        [{ text: '‚Üê –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_main' }]
      ]
    }
  }
};

// –§—É–Ω–∫—Ü–∏–∏-–ø–æ–º–æ—â–Ω–∏–∫–∏
function getUserData(userId) {
  if (!users.has(userId)) {
    users.set(userId, {
      name: '',
      age: 2,
      streak: 0,
      isPremium: false,
      lastActivity: null,
      totalActivities: 0,
      notificationsEnabled: true,
      notificationTime: '19:00',
      reminderType: 'motivational'
    });
  }
  return users.get(userId);
}

function getAgeText(age) {
  if (age === 1) return '–≥–æ–¥';
  if (age < 5) return '–≥–æ–¥–∞';
  return '–ª–µ—Ç';
}

function getActivitiesForAge(age) {
  return activitiesDatabase[age] || [];
}

function getRandomMessage(type, userData) {
  const messages = motivationalMessages[type] || motivationalMessages.daily;
  const randomMessage = messages[Math.floor(Math.random() * messages.length)];
  return randomMessage
    .replace('{name}', userData.name || '–º–∞–ª—ã—à')
    .replace('{streak}', userData.streak);
}

function formatActivity(activity, isPremium) {
  const premiumIcon = activity.premium && !isPremium ? 'üîí ' : '';
  const difficultyEmoji = activity.difficulty === '–õ–µ–≥–∫–æ' ? 'üü¢' : 
                         activity.difficulty === '–°—Ä–µ–¥–Ω–µ' ? 'üü°' : 'üî¥';
  
  return `${premiumIcon}${activity.icon} <b>${activity.title}</b>

üìù ${activity.description}
‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${activity.duration}
${difficultyEmoji} –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${activity.difficulty}
üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${activity.category}
üë∂ –í–æ–∑—Ä–∞—Å—Ç: ${activity.ageRange}

üí° <b>–ü–æ–ª—å–∑–∞:</b> ${activity.benefits}`;
}

function formatMaterials(activity) {
  const materialsList = activity.materials.map((material, index) => 
    `${index + 1}. ${material}`
  ).join('\n');
  
  return `üì¶ <b>–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è "${activity.title}":</b>

${materialsList}

üí° –í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –¥–æ–º–∞ –∏–ª–∏ –∫—É–ø–∏—Ç—å –≤ –ª—é–±–æ–º –º–∞–≥–∞–∑–∏–Ω–µ!`;
}

function formatInstructions(activity) {
  const instructionsList = activity.instructions.map((instruction, index) => 
    `${index + 1}. ${instruction}`
  ).join('\n\n');
  
  return `üìã <b>–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è "${activity.title}":</b>

${instructionsList}

‚ú® –ù–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å –∏ —Ö–≤–∞–ª–∏—Ç–µ —Ä–µ–±–µ–Ω–∫–∞ –∑–∞ –∫–∞–∂–¥—ã–π —à–∞–≥!`;
}

// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userData = getUserData(chatId);
  
  const welcomeMessage = `üåü <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†–∞–∑–≤–∏–≤–∞–π–∫—É!</b>

–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å –≤–∞—à–µ–≥–æ –º–∞–ª—ã—à–∞ —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π.

${userData.name ? `–†–∞–¥ —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å –≤–∞—Å –∏ ${userData.name}! üëã` : ''}

–ß—Ç–æ —è —É–º–µ—é:
üéØ –ü–æ–¥–±–∏—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
üìÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑–≤–∏—Ç–∏—è
üìö –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π
üîî –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –∑–∞–Ω—è—Ç–∏—è—Ö
üëë –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏

${!userData.name ? '–î–∞–≤–∞–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–∏–º –ø—Ä–æ—Ñ–∏–ª—å –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞!' : '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:'}`;

  bot.sendMessage(chatId, welcomeMessage, {
    parse_mode: 'HTML',
    ...(!userData.name ? keyboards.back_to_main : keyboards.main)
  });

  if (!userData.name) {
    setTimeout(() => {
      bot.sendMessage(chatId, 'üë∂ –ö–∞–∫ –∑–æ–≤—É—Ç –≤–∞—à–µ–≥–æ –º–∞–ª—ã—à–∞?');
    }, 1000);
  }
});

bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  
  const helpMessage = `üìö <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É –†–∞–∑–≤–∏–≤–∞–π–∫–∞</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/profile - –ü—Ä–æ—Ñ–∏–ª—å —Ä–µ–±–µ–Ω–∫–∞
/activities - –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
/progress - –ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑–≤–∏—Ç–∏—è
/premium - –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
üéØ <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</b> - –ë–æ–ª–µ–µ 20 —Ä–∞–∑–≤–∏–≤–∞—é—â–∏—Ö –∑–∞–Ω—è—Ç–∏–π –¥–ª—è –¥–µ—Ç–µ–π 1-7 –ª–µ—Ç
üìÖ <b>–ü—Ä–æ–≥—Ä–µ—Å—Å</b> - –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ –Ω–∞–≤—ã–∫–æ–≤
üìö <b>–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞</b> - –°—Ç–∞—Ç—å–∏ –∏ –≤–∏–¥–µ–æ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π
üîî <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</b> - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
üëë <b>–ü—Ä–µ–º–∏—É–º</b> - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @your_support_username`;

  bot.sendMessage(chatId, helpMessage, {
    parse_mode: 'HTML',
    ...keyboards.back_to_main
  });
});

bot.onText(/\/profile/, (msg) => {
  const chatId = msg.chat.id;
  const userData = getUserData(chatId);
  
  if (!userData.name) {
    bot.sendMessage(chatId, '‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å —Å –ø–æ–º–æ—â—å—é /start');
    return;
  }
  
  const profileMessage = `üë∂ <b>–ü—Ä–æ—Ñ–∏–ª—å —Ä–µ–±–µ–Ω–∫–∞</b>

üë§ –ò–º—è: ${userData.name}
üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${userData.age} ${getAgeText(userData.age)}
üî• Streak: ${userData.streak} –¥–Ω–µ–π
üìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${userData.totalActivities}
üëë –°—Ç–∞—Ç—É—Å: ${userData.isPremium ? '–ü—Ä–µ–º–∏—É–º' : '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π'}
üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: ${userData.notificationsEnabled ? `–í–∫–ª—é—á–µ–Ω—ã (${userData.notificationTime})` : '–í—ã–∫–ª—é—á–µ–Ω—ã'}

${userData.lastActivity ? `üéØ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${userData.lastActivity}` : ''}`;

  bot.sendMessage(chatId, profileMessage, {
    parse_mode: 'HTML',
    ...keyboards.back_to_main
  });
});

bot.onText(/\/activities/, (msg) => {
  const chatId = msg.chat.id;
  handleActivitiesMenu(chatId);
});

bot.onText(/\/progress/, (msg) => {
  const chatId = msg.chat.id;
  handleProgressMenu(chatId);
});

bot.onText(/\/premium/, (msg) => {
  const chatId = msg.chat.id;
  handlePremiumMenu(chatId);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è)
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userData = getUserData(chatId);
  
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ callback'–∏
  if (msg.text && !msg.text.startsWith('/') && !userData.name) {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è —Ä–µ–±–µ–Ω–∫–∞
    userData.name = msg.text.trim();
    users.set(chatId, userData);
    
    bot.sendMessage(chatId, `–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, ${userData.name}! üëã

–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç:`, {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '1 –≥–æ–¥', callback_data: 'set_age_1' },
            { text: '2 –≥–æ–¥–∞', callback_data: 'set_age_2' },
            { text: '3 –≥–æ–¥–∞', callback_data: 'set_age_3' }
          ],
          [
            { text: '4 –≥–æ–¥–∞', callback_data: 'set_age_4' },
            { text: '5 –ª–µ—Ç', callback_data: 'set_age_5' },
            { text: '6 –ª–µ—Ç', callback_data: 'set_age_6' }
          ],
          [
            { text: '7 –ª–µ—Ç', callback_data: 'set_age_7' }
          ]
        ]
      }
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', (callbackQuery) => {
  const msg = callbackQuery.message;
  const chatId = msg.chat.id;
  const data = callbackQuery.data;
  const userData = getUserData(chatId);

  bot.answerCallbackQuery(callbackQuery.id);

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
  if (data.startsWith('set_age_')) {
    const age = parseInt(data.split('_')[2]);
    userData.age = age;
    users.set(chatId, userData);
    
    bot.editMessageText(`‚úÖ –û—Ç–ª–∏—á–Ω–æ! ${userData.name}, ${age} ${getAgeText(age)}

–ü—Ä–æ—Ñ–∏–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞.`, {
      chat_id: chatId,
      message_id: msg.message_id,
      parse_mode: 'HTML',
      ...keyboards.main
    });
    return;
  }

  // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
  if (data === 'back_main') {
    const mainMessage = `üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

–ü—Ä–∏–≤–µ—Ç, ${userData.name || '—Ä–æ–¥–∏—Ç–µ–ª—å'}! 
${userData.name ? `${userData.name} (${userData.age} ${getAgeText(userData.age)}) –∂–¥–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞–Ω—è—Ç–∏–π! üéØ` : ''}

–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:`;

    bot.editMessageText(mainMessage, {
      chat_id: chatId,
      message_id: msg.message_id,
      parse_mode: 'HTML',
      ...keyboards.main
    });
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö callback'–æ–≤
  switch (data) {
    case 'activities':
      handleActivitiesMenu(chatId, msg.message_id);
      break;
    case 'progress':
      handleProgressMenu(chatId, msg.message_id);
      break;
    case 'library':
      handleLibraryMenu(chatId, msg.message_id);
      break;
    case 'notifications':
      handleNotificationsMenu(chatId, msg.message_id);
      break;
    case 'settings':
      handleSettingsMenu(chatId, msg.message_id);
      break;
    case 'premium':
      handlePremiumMenu(chatId, msg.message_id);
      break;
    case 'all_activities':
      handleAllActivities(chatId, msg.message_id);
      break;
    default:
      if (data.startsWith('category_')) {
        const category = data.split('_')[1];
        handleCategoryActivities(chatId, msg.message_id, category);
      } else if (data.startsWith('activity_')) {
        const activityId = parseInt(data.split('_')[1]);
        handleActivityDetail(chatId, msg.message_id, activityId);
      } else if (data.startsWith('start_activity_')) {
        const activityId = parseInt(data.split('_')[2]);
        handleStartActivity(chatId, activityId);
      } else if (data.startsWith('materials_')) {
        const activityId = parseInt(data.split('_')[1]);
        handleActivityMaterials(chatId, activityId);
      } else if (data.startsWith('instructions_')) {
        const activityId = parseInt(data.split('_')[1]);
        handleActivityInstructions(chatId, activityId);
      }
      break;
  }
});

// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–Ω—é
function handleActivitiesMenu(chatId, messageId = null) {
  const userData = getUserData(chatId);
  const activities = getActivitiesForAge(userData.age);
  const freeCount = activities.filter(a => !a.premium).length;
  const premiumCount = activities.filter(a => a.premium).length;
  
  const activitiesMessage = `üéØ <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è ${userData.name || '—Ä–µ–±–µ–Ω–∫–∞'}</b>

–í–æ–∑—Ä–∞—Å—Ç: ${userData.age} ${getAgeText(userData.age)}
–î–æ—Å—Ç—É–ø–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${activities.length}
üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö: ${freeCount}
üëë –ü—Ä–µ–º–∏—É–º: ${premiumCount}

–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:`;

  const options = {
    chat_id: chatId,
    parse_mode: 'HTML',
    ...keyboards.activities(userData.age)
  };

  if (messageId) {
    options.message_id = messageId;
    bot.editMessageText(activitiesMessage, options);
  } else {
    bot.sendMessage(chatId, activitiesMessage, options);
  }
}

function handleAllActivities(chatId, messageId) {
  const userData = getUserData(chatId);
  const activities = getActivitiesForAge(userData.age);
  
  if (activities.length === 0) {
    bot.editMessageText(`üòî –ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ ${userData.age} ${getAgeText(userData.age)}.

–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º –±–æ–ª—å—à–µ –∑–∞–Ω—è—Ç–∏–π!`, {
      chat_id: chatId,
      message_id: messageId,
      ...keyboards.back_to_activities
    });
    return;
  }

  let message = `üìã <b>–í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (${userData.age} ${getAgeText(userData.age)})</b>\n\n`;
  
  const keyboard = [];
  
  activities.forEach((activity, index) => {
    const premiumIcon = activity.premium && !userData.isPremium ? 'üîí ' : '';
    message += `${index + 1}. ${premiumIcon}${activity.icon} ${activity.title}\n`;
    message += `   ‚è±Ô∏è ${activity.duration} | ${activity.category}\n\n`;
    
    keyboard.push([{
      text: `${premiumIcon}${activity.icon} ${activity.title}`,
      callback_data: `activity_${activity.id}`
    }]);
  });
  
  keyboard.push([{ text: '‚Üê –ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data: 'activities' }]);
  
  bot.editMessageText(message, {
    chat_id: chatId,
    message_id: messageId,
    parse_mode: 'HTML',
    reply_markup: { inline_keyboard: keyboard }
  });
}

function handleCategoryActivities(chatId, messageId, category) {
  const userData = getUserData(chatId);
  const allActivities = getActivitiesForAge(userData.age);
  const activities = allActivities.filter(a => a.category === category);
  
  if (activities.length === 0) {
    bot.editMessageText(`üòî –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}" –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ ${userData.age} ${getAgeText(userData.age)}.`, {
      chat_id: chatId,
      message_id: messageId,
      ...keyboards.back_to_activities
    });
    return;
  }

  let message = `üéØ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category}</b>\n\n`;
  
  const keyboard = [];
  
  activities.forEach(activity => {
    const premiumIcon = activity.premium && !userData.isPremium ? 'üîí ' : '';
    message += `${premiumIcon}${activity.icon} <b>${activity.title}</b>\n`;
    message += `‚è±Ô∏è ${activity.duration} | ${activity.difficulty}\n`;
    message += `üìù ${activity.description}\n\n`;
    
    keyboard.push([{
      text: `${premiumIcon}–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ "${activity.title}"`,
      callback_data: `activity_${activity.id}`
    }]);
  });
  
  keyboard.push([{ text: '‚Üê –ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data: 'activities' }]);
  
  bot.editMessageText(message, {
    chat_id: chatId,
    message_id: messageId,
    parse_mode: 'HTML',
    reply_markup: { inline_keyboard: keyboard }
  });
}

function handleActivityDetail(chatId, messageId, activityId) {
  const userData = getUserData(chatId);
  const allActivities = Object.values(activitiesDatabase).flat();
  const activity = allActivities.find(a => a.id === activityId);
  
  if (!activity) {
    bot.editMessageText('‚ùå –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', {
      chat_id: chatId,
      message_id: messageId,
      ...keyboards.back_to_activities
    });
    return;
  }

  if (activity.premium && !userData.isPremium) {
    bot.editMessageText(`üîí <b>–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</b>

${formatActivity(activity, userData.isPremium)}

‚ùó –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–∞ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞.`, {
      chat_id: chatId,
      message_id: messageId,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üëë –û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–º–∏—É–º', callback_data: 'premium' }],
          [{ text: '‚Üê –ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º', callback_data: 'activities' }]
        ]
      }
    });
    return;
  }

  bot.editMessageText(formatActivity(activity, userData.isPremium), {
    chat_id: chatId,
    message_id: messageId,
    parse_mode: 'HTML',
    ...keyboards.activity_detail(activityId, userData.isPremium)
  });
}

function handleStartActivity(chatId, activityId) {
  const userData = getUserData(chatId);
  const allActivities = Object.values(activitiesDatabase).flat();
  const activity = allActivities.find(a => a.id === activityId);
  
  if (!activity) {
    bot.sendMessage(chatId, '‚ùå –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    return;
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  userData.totalActivities += 1;
  userData.lastActivity = activity.title;
  userData.streak += 1;
  users.set(chatId, userData);

  const startMessage = `üöÄ <b>–ù–∞—á–∏–Ω–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!</b>

${activity.icon} <b>${activity.title}</b>
‚è±Ô∏è –í—Ä–µ–º—è: ${activity.duration}

üéØ <b>–¶–µ–ª—å:</b> ${activity.benefits}

üí° <b>–°–æ–≤–µ—Ç:</b> –ù–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞! –•–≤–∞–ª–∏—Ç–µ ${userData.name || '—Ä–µ–±–µ–Ω–∫–∞'} –∑–∞ –∫–∞–∂–¥—ã–π —É—Å–ø–µ—Ö.

–£–¥–∞—á–∏! üçÄ`;

  bot.sendMessage(chatId, startMessage, {
    parse_mode: 'HTML',
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data: `instructions_${activityId}` },
          { text: 'üì¶ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã', callback_data: `materials_${activityId}` }
        ],
        [
          { text: '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ', callback_data: `complete_activity_${activityId}` }
        ],
        [
          { text: '‚Üê –ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º', callback_data: 'activities' }
        ]
      ]
    }
  });

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    const timeReminders = [
      '‚è∞ –ü—Ä–æ—à–ª–æ 5 –º–∏–Ω—É—Ç! –ö–∞–∫ –¥–µ–ª–∞?',
      'üîî –ü–æ–ª–æ–≤–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–ª–∞!',
      '‚ö° –û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ!'
    ];
    
    const reminder = timeReminders[Math.floor(Math.random() * timeReminders.length)];
    bot.sendMessage(chatId, reminder);
  }, 5000);
}

function handleActivityMaterials(chatId, activityId) {
  const allActivities = Object.values(activitiesDatabase).flat();
  const activity = allActivities.find(a => a.id === activityId);
  
  if (!activity) {
    bot.sendMessage(chatId, '‚ùå –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    return;
  }

  bot.sendMessage(chatId, formatMaterials(activity), {
    parse_mode: 'HTML',
    ...keyboards.back_to_activities
  });
}

function handleActivityInstructions(chatId, activityId) {
  const allActivities = Object.values(activitiesDatabase).flat();
  const activity = allActivities.find(a => a.id === activityId);
  
  if (!activity) {
    bot.sendMessage(chatId, '‚ùå –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    return;
  }

  bot.sendMessage(chatId, formatInstructions(activity), {
    parse_mode: 'HTML',
    ...keyboards.back_to_activities
  });
}

function handleProgressMenu(chatId, messageId = null) {
  const userData = getUserData(chatId);
  
  const progressMessage = `üìÖ <b>–ü—Ä–æ–≥—Ä–µ—Å—Å ${userData.name || '—Ä–µ–±–µ–Ω–∫–∞'}</b>

üî• <b>Streak:</b> ${userData.streak} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
üìä <b>–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π:</b> ${userData.totalActivities}
üéØ <b>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> ${userData.lastActivity || '–ï—â–µ –Ω–µ –±—ã–ª–æ'}

üìà <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>
${userData.streak >= 7 ? 'üèÜ –ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è' : '‚è≥ –ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è (–æ—Å—Ç–∞–ª–æ—Å—å: ' + (7 - userData.streak) + ' –¥–Ω–µ–π)'}
${userData.totalActivities >= 10 ? 'üé® –¢–≤–æ—Ä—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π' : '‚è≥ –¢–≤–æ—Ä—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π (–æ—Å—Ç–∞–ª–æ—Å—å: ' + (10 - userData.totalActivities) + ' –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π)'}
${userData.streak >= 30 ? 'üìÖ –ú–µ—Å—è—Ü —Ä–∞–∑–≤–∏—Ç–∏—è' : '‚è≥ –ú–µ—Å—è—Ü —Ä–∞–∑–≤–∏—Ç–∏—è (–æ—Å—Ç–∞–ª–æ—Å—å: ' + (30 - userData.streak) + ' –¥–Ω–µ–π)'}

üí™ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!`;

  const options = {
    chat_id: chatId,
    parse_mode: 'HTML',
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'detailed_stats' },
          { text: 'üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', callback_data: 'achievements' }
        ],
        [
          { text: '‚Üê –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_main' }
        ]
      ]
    }
  };

  if (messageId) {
    options.message_id = messageId;
    bot.editMessageText(progressMessage, options);
  } else {
    bot.sendMessage(chatId, progressMessage, options);
  }
}

function handleLibraryMenu(chatId, messageId = null) {
  const userData = getUserData(chatId);
  
  const libraryMessage = `üìö <b>–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</b>

–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π:

üß† <b>–†–∞–∑–≤–∏—Ç–∏–µ:</b> –°—Ç–∞—Ç—å–∏ –æ —Ä–∞–∑–≤–∏—Ç–∏–∏ –¥–µ—Ç–µ–π
üè• <b>–ó–¥–æ—Ä–æ–≤—å–µ:</b> –°–æ–≤–µ—Ç—ã –ø–µ–¥–∏–∞—Ç—Ä–æ–≤
üìñ <b>–û–±—É—á–µ–Ω–∏–µ:</b> –ú–µ—Ç–æ–¥–∏–∫–∏ –∏ –ø–æ–¥—Ö–æ–¥—ã
üí≠ <b>–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è:</b> –î–µ—Ç—Å–∫–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è
üçé <b>–ü–∏—Ç–∞–Ω–∏–µ:</b> –ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
üõ°Ô∏è <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b> –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–æ–º–∞

${userData.isPremium ? 'üëë –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º!' : 'üîí –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—å–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ'}`;

  const options = {
    chat_id: chatId,
    parse_mode: 'HTML',
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üß† –†–∞–∑–≤–∏—Ç–∏–µ', callback_data: 'library_development' },
          { text: 'üè• –ó–¥–æ—Ä–æ–≤—å–µ', callback_data: 'library_health' }
        ],
        [
          { text: 'üìñ –û–±—É—á–µ–Ω–∏–µ', callback_data: 'library_education' },
          { text: 'üí≠ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', callback_data: 'library_psychology' }
        ],
        [
          { text: 'üçé –ü–∏—Ç–∞–Ω–∏–µ', callback_data: 'library_nutrition' },
          { text: 'üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', callback_data: 'library_safety' }
        ],
        [
          { text: 'üé• –í–∏–¥–µ–æ—É—Ä–æ–∫–∏', callback_data: 'library_videos' }
        ],
        [
          { text: '‚Üê –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_main' }
        ]
      ]
    }
  };

  if (messageId) {
    options.message_id = messageId;
    bot.editMessageText(libraryMessage, options);
  } else {
    bot.sendMessage(chatId, libraryMessage, options);
  }
}

function handleNotificationsMenu(chatId, messageId = null) {
  const userData = getUserData(chatId);
  
  const notificationsMessage = `üîî <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π</b>

–°—Ç–∞—Ç—É—Å: ${userData.notificationsEnabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω—ã' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã'}
–í—Ä–µ–º—è: ${userData.notificationTime}
–¢–∏–ø: ${userData.reminderType === 'motivational' ? '–ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ' : 
       userData.reminderType === 'simple' ? '–ü—Ä–æ—Å—Ç—ã–µ' : '–°–æ streak'}

${userData.notificationsEnabled ? 
  `üì± –°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: —Å–µ–≥–æ–¥–Ω—è –≤ ${userData.notificationTime}` : 
  'üí° –í–∫–ª—é—á–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã–≤–∞—Ç—å –æ –∑–∞–Ω—è—Ç–∏—è—Ö!'}

–ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è:
"${getRandomMessage(userData.reminderType, userData)}"`;

  const options = {
    chat_id: chatId,
    parse_mode: 'HTML',
    reply_markup: {
      inline_keyboard: [
        [
          { 
            text: userData.notificationsEnabled ? 'üîï –í—ã–∫–ª—é—á–∏—Ç—å' : 'üîî –í–∫–ª—é—á–∏—Ç—å', 
            callback_data: 'toggle_notifications' 
          }
        ],
        [
          { text: '‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è', callback_data: 'change_time' },
          { text: 'üìù –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π', callback_data: 'change_reminder_type' }
        ],
        [
          { text: 'üì® –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data: 'test_notification' }
        ],
        [
          { text: '‚Üê –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_main' }
        ]
      ]
    }
  };

  if (messageId) {
    options.message_id = messageId;
    bot.editMessageText(notificationsMessage, options);
  } else {
    bot.sendMessage(chatId, notificationsMessage, options);
  }
}

function handleSettingsMenu(chatId, messageId = null) {
  const userData = getUserData(chatId);
  
  const settingsMessage = `‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</b>

üë§ <b>–ò–º—è —Ä–µ–±–µ–Ω–∫–∞:</b> ${userData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üéÇ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> ${userData.age} ${getAgeText(userData.age)}
üëë <b>–°—Ç–∞—Ç—É—Å:</b> ${userData.isPremium ? '–ü—Ä–µ–º–∏—É–º' : '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π'}
üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b> ${userData.notificationsEnabled ? '–í–∫–ª—é—á–µ–Ω—ã' : '–í—ã–∫–ª—é—á–µ–Ω—ã'}

–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:`;

  const options = {
    chat_id: chatId,
    parse_mode: 'HTML',
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üë§ –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è', callback_data: 'change_name' },
          { text: 'üéÇ –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç', callback_data: 'change_age' }
        ],
        [
          { text: 'üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è', callback_data: 'notifications' },
          { text: 'üëë –ü—Ä–µ–º–∏—É–º', callback_data: 'premium' }
        ],
        [
          { text: 'üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö', callback_data: 'export_data' },
          { text: 'üóëÔ∏è –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞', callback_data: 'reset_progress' }
        ],
        [
          { text: '‚Üê –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_main' }
        ]
      ]
    }
  };

  if (messageId) {
    options.message_id = messageId;
    bot.editMessageText(settingsMessage, options);
  } else {
    bot.sendMessage(chatId, settingsMessage, options);
  }
}

function handlePremiumMenu(chatId, messageId = null) {
  const userData = getUserData(chatId);
  
  if (userData.isPremium) {
    const premiumMessage = `üëë <b>–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–µ–Ω!</b>

‚úÖ –í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ä–∞–∑–≤–∏—Ç–∏—è
‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã

üíé –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ!`;

    const options = {
      chat_id: chatId,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üìä –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'premium_stats' },
            { text: 'üìÑ –û—Ç—á–µ—Ç—ã', callback_data: 'premium_reports' }
          ],
          [
            { text: 'üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', callback_data: 'personal_programs' }
          ],
          [
            { text: '‚Üê –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_main' }
          ]
        ]
      }
    };

    if (messageId) {
      options.message_id = messageId;
      bot.editMessageText(premiumMessage, options);
    } else {
      bot.sendMessage(chatId, premiumMessage, options);
    }
  } else {
    const premiumMessage = `üëë <b>–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞</b>

üöÄ <b>–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</b>

üéØ <b>–í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</b> - –î–æ—Å—Ç—É–ø –∫ 50+ –ø—Ä–µ–º–∏—É–º –∑–∞–Ω—è—Ç–∏—è–º
üìä <b>–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</b> - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –æ —Ä–∞–∑–≤–∏—Ç–∏–∏
üé® <b>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b> - –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã —Ä–∞–∑–≤–∏—Ç–∏—è
üìö <b>–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</b> - –°—Ç–∞—Ç—å–∏ –∏ –≤–∏–¥–µ–æ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
üîî <b>–£–º–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</b> - –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
üë®‚Äç‚öïÔ∏è <b>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</b> - –î–æ—Å—Ç—É–ø –∫ –¥–µ—Ç—Å–∫–∏–º –ø—Å–∏—Ö–æ–ª–æ–≥–∞–º
üìÑ <b>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã</b> - –ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑–≤–∏—Ç–∏—è

üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> 299‚ÇΩ/–º–µ—Å—è—Ü
üéÅ <b>–ü–µ—Ä–≤—ã–µ 7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ!</b>`;

    const options = {
      chat_id: chatId,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üéÅ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ', callback_data: 'start_trial' }
          ],
          [
            { text: 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'subscribe_premium' }
          ],
          [
            { text: '‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', callback_data: 'premium_faq' }
          ],
          [
            { text: '‚Üê –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_main' }
          ]
        ]
      }
    };

    if (messageId) {
      options.message_id = messageId;
      bot.editMessageText(premiumMessage, options);
    } else {
      bot.sendMessage(chatId, premiumMessage, options);
    }
  }
}

// –°–∏—Å—Ç–µ–º–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
function scheduleNotifications() {
  setInterval(() => {
    const now = new Date();
    const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;
    
    users.forEach((userData, chatId) => {
      if (userData.notificationsEnabled && userData.notificationTime === currentTime) {
        sendNotification(chatId, userData);
      }
    });
  }, 60000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
}

function sendNotification(chatId, userData) {
  const message = getRandomMessage(userData.reminderType, userData);
  
  bot.sendMessage(chatId, `üîî ${message}`, {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üéØ –í—ã–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', callback_data: 'activities' },
          { text: 'üìÖ –ü—Ä–æ–≥—Ä–µ—Å—Å', callback_data: 'progress' }
        ],
        [
          { text: '‚è∞ –ù–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑ —á–∞—Å', callback_data: 'snooze_1h' },
          { text: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data: 'snooze_today' }
        ]
      ]
    }
  });
}

// Webhook endpoint
app.post(`/webhook/${BOT_TOKEN}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
bot.on('callback_query', (callbackQuery) => {
  const msg = callbackQuery.message;
  const chatId = msg.chat.id;
  const data = callbackQuery.data;
  const userData = getUserData(chatId);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö callback'–æ–≤
  if (data === 'toggle_notifications') {
    userData.notificationsEnabled = !userData.notificationsEnabled;
    users.set(chatId, userData);
    
    bot.answerCallbackQuery(callbackQuery.id, {
      text: userData.notificationsEnabled ? 'üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã!' : 'üîï –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã'
    });
    
    handleNotificationsMenu(chatId, msg.message_id);
  }
  
  else if (data === 'test_notification') {
    bot.answerCallbackQuery(callbackQuery.id);
    sendNotification(chatId, userData);
  }
  
  else if (data === 'start_trial') {
    userData.isPremium = true;
    users.set(chatId, userData);
    
    bot.answerCallbackQuery(callbackQuery.id, {
      text: 'üéâ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!'
    });
    
    bot.sendMessage(chatId, `üéÅ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–µ–º–∏—É–º!</b>

–í–∞—à 7-–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞—á–∞–ª—Å—è! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º:

‚úÖ –í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ä–∞–∑–≤–∏—Ç–∏—è
‚úÖ –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å! üöÄ`, {
      parse_mode: 'HTML',
      ...keyboards.main
    });
  }
  
  else if (data === 'subscribe_premium') {
    bot.answerCallbackQuery(callbackQuery.id);
    
    bot.sendMessage(chatId, `üí≥ <b>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏</b>

–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∏:

1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ 299‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É: 
   \`1234 5678 9012 3456\`

2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã –≤ —á–∞—Ç

3. –ü—Ä–µ–º–∏—É–º –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!

üí° –ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π:`, {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 299‚ÇΩ', url: 'https://your-payment-link.com' }],
          [{ text: '‚Üê –ù–∞–∑–∞–¥', callback_data: 'premium' }]
        ]
      }
    });
  }
  
  else if (data.startsWith('complete_activity_')) {
    const activityId = parseInt(data.split('_')[2]);
    const allActivities = Object.values(activitiesDatabase).flat();
    const activity = allActivities.find(a => a.id === activityId);
    
    bot.answerCallbackQuery(callbackQuery.id, {
      text: 'üéâ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!'
    });
    
    bot.sendMessage(chatId, `üéâ <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>

${activity.icon} <b>${activity.title}</b>
‚úÖ –í—Ä–µ–º—è –ø–æ—Ç—Ä–∞—á–µ–Ω–æ —Å –ø–æ–ª—å–∑–æ–π!

üèÜ Streak: ${userData.streak} –¥–Ω–µ–π
üìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${userData.totalActivities}

${userData.name || '–†–µ–±–µ–Ω–æ–∫'} –º–æ–ª–æ–¥–µ—Ü! üëè`, {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üì∏ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º', callback_data: 'share_result' },
            { text: '‚≠ê –û—Ü–µ–Ω–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ', callback_data: `rate_activity_${activityId}` }
          ],
          [
            { text: 'üéØ –°–ª–µ–¥—É—é—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', callback_data: 'activities' },
            { text: 'üìÖ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å', callback_data: 'progress' }
          ]
        ]
      }
    });
  }
  
  else if (data === 'change_age') {
    bot.answerCallbackQuery(callbackQuery.id);
    
    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç:', {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '1 –≥–æ–¥', callback_data: 'set_age_1' },
            { text: '2 –≥–æ–¥–∞', callback_data: 'set_age_2' },
            { text: '3 –≥–æ–¥–∞', callback_data: 'set_age_3' }
          ],
          [
            { text: '4 –≥–æ–¥–∞', callback_data: 'set_age_4' },
            { text: '5 –ª–µ—Ç', callback_data: 'set_age_5' },
            { text: '6 –ª–µ—Ç', callback_data: 'set_age_6' }
          ],
          [
            { text: '7 –ª–µ—Ç', callback_data: 'set_age_7' }
          ],
          [
            { text: '‚Üê –û—Ç–º–µ–Ω–∞', callback_data: 'settings' }
          ]
        ]
      }
    });
  }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
app.listen(PORT, () => {
  console.log(`üöÄ Telegram Bot —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üì± Webhook URL: ${WEBHOOK_URL}/${BOT_TOKEN}`);
  scheduleNotifications();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (reason, promise) => {
  console.log('Unhandled Rejection at:', promise, 'reason:', reason);
});

process.on('uncaughtException', (error) => {
  console.log('Uncaught Exception:', error);
});

/* 
=== –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ ===

1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
   npm install express node-telegram-bot-api

2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞:
   - –ù–∞–ø–∏—à–∏—Ç–µ @BotFather –≤ Telegram
   - –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /newbot
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω

3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
   - –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN_HERE' –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
   - –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω –≤ WEBHOOK_URL

4. –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ:
   - –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (Heroku, VPS, etc.)
   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ—Ä—Ç –¥–æ—Å—Ç—É–ø–µ–Ω
   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node bot.js

5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook:
   curl -X POST "https://api.telegram.org/bot{TOKEN}/setWebhook" \
        -H "Content-Type: application/json" \
        -d '{"url":"https://your-domain.com/webhook/{TOKEN}"}'

6. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (MongoDB, PostgreSQL)
   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É
   - –î–æ–±–∞–≤—å—Ç–µ –∞–Ω–∞–ª–∏—Ç–∏–∫—É
   - –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ —Å –≤–Ω–µ—à–Ω–∏–º–∏ API

=== –§–£–ù–ö–¶–ò–ò –ë–û–¢–ê ===

‚úÖ –ü–æ–ª–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ–Ω—é
‚úÖ –í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–∑ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è  
‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
‚úÖ –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
‚úÖ –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∑–∞–Ω—è—Ç–∏–π
‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤

üöÄ –ë–û–¢ –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!
*/

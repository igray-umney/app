import React, { useState, useEffect } from 'react';

const ChildDevelopmentApp = () => {
  const [currentScreen, setCurrentScreen] = useState('main');
  const [isPremium, setIsPremium] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedActivity, setSelectedActivity] = useState(null);
  const [child, setChild] = useState({
    name: '–ê–Ω–¥—Ä–µ–π',
    age: 2,
    streak: 7
  });

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Telegram
  const [notificationSettings, setNotificationSettings] = useState({
    enabled: false,
    time: '19:00',
    frequency: 'daily',
    reminderType: 'motivational',
    quietHours: {
      enabled: true,
      start: '21:00',
      end: '08:00'
    },
    weekendMode: false,
    customDays: {
      monday: true,
      tuesday: true,
      wednesday: true,
      thursday: true,
      friday: true,
      saturday: true,
      sunday: false
    }
  });

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  const [telegramStatus, setTelegramStatus] = useState({
    connected: false,
    checking: false,
    error: null,
    userId: null
  });

  // –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const [progressData] = useState({
    weeklyActivities: [true, true, false, true, true, false, false],
    totalActivities: 45,
    totalTime: 12.5,
    skillsProgress: {
      motor: 85,
      speech: 70,
      logic: 60,
      creativity: 90,
      development: 75
    },
    achievements: [
      { id: 1, title: '–ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è', description: '7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥', icon: 'üéØ', unlocked: true },
      { id: 2, title: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π', description: '10 —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π', icon: 'üé®', unlocked: true },
      { id: 3, title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', description: '15 –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–≥—Ä', icon: 'üîç', unlocked: false, progress: 12 },
      { id: 4, title: '–ú–µ—Å—è—Ü —Ä–∞–∑–≤–∏—Ç–∏—è', description: '30 –¥–Ω–µ–π –∑–∞–Ω—è—Ç–∏–π', icon: 'üìÖ', unlocked: false, progress: 15 }
    ],
    recentActivities: [
      { name: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º', category: '–õ–æ–≥–∏–∫–∞', date: '2025-01-13', duration: 20 },
      { name: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏', category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', date: '2025-01-13', duration: 25 },
      { name: '–ü—Ä–æ—Å—Ç—ã–µ –ø–∞–∑–ª—ã', category: '–õ–æ–≥–∏–∫–∞', date: '2025-01-12', duration: 15 }
    ]
  });

  // –ë–∞–∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
  const [libraryContent] = useState({
    categories: [
      { id: 'development', name: '–†–∞–∑–≤–∏—Ç–∏–µ', icon: 'üß†', count: 23 },
      { id: 'health', name: '–ó–¥–æ—Ä–æ–≤—å–µ', icon: 'üè•', count: 18 },
      { id: 'education', name: '–û–±—É—á–µ–Ω–∏–µ', icon: 'üìñ', count: 31 },
      { id: 'psychology', name: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', icon: 'üí≠', count: 15 },
      { id: 'nutrition', name: '–ü–∏—Ç–∞–Ω–∏–µ', icon: 'üçé', count: 12 },
      { id: 'safety', name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', icon: 'üõ°Ô∏è', count: 9 }
    ],
    articles: [
      {
        id: 1,
        title: '–ö–∞–∫ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Ä–µ—á—å —É —Ä–µ–±–µ–Ω–∫–∞ 2-3 –ª–µ—Ç',
        description: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–µ—á–µ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –≤ —Ä–∞–Ω–Ω–µ–º –≤–æ–∑—Ä–∞—Å—Ç–µ',
        readTime: '5 –º–∏–Ω',
        category: 'development',
        premium: false,
        author: '–õ–æ–≥–æ–ø–µ–¥ –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
        rating: 4.8,
        views: 1247
      },
      {
        id: 2,
        title: '–õ—É—á—à–∏–µ –∏–≥—Ä—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –º–µ–ª–∫–æ–π –º–æ—Ç–æ—Ä–∏–∫–∏',
        description: '–ü—Ä–æ—Å—Ç—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –∏–≥—Ä—ã –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º—ã—à—Ü —Ä—É–∫ –∏ –ø–∞–ª—å—Ü–µ–≤',
        readTime: '7 –º–∏–Ω',
        category: 'development',
        premium: false,
        author: '–ü–µ–¥–∏–∞—Ç—Ä –ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
        rating: 4.9,
        views: 987
      },
      {
        id: 3,
        title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ: —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π',
        description: '–ß—Ç–æ –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–µ—Ä–µ–¥ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –≤ –ø–µ—Ä–≤—ã–π –∫–ª–∞—Å—Å',
        readTime: '10 –º–∏–Ω',
        category: 'education',
        premium: true,
        author: '–ü–µ–¥–∞–≥–æ–≥ –û–ª—å–≥–∞ –í–æ–ª–∫–æ–≤–∞',
        rating: 4.9,
        views: 1543
      },
      {
        id: 4,
        title: '–î–µ—Ç—Å–∫–∏–µ —Å—Ç—Ä–∞—Ö–∏: –∫–∞–∫ –ø–æ–º–æ—á—å —Ä–µ–±–µ–Ω–∫—É',
        description: '–†–∞–±–æ—Ç–∞–µ–º —Å —Ç–∏–ø–∏—á–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ö–∞–º–∏ –¥–µ—Ç–µ–π —Ä–∞–∑–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞',
        readTime: '6 –º–∏–Ω',
        category: 'psychology',
        premium: true,
        author: '–ü—Å–∏—Ö–æ–ª–æ–≥ –î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
        rating: 4.6,
        views: 445
      },
      {
        id: 5,
        title: '–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –¥–æ—à–∫–æ–ª—å–Ω–∏–∫–æ–≤',
        description: '–°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –¥–µ—Ç–µ–π 3-6 –ª–µ—Ç',
        readTime: '8 –º–∏–Ω',
        category: 'nutrition',
        premium: true,
        author: '–î–∏–µ—Ç–æ–ª–æ–≥ –ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
        rating: 4.7,
        views: 756
      }
    ],
    videos: [
      {
        id: 1,
        title: '–ú–∞—Å—Å–∞–∂ –¥–ª—è –º–∞–ª—ã—à–µ–π: —É–∫—Ä–µ–ø–ª—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ',
        duration: '15 –º–∏–Ω',
        category: 'health',
        premium: false,
        thumbnail: 'üë∂',
        views: 2341
      },
      {
        id: 2,
        title: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è —Å –¥–µ—Ç—å–º–∏ 4-6 –ª–µ—Ç',
        duration: '22 –º–∏–Ω',
        category: 'development',
        premium: true,
        thumbnail: 'üé®',
        views: 1567
      }
    ]
  });

  // –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –±–∞–∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
  const [activitiesDatabase] = useState({
    1: [
      {
        id: 1,
        title: '–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞',
        description: '–ò—Å—Å–ª–µ–¥—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã: –ø–µ—Å–æ–∫, –∫—Ä—É–ø—ã, —Ç–∫–∞–Ω–∏',
        duration: '15 –º–∏–Ω',
        category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
        premium: false,
        icon: 'ü§≤',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–ö–æ—Ä–æ–±–∫–∞', '–†–∏—Å/–≥—Ä–µ—á–∫–∞', '–¢–∫–∞–Ω–∏ —Ä–∞–∑–Ω–æ–π —Ç–µ–∫—Å—Ç—É—Ä—ã', '–ú–µ–ª–∫–∏–µ –∏–≥—Ä—É—à–∫–∏'],
        instructions: [
          '–í–æ–∑—å–º–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –∫–æ—Ä–æ–±–∫—É –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä',
          '–ù–∞–ø–æ–ª–Ω–∏—Ç–µ –µ—ë —Ä–∏—Å–æ–º, –≥—Ä–µ—á–∫–æ–π –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫—Ä—É–ø–æ–π',
          '–î–æ–±–∞–≤—å—Ç–µ –∫—É—Å–æ—á–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∫–∞–Ω–µ–π',
          '–°–ø—Ä—è—á—å—Ç–µ –º–µ–ª–∫–∏–µ –∏–≥—Ä—É—à–∫–∏ –≤ –Ω–∞–ø–æ–ª–Ω–∏—Ç–µ–ª–µ',
          '–ü—É—Å—Ç—å –º–∞–ª—ã—à –∏—Å—Å–ª–µ–¥—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä—É–∫–∞–º–∏',
          '–ü–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –∏ –Ω–∞–∑—ã–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –≤–Ω–∏–º–∞–Ω–∏—è',
        ageRange: '12-18 –º–µ—Å—è—Ü–µ–≤'
      },
      {
        id: 2,
        title: '–ò–≥—Ä–∞ —Å –≤–æ–¥–æ–π',
        description: '–ü–µ—Ä–µ–ª–∏–≤–∞–µ–º –≤–æ–¥—É –º–µ–∂–¥—É –µ–º–∫–æ—Å—Ç—è–º–∏, —Ä–∞–∑–≤–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é',
        duration: '20 –º–∏–Ω',
        category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
        premium: false,
        icon: 'üíß',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['2-3 –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞', '–í–æ–¥–∞', '–ì—É–±–∫–∞', '–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ'],
        instructions: [
          '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞',
          '–ù–∞–ª–µ–π—Ç–µ –≤–æ–¥—É –≤ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö',
          '–ü–æ–∫–∞–∂–∏—Ç–µ –º–∞–ª—ã—à—É, –∫–∞–∫ –ø–µ—Ä–µ–ª–∏–≤–∞—Ç—å –≤–æ–¥—É',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ',
          '–î–∞–π—Ç–µ –≥—É–±–∫—É - –ø—É—Å—Ç—å –≤—ã–∂–∏–º–∞–µ—Ç –≤–æ–¥—É',
          '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ –¥–ª—è —É–±–æ—Ä–∫–∏!'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—è, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è',
        ageRange: '10-24 –º–µ—Å—è—Ü–∞'
      },
      {
        id: 3,
        title: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
        description: '–ò–∑—É—á–∞–µ–º –∑–≤—É–∫–∏: –ø–æ–≥—Ä–µ–º—É—à–∫–∏, –±–∞—Ä–∞–±–∞–Ω, –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏',
        duration: '10 –º–∏–Ω',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        premium: true,
        icon: 'üéµ',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–ü–æ–≥—Ä–µ–º—É—à–∫–∏', '–ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏', '–°–∞–º–æ–¥–µ–ª—å–Ω—ã–π –±–∞—Ä–∞–±–∞–Ω', '–õ–æ–∂–∫–∏'],
        instructions: [
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–∑–Ω—ã–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
          '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∏–∑–≤–ª–µ–∫–∞—Ç—å –∑–≤—É–∫–∏ –∏–∑ –∫–∞–∂–¥–æ–≥–æ',
          '–ü—É—Å—Ç—å –º–∞–ª—ã—à –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∞–º',
          '–ò–≥—Ä–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ä–∏—Ç–º—ã',
          '–ü–æ–π—Ç–µ –ø–µ—Å–µ–Ω–∫–∏ –ø–æ–¥ –∞–∫–∫–æ–º–ø–∞–Ω–µ–º–µ–Ω—Ç',
          '–¢–∞–Ω—Ü—É–π—Ç–µ –ø–æ–¥ –º—É–∑—ã–∫—É'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Å–ª—É—Ö, —á—É–≤—Å—Ç–≤–æ —Ä–∏—Ç–º–∞, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏–π, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏',
        ageRange: '8-18 –º–µ—Å—è—Ü–µ–≤'
      }
    ],
    2: [
      {
        id: 4,
        title: '–°–æ–±–∏—Ä–∞–µ–º –ø–∏—Ä–∞–º–∏–¥–∫—É',
        description: '–†–∞–∑–≤–∏–≤–∞–µ–º –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤',
        duration: '15 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üìê',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–ü–∏—Ä–∞–º–∏–¥–∫–∞ —Å –∫–æ–ª—å—Ü–∞–º–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞'],
        instructions: [
          '–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É –ø–∏—Ä–∞–º–∏–¥–∫—É',
          '–†–∞–∑–±–µ—Ä–∏—Ç–µ –µ—ë –Ω–∞ —á–∞—Å—Ç–∏',
          '–û–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–Ω—è—Ç–∏—è "–±–æ–ª—å—à–æ–π" –∏ "–º–∞–ª–µ–Ω—å–∫–∏–π"',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–æ–±—Ä–∞—Ç—å —Å–∞–º',
          '–ü–æ–º–æ–≥–∞–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏',
          '–•–≤–∞–ª–∏—Ç–µ –∑–∞ –∫–∞–∂–¥–æ–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —Ç–µ—Ä–ø–µ–Ω–∏–µ',
        ageRange: '18-30 –º–µ—Å—è—Ü–µ–≤'
      },
      {
        id: 5,
        title: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏',
        description: '–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –∫—Ä–∞—Å–∫–∞–º–∏',
        duration: '25 –º–∏–Ω',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        premium: false,
        icon: 'üé®',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ü–∞–ª—å—á–∏–∫–æ–≤—ã–µ –∫—Ä–∞—Å–∫–∏', '–ë–æ–ª—å—à–æ–π –ª–∏—Å—Ç –±—É–º–∞–≥–∏', '–í–ª–∞–∂–Ω—ã–µ —Å–∞–ª—Ñ–µ—Ç–∫–∏'],
        instructions: [
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ',
          '–ù–∞–¥–µ–Ω—å—Ç–µ –Ω–∞ —Ä–µ–±–µ–Ω–∫–∞ —Å—Ç–∞—Ä—É—é –æ–¥–µ–∂–¥—É',
          '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –º–∞–∫–∞—Ç—å –ø–∞–ª–µ—Ü –≤ –∫—Ä–∞—Å–∫—É',
          '–ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤',
          '–†–∏—Å—É–π—Ç–µ –≤–º–µ—Å—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–≥—É—Ä—ã',
          '–ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Ç–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ —Ä–µ–±–µ–Ω–∫–∞'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, —Ü–≤–µ—Ç–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è',
        ageRange: '18-36 –º–µ—Å—è—Ü–µ–≤'
      },
      {
        id: 6,
        title: '–õ–µ–ø–∫–∞ –∏–∑ –ø–ª–∞—Å—Ç–∏–ª–∏–Ω–∞',
        description: '–†–∞–∑–≤–∏–≤–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É',
        duration: '30 –º–∏–Ω',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        premium: true,
        icon: 'üé≠',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ú—è–≥–∫–∏–π –ø–ª–∞—Å—Ç–∏–ª–∏–Ω', '–î–æ—Å–∫–∞ –¥–ª—è –ª–µ–ø–∫–∏', '–ü—Ä–æ—Å—Ç—ã–µ —Ñ–æ—Ä–º–æ—á–∫–∏'],
        instructions: [
          '–†–∞–∑–æ–≥—Ä–µ–π—Ç–µ –ø–ª–∞—Å—Ç–∏–ª–∏–Ω –≤ —Ä—É–∫–∞—Ö',
          '–ü–æ–∫–∞–∂–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–µ–º—ã: –∫–∞—Ç–∞–Ω–∏–µ, —Å–ø–ª—é—â–∏–≤–∞–Ω–∏–µ',
          '–õ–µ–ø–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–≥—É—Ä—ã: —à–∞—Ä–∏–∫–∏, –∫–æ–ª–±–∞—Å–∫–∏',
          '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–æ—á–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–≥—É—Ä',
          '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö',
          '–ù–µ —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ –∏–¥–µ–∞–ª—å–Ω–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —É—Å–∏–¥—á–∏–≤–æ—Å—Ç—å',
        ageRange: '24-36 –º–µ—Å—è—Ü–µ–≤'
      }
    ],
    3: [
      {
        id: 7,
        title: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º',
        description: '–ò–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è',
        duration: '20 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üåà',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–¶–≤–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã', '4-5 –∫–æ—Ä–æ–±–æ—á–µ–∫ –∏–ª–∏ –µ–º–∫–æ—Å—Ç–µ–π'],
        instructions: [
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã 4-5 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤',
          '–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É, –∫–∞–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ü–≤–µ—Ç–∞–º',
          '–ù–∞–∑—ã–≤–∞–π—Ç–µ –∫–∞–∂–¥—ã–π —Ü–≤–µ—Ç –ø—Ä–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤',
          '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–º–µ—Å—Ç–µ',
          '–£—Å–ª–æ–∂–Ω–∏—Ç–µ –∑–∞–¥–∞—á—É, –¥–æ–±–∞–≤–∏–≤ –±–æ–ª—å—à–µ —Ü–≤–µ—Ç–æ–≤'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –≤–Ω–∏–º–∞–Ω–∏–µ, —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å',
        ageRange: '2-4 –≥–æ–¥–∞'
      },
      {
        id: 8,
        title: '–ü—Ä–æ—Å—Ç—ã–µ –ø–∞–∑–ª—ã',
        description: '–ü–∞–∑–ª—ã –∏–∑ 4-6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ä–∞–∑–≤–∏–≤–∞–µ–º –ª–æ–≥–∏–∫—É',
        duration: '25 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üß©',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ü–∞–∑–ª—ã –∏–∑ 4-6 –∫—Ä—É–ø–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤', '–ö–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞'],
        instructions: [
          '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∑–ª —Å –∫—Ä—É–ø–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏',
          '–ü–æ–∫–∞–∂–∏—Ç–µ –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É',
          '–†–∞–∑–±–µ—Ä–∏—Ç–µ –ø–∞–∑–ª –Ω–∞ —á–∞—Å—Ç–∏',
          '–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–π—Ç–∏ —É–≥–ª–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏',
          '–°–æ–±–∏—Ä–∞–π—Ç–µ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, —Ö–≤–∞–ª—è –∑–∞ —É—Å–ø–µ—Ö–∏',
          '–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–∞–ª–µ–π'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —Ç–µ—Ä–ø–µ–Ω–∏–µ, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É',
        ageRange: '2,5-4 –≥–æ–¥–∞'
      },
      {
        id: 9,
        title: '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã',
        description: '–ò–≥—Ä–∞–µ–º –≤ –¥–æ–∫—Ç–æ—Ä–∞, –ø–æ–≤–∞—Ä–∞, –≤–æ–¥–∏—Ç–µ–ª—è',
        duration: '30 –º–∏–Ω',
        category: '–†–∞–∑–≤–∏—Ç–∏–µ',
        premium: true,
        icon: 'üë®‚Äç‚öïÔ∏è',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ò–≥—Ä—É—à–µ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', '–ö–æ—Å—Ç—é–º—ã –∏–ª–∏ –∞—Ç—Ä–∏–±—É—Ç—ã', '–ö—É–∫–ª—ã/–∏–≥—Ä—É—à–∫–∏'],
        instructions: [
          '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –∏–≥—Ä—ã (–¥–æ–∫—Ç–æ—Ä, –ø–æ–≤–∞—Ä, –∏ —Ç.–¥.)',
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã',
          '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∞–º',
          '–ú–µ–Ω—è–π—Ç–µ—Å—å —Ä–æ–ª—è–º–∏',
          '–ü—Ä–∏–¥—É–º—ã–≤–∞–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏, –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Ä–µ—á—å, —ç–º–ø–∞—Ç–∏—é, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π',
        ageRange: '2,5-5 –ª–µ—Ç'
      }
    ]
  });

  // –ë–∞–∑–∞ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  const [motivationalMessages] = useState({
    daily: [
      'üåü –í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å {name}! –°–µ–≥–æ–¥–Ω—è –∏–∑—É—á–∞–µ–º —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ?',
      'üí´ {name} –∂–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º —Å–µ–≥–æ–¥–Ω—è?',
      'üéØ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º streak! –£–∂–µ {streak} –¥–Ω–µ–π —Ä–∞–∑–≤–∏–≤–∞–µ–º—Å—è –≤–º–µ—Å—Ç–µ!',
      'üöÄ –ü–æ—Ä–∞ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å {name}! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å - –Ω–æ–≤–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ!',
      '‚≠ê {name} –≥–æ—Ç–æ–≤(–∞) –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–Ω–∏—è–º! –ù–∞—á–∏–Ω–∞–µ–º?'
    ],
    streak: [
      'üî• –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! {streak} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥! {name} –Ω–∞—Å—Ç–æ—è—â–∏–π —á–µ–º–ø–∏–æ–Ω!',
      'üëë –ü–æ—Ç—Ä—è—Å–∞—é—â–∏–π streak - {streak} –¥–Ω–µ–π! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!',
      'üèÜ {streak} –¥–Ω–µ–π –∑–∞–Ω—è—Ç–∏–π! {name} —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–º–Ω–µ–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!'
    ],
    encouragement: [
      'üí™ –î–∞–∂–µ 10 –º–∏–Ω—É—Ç –∑–∞–Ω—è—Ç–∏–π –ø—Ä–∏–Ω–µ—Å—É—Ç –ø–æ–ª—å–∑—É {name}!',
      'üå± –ö–∞–∂–¥–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ–≥–∞–µ—Ç {name} —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!',
      '‚ù§Ô∏è {name} –ª—é–±–∏—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è —Å –≤–∞–º–∏ –∑–∞ –∏–≥—Ä–∞–º–∏!'
    ]
  });

  // –ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const [notificationHistory] = useState([
    {
      id: 1,
      message: '–í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å –ê–Ω–¥—Ä–µ–π! –°–µ–≥–æ–¥–Ω—è –∏–∑—É—á–∞–µ–º —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ?',
      timestamp: '2025-01-14 19:00',
      type: 'daily',
      opened: true
    },
    {
      id: 2,
      message: '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥! –ê–Ω–¥—Ä–µ–π –Ω–∞—Å—Ç–æ—è—â–∏–π —á–µ–º–ø–∏–æ–Ω!',
      timestamp: '2025-01-13 19:00',
      type: 'streak',
      opened: true
    }
  ]);

  // API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram
  const generateUserId = () => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–∑ –Ω–∞—Å—Ç–æ—è—â–µ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const savedUserId = localStorage.getItem('telegramUserId');
    if (savedUserId) return savedUserId;
    
    const newUserId = 'demo_' + Math.random().toString(36).substr(2, 9);
    localStorage.setItem('telegramUserId', newUserId);
    return newUserId;
  };

  const checkTelegramStatus = async () => {
    setTelegramStatus(prev => ({ ...prev, checking: true, error: null }));
    
    try {
      const userId = generateUserId();
      // –í –¥–µ–º–æ —Ä–µ–∂–∏–º–µ —Å–∏–º—É–ª–∏—Ä—É–µ–º API –≤—ã–∑–æ–≤
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç API
      const mockResponse = {
        connected: Math.random() > 0.5, // 50% —à–∞–Ω—Å —á—Ç–æ –ø–æ–¥–∫–ª—é—á–µ–Ω
        enabled: notificationSettings.enabled,
        time: notificationSettings.time,
        timezone: '–ú–æ—Å–∫–≤–∞',
        type: notificationSettings.reminderType
      };

      setTelegramStatus({
        connected: mockResponse.connected,
        checking: false,
        error: null,
        userId: userId
      });

      if (mockResponse.connected) {
        setNotificationSettings(prev => ({
          ...prev,
          enabled: mockResponse.enabled,
          time: mockResponse.time,
          reminderType: mockResponse.type
        }));
      }
    } catch (error) {
      setTelegramStatus(prev => ({
        ...prev,
        checking: false,
        error: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É'
      }));
    }
  };

  const connectTelegram = async () => {
    setTelegramStatus(prev => ({ ...prev, checking: true, error: null }));
    
    try {
      const userId = telegramStatus.userId || generateUserId();
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram –±–æ—Ç–∞
      const botUsername = 'razvivay–∫–∞_bot';
      const telegramUrl = `https://t.me/${botUsername}?start=${userId}`;
      window.open(telegramUrl, '_blank');
      
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
      setTelegramStatus({
        connected: true,
        checking: false,
        error: null,
        userId: userId
      });
      
      setNotificationSettings(prev => ({ ...prev, enabled: true }));
      
    } catch (error) {
      setTelegramStatus(prev => ({
        ...prev,
        checking: false,
        error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram'
      }));
    }
  };

  const disconnectTelegram = () => {
    setTelegramStatus({
      connected: false,
      checking: false,
      error: null,
      userId: null
    });
    setNotificationSettings(prev => ({ ...prev, enabled: false }));
    localStorage.removeItem('telegramUserId');
  };

  const testNotification = async () => {
    if (!telegramStatus.connected) {
      alert('–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ Telegram –±–æ—Ç–∞');
      return;
    }

    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –≤—ã–∑–æ–≤
      const message = getRandomMessage(notificationSettings.reminderType);
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
      await new Promise(resolve => setTimeout(resolve, 500));
      
      alert(`–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:\n\n"${message}"`);
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
    }
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Telegram –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    checkTelegramStatus();
  }, []);

  const getAgeText = (age) => {
    if (age === 1) return '–≥–æ–¥';
    if (age < 5) return '–≥–æ–¥–∞';
    return '–ª–µ—Ç';
  };

  const getCategoryColor = (category) => {
    const colors = {
      '–ú–æ—Ç–æ—Ä–∏–∫–∞': 'bg-blue-100 text-blue-800',
      '–†–µ—á—å': 'bg-green-100 text-green-800',
      '–õ–æ–≥–∏–∫–∞': 'bg-purple-100 text-purple-800',
      '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ': 'bg-pink-100 text-pink-800',
      '–†–∞–∑–≤–∏—Ç–∏–µ': 'bg-orange-100 text-orange-800'
    };
    return colors[category] || 'bg-gray-100 text-gray-800';
  };

  const getDifficultyColor = (difficulty) => {
    const colors = {
      '–õ–µ–≥–∫–æ': 'bg-green-100 text-green-800',
      '–°—Ä–µ–¥–Ω–µ': 'bg-yellow-100 text-yellow-800',
      '–°–ª–æ–∂–Ω–æ': 'bg-red-100 text-red-800'
    };
    return colors[difficulty] || 'bg-gray-100 text-gray-800';
  };

  const getNotificationTypeColor = (type) => {
    const colors = {
      'daily': 'bg-blue-100 text-blue-800',
      'streak': 'bg-orange-100 text-orange-800',
      'encouragement': 'bg-green-100 text-green-800',
      'reminder': 'bg-purple-100 text-purple-800'
    };
    return colors[type] || 'bg-gray-100 text-gray-800';
  };

  const getSkillName = (key) => {
    const names = {
      motor: '–ú–µ–ª–∫–∞—è –º–æ—Ç–æ—Ä–∏–∫–∞',
      speech: '–†–µ—á—å –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è', 
      logic: '–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ',
      creativity: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏',
      development: '–û–±—â–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ'
    };
    return names[key];
  };

  const getSkillColor = (key) => {
    const colors = {
      motor: 'bg-blue-500',
      speech: 'bg-green-500',
      logic: 'bg-purple-500', 
      creativity: 'bg-pink-500',
      development: 'bg-orange-500'
    };
    return colors[key];
  };

  const getCategoryInfo = (categoryId) => {
    return libraryContent.categories.find(cat => cat.id === categoryId);
  };

  const getFilteredArticles = () => {
    if (selectedCategory === 'all') {
      return libraryContent.articles;
    }
    return libraryContent.articles.filter(article => article.category === selectedCategory);
  };

  const getFilteredActivities = () => {
    const activities = activitiesDatabase[child.age] || [];
    if (selectedCategory === 'all') {
      return activities;
    }
    return activities.filter(activity => activity.category === selectedCategory);
  };

  const getActivityCategories = () => {
    const activities = activitiesDatabase[child.age] || [];
    const categories = [...new Set(activities.map(activity => activity.category))];
    return categories.map(cat => ({
      id: cat,
      name: cat,
      count: activities.filter(a => a.category === cat).length
    }));
  };

  const getRandomMessage = (type) => {
    const messages = motivationalMessages[type] || motivationalMessages.daily;
    const randomMessage = messages[Math.floor(Math.random() * messages.length)];
    return randomMessage
      .replace('{name}', child.name)
      .replace('{streak}', child.streak);
  };
  // –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ChildDevelopmentApp

  // –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (currentScreen === 'main') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
        <div className="bg-white shadow-sm px-4 py-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-gray-800">–ü—Ä–∏–≤–µ—Ç, {child.name}! üëã</h1>
              <p className="text-gray-600">–í–æ–∑—Ä–∞—Å—Ç: {child.age} {getAgeText(child.age)}</p>
            </div>
            <div className="flex items-center space-x-3">
              <div className="flex items-center bg-orange-100 px-3 py-1 rounded-full">
                <span className="text-sm font-medium text-orange-800">üèÜ {child.streak} –¥–Ω–µ–π</span>
              </div>
              <button 
                onClick={() => setCurrentScreen('notifications')}
                className="p-2 bg-gray-100 rounded-full hover:bg-gray-200 transition-colors relative"
              >
                <span className="text-xl">üîî</span>
                {telegramStatus.connected && notificationSettings.enabled && (
                  <span className="absolute -top-1 -right-1 w-3 h-3 bg-green-500 rounded-full"></span>
                )}
              </button>
              <button 
                onClick={() => setCurrentScreen('settings')}
                className="p-2 bg-gray-100 rounded-full hover:bg-gray-200 transition-colors"
              >
                ‚öôÔ∏è
              </button>
            </div>
          </div>
        </div>

        {/* Telegram Notification Status */}
        {telegramStatus.connected && notificationSettings.enabled && (
          <div className="mx-4 mt-4 bg-gradient-to-r from-green-500 to-blue-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="font-bold flex items-center">üì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã</h3>
                <p className="text-sm opacity-90">–°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ {notificationSettings.time}</p>
              </div>
              <button 
                onClick={() => setCurrentScreen('notifications')}
                className="bg-white bg-opacity-20 text-white px-4 py-2 rounded-lg font-medium hover:bg-opacity-30 transition-colors"
              >
                –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
              </button>
            </div>
          </div>
        )}

        {!telegramStatus.connected && (
          <div className="mx-4 mt-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="font-bold flex items-center">üì≤ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Telegram –±–æ—Ç–∞</h3>
                <p className="text-sm opacity-90">–ü–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö –≤ Telegram</p>
              </div>
              <button 
                onClick={() => setCurrentScreen('notifications')}
                className="bg-white bg-opacity-20 text-white px-4 py-2 rounded-lg font-medium hover:bg-opacity-30 transition-colors"
              >
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å
              </button>
            </div>
          </div>
        )}

        {!isPremium && (
          <div className="mx-4 mt-4 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="font-bold flex items-center">üëë –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞</h3>
                <p className="text-sm opacity-90">–û—Ç–∫—Ä–æ–π –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</p>
              </div>
              <button 
                onClick={() => setIsPremium(true)}
                className="bg-white text-purple-600 px-4 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors"
              >
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å
              </button>
            </div>
          </div>
        )}

        <div className="px-4 py-6">
          <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
            <div className="text-center mb-6">
              <div className="bg-gradient-to-r from-green-400 to-blue-500 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-3xl">‚ñ∂Ô∏è</span>
              </div>
              <h2 className="text-xl font-bold text-gray-800 mb-2">–í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è!</h2>
              <p className="text-gray-600">–í—ã–±–µ—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è {child.name}</p>
            </div>
            
            <button 
              onClick={() => setCurrentScreen('activities')}
              className="w-full bg-gradient-to-r from-green-500 to-blue-500 text-white py-4 rounded-xl font-medium text-lg hover:from-green-600 hover:to-blue-600 transition-all transform hover:scale-105"
            >
              –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </button>
          </div>

          <div className="grid grid-cols-2 gap-4 mb-6">
            <div className="bg-white rounded-xl p-4 shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-2xl font-bold text-blue-600">{(activitiesDatabase[child.age] || []).length}</p>
                  <p className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
                </div>
                <span className="text-2xl">üéØ</span>
              </div>
            </div>
            <div className="bg-white rounded-xl p-4 shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-2xl font-bold text-purple-600">{progressData.totalTime}—á</p>
                  <p className="text-sm text-gray-600">–í—Ä–µ–º—è —Ä–∞–∑–≤–∏—Ç–∏—è</p>
                </div>
                <span className="text-2xl">‚è∞</span>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-2 gap-4">
            <button 
              onClick={() => setCurrentScreen('progress')}
              className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow"
            >
              <div className="flex items-center justify-center mb-2">
                <span className="text-2xl">üìÖ</span>
              </div>
              <p className="text-sm font-medium text-gray-800">–ü—Ä–æ–≥—Ä–µ—Å—Å</p>
            </button>
            <button 
              onClick={() => setCurrentScreen('library')}
              className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow"
            >
              <div className="flex items-center justify-center mb-2">
                <span className="text-2xl">üìö</span>
              </div>
              <p className="text-sm font-medium text-gray-800">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞</p>
            </button>
          </div>
        </div>

        {/* Age Selector for testing */}
        <div className="px-4 pb-6">
          <div className="bg-gray-100 rounded-lg p-4">
            <p className="text-sm text-gray-600 mb-2">–¢–µ—Å—Ç –≤–æ–∑—Ä–∞—Å—Ç–æ–≤:</p>
            <div className="flex gap-2 flex-wrap">
              {[1,2,3,4,5,6,7].map(age => (
                <button 
                  key={age}
                  onClick={() => setChild({...child, age})}
                  className={`px-3 py-1 rounded text-sm ${
                    child.age === age ? 'bg-blue-500 text-white' : 'bg-white text-gray-600'
                  }`}
                >
                  {age} {getAgeText(age)}
                </button>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –≠–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Telegram
  if (currentScreen === 'notifications') {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => setCurrentScreen('main')}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div>
              <h1 className="text-xl font-bold text-gray-800">Telegram –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h1>
              <p className="text-sm text-gray-600">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –∑–∞–Ω—è—Ç–∏—è—Ö</p>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Telegram Connection Status */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <div className="flex items-center justify-between mb-4">
              <div>
                <h2 className="text-lg font-bold text-gray-800 flex items-center">
                  üì± Telegram –ë–æ—Ç
                  {telegramStatus.connected && <span className="ml-2 text-green-500">‚úì</span>}
                </h2>
                <p className="text-sm text-gray-600">
                  {telegramStatus.connected 
                    ? '–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ –≥–æ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' 
                    : '–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram'
                  }
                </p>
              </div>
              {telegramStatus.checking && (
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"></div>
              )}
            </div>

            {telegramStatus.error && (
              <div className="bg-red-50 border border-red-200 rounded-lg p-3 mb-4">
                <p className="text-red-700 text-sm">{telegramStatus.error}</p>
              </div>
            )}

            {!telegramStatus.connected ? (
              <div className="space-y-4">
                <div className="bg-blue-50 rounded-lg p-4">
                  <h3 className="font-semibold text-blue-900 mb-2">–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å:</h3>
                  <ol className="text-blue-800 text-sm space-y-1">
                    <li>1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∫–ª—é—á–∏—Ç—å Telegram"</li>
                    <li>2. –û—Ç–∫—Ä–æ–µ—Ç—Å—è –±–æ—Ç –≤ Telegram</li>
                    <li>3. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start</li>
                    <li>4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±–æ—Ç–µ</li>
                  </ol>
                </div>
                <button 
                  onClick={connectTelegram}
                  disabled={telegramStatus.checking}
                  className="w-full bg-blue-500 text-white py-3 rounded-lg font-medium hover:bg-blue-600 transition-colors disabled:opacity-50"
                >
                  {telegramStatus.checking ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...' : 'üì± –ü–æ–¥–∫–ª—é—á–∏—Ç—å Telegram'}
                </button>
              </div>
            ) : (
              <div className="space-y-4">
                <div className="bg-green-50 rounded-lg p-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <h3 className="font-semibold text-green-900">‚úÖ Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω</h3>
                      <p className="text-green-700 text-sm">ID: {telegramStatus.userId}</p>
                    </div>
                    <button 
                      onClick={disconnectTelegram}
                      className="text-red-600 hover:text-red-700 text-sm underline"
                    >
                      –û—Ç–∫–ª—é—á–∏—Ç—å
                    </button>
                  </div>
                </div>
                
                <div className="grid grid-cols-2 gap-3">
                  <button 
                    onClick={testNotification}
                    className="bg-purple-500 text-white py-2 px-4 rounded-lg font-medium hover:bg-purple-600 transition-colors"
                  >
                    üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </button>
                  <button 
                    onClick={() => window.open('https://t.me/razvivay–∫–∞_bot', '_blank')}
                    className="bg-gray-500 text-white py-2 px-4 rounded-lg font-medium hover:bg-gray-600 transition-colors"
                  >
                    üí¨ –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞
                  </button>
                </div>
              </div>
            )}
          </div>

          {/* Notification Settings - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω */}
          {telegramStatus.connected && (
            <>
              {/* Main Toggle */}
              <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
                <div className="flex items-center justify-between mb-4">
                  <div>
                    <h2 className="text-lg font-bold text-gray-800">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h2>
                    <p className="text-sm text-gray-600">–í–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö</p>
                  </div>
                  <button 
                    onClick={() => setNotificationSettings({
                      ...notificationSettings, 
                      enabled: !notificationSettings.enabled
                    })}
                    className={`w-12 h-6 rounded-full p-1 transition-colors ${
                      notificationSettings.enabled ? 'bg-green-500' : 'bg-gray-300'
                    }`}
                  >
                    <div className={`w-4 h-4 rounded-full bg-white transition-transform ${
                      notificationSettings.enabled ? 'translate-x-6' : 'translate-x-0'
                    }`}></div>
                  </button>
                </div>

                {notificationSettings.enabled && (
                  <div className="space-y-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                      </label>
                      <input 
                        type="time" 
                        value={notificationSettings.time}
                        onChange={(e) => setNotificationSettings({
                          ...notificationSettings, 
                          time: e.target.value
                        })}
                        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –ß–∞—Å—Ç–æ—Ç–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
                      </label>
                      <select 
                        value={notificationSettings.frequency}
                        onChange={(e) => setNotificationSettings({
                          ...notificationSettings, 
                          frequency: e.target.value
                        })}
                        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      >
                        <option value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</option>
                        <option value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</option>
                        <option value="custom">–í—ã–±—Ä–∞—Ç—å –¥–Ω–∏</option>
                      </select>
                    </div>
                  </div>
                )}
              </div>

              {/* Notification Type */}
              {notificationSettings.enabled && (
                <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
                  <h2 className="text-lg font-bold text-gray-800 mb-4">–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π</h2>
                  <div className="space-y-3">
                    {[
                      { 
                        value: 'motivational', 
                        label: '–ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ', 
                        description: '–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∑–∞–Ω—è—Ç–∏–π',
                        example: getRandomMessage('daily')
                      },
                      { 
                        value: 'simple', 
                        label: '–ü—Ä–æ—Å—Ç—ã–µ', 
                        description: '–ö—Ä–∞—Ç–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω—è—Ç–∏–π',
                        example: `–í—Ä–µ–º—è –¥–ª—è –∑–∞–Ω—è—Ç–∏–π —Å ${child.name}!`
                      },
                      { 
                        value: 'streak', 
                        label: '–° streak', 
                        description: '–ê–∫—Ü–µ–Ω—Ç –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç–∏',
                        example: getRandomMessage('streak')
                      }
                    ].map((type) => (
                      <button
                        key={type.value}
                        onClick={() => setNotificationSettings({
                          ...notificationSettings,
                          reminderType: type.value
                        })}
                        className={`w-full p-4 rounded-lg border-2 transition-colors text-left ${
                          notificationSettings.reminderType === type.value
                            ? 'border-blue-500 bg-blue-50'
                            : 'border-gray-200 hover:border-gray-300'
                        }`}
                      >
                        <div className="flex items-center justify-between mb-2">
                          <h3 className="font-semibold text-gray-800">{type.label}</h3>
                          {notificationSettings.reminderType === type.value && (
                            <span className="text-blue-500">‚úì</span>
                          )}
                        </div>
                        <p className="text-sm text-gray-600 mb-2">{type.description}</p>
                        <p className="text-xs text-gray-500 italic">"{type.example}"</p>
                      </button>
                    ))}
                  </div>
                </div>
              )}

              {/* Preview */}
              {notificationSettings.enabled && (
                <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
                  <h2 className="text-lg font-bold text-gray-800 mb-4">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä</h2>
                  <p className="text-sm text-gray-600 mb-4">
                    –¢–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤–∞—à–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
                  </p>
                  
                  <div className="bg-blue-50 border-l-4 border-blue-500 p-4 rounded-lg mb-4">
                    <div className="flex items-center mb-2">
                      <span className="text-blue-500 mr-2">ü§ñ</span>
                      <span className="font-semibold text-blue-900">–†–∞–∑–≤–∏–≤–∞–π–∫–∞ –ë–æ—Ç</span>
                      <span className="text-xs text-blue-600 ml-auto">{notificationSettings.time}</span>
                    </div>
                    <p className="text-blue-800">
                      {getRandomMessage(notificationSettings.reminderType)}
                    </p>
                  </div>
                </div>
              )}
            </>
          )}

          {/* Notification History */}
          <div className="bg-white rounded-xl p-6 shadow-sm">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h2>
            {notificationHistory.length > 0 ? (
              <div className="space-y-3">
                {notificationHistory.map((notification) => (
                  <div 
                    key={notification.id} 
                    className={`p-3 rounded-lg ${
                      notification.opened ? 'bg-gray-50' : 'bg-blue-50'
                    }`}
                  >
                    <div className="flex items-center justify-between mb-2">
                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getNotificationTypeColor(notification.type)}`}>
                        {notification.type === 'daily' ? '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ' : 
                         notification.type === 'streak' ? 'Streak' : '–î—Ä—É–≥–æ–µ'}
                      </span>
                      <span className="text-xs text-gray-500">
                        {new Date(notification.timestamp).toLocaleString('ru-RU')}
                      </span>
                    </div>
                    <p className="text-sm text-gray-700">{notification.message}</p>
                    {!notification.opened && (
                      <span className="inline-block w-2 h-2 bg-blue-500 rounded-full mt-2"></span>
                    )}
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-8 text-gray-500">
                <span className="text-4xl mb-4 block">üìù</span>
                <p>–ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—É—Å—Ç–∞</p>
                <p className="text-sm">–ü–æ–¥–∫–ª—é—á–∏—Ç–µ Telegram –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</p>
              </div>
            )}
          </div>
        </div>
      </div>
    );
  }

  // –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
  return (
    <div className="min-h-screen bg-gray-50">
      <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
        <div className="flex items-center">
          <button 
            onClick={() => setCurrentScreen('main')}
            className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
          >
            <span className="text-2xl">‚Üê</span>
          </button>
          <h1 className="text-xl font-bold text-gray-800">–≠–∫—Ä–∞–Ω: {currentScreen}</h1>
        </div>
      </div>
      
      <div className="px-4 py-20 text-center">
        <h2 className="text-xl font-bold mb-4">–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h2>
        <p className="text-gray-600 mb-6">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö</p>
        <button 
          onClick={() => setCurrentScreen('main')}
          className="bg-blue-500 text-white px-6 py-2 rounded-lg"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        </button>
      </div>
    </div>
  );
};

export default ChildDevelopmentApp;

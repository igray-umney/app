import React, { useState, useEffect } from 'react';

const ChildDevelopmentApp = () => {
  const [currentScreen, setCurrentScreen] = useState('main');
  const [isPremium, setIsPremium] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedActivity, setSelectedActivity] = useState(null);
  const [showPayment, setShowPayment] = useState(false);
  const [paymentStatus, setPaymentStatus] = useState('idle');
  const [telegramUser, setTelegramUser] = useState(null);
  const [botConnected, setBotConnected] = useState(false);
  const [child, setChild] = useState({
    name: '–ê–Ω–¥—Ä–µ–π',
    age: 2,
    streak: 7
  });
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram Bot
  const [notificationSettings, setNotificationSettings] = useState({
    enabled: false,
    time: '19:00',
    frequency: 'daily',
    reminderType: 'motivational',
    botUsername: 'razvivay–∫–∞_bot', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    quietHours: {
      enabled: true,
      start: '21:00',
      end: '08:00'
    },
    weekendMode: false,
    customDays: {
      monday: true,
      tuesday: true,
      wednesday: true,
      thursday: true,
      friday: true,
      saturday: true,
      sunday: false
    }
  });

  // –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const [progressData] = useState({
    weeklyActivities: [true, true, false, true, true, false, false],
    totalActivities: 45,
    totalTime: 12.5,
    skillsProgress: {
      motor: 85,
      speech: 70,
      logic: 60,
      creativity: 90,
      development: 75
    },
    achievements: [
      { id: 1, title: '–ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è', description: '7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥', icon: 'üéØ', unlocked: true },
      { id: 2, title: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π', description: '10 —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π', icon: 'üé®', unlocked: true },
      { id: 3, title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', description: '15 –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–≥—Ä', icon: 'üîç', unlocked: false, progress: 12 },
      { id: 4, title: '–ú–µ—Å—è—Ü —Ä–∞–∑–≤–∏—Ç–∏—è', description: '30 –¥–Ω–µ–π –∑–∞–Ω—è—Ç–∏–π', icon: 'üìÖ', unlocked: false, progress: 15 }
    ],
    recentActivities: [
      { name: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º', category: '–õ–æ–≥–∏–∫–∞', date: '2025-01-13', duration: 20 },
      { name: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏', category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', date: '2025-01-13', duration: 25 },
      { name: '–ü—Ä–æ—Å—Ç—ã–µ –ø–∞–∑–ª—ã', category: '–õ–æ–≥–∏–∫–∞', date: '2025-01-12', duration: 15 }
    ]
  });

  // –ë–∞–∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
  const [activitiesDatabase] = useState({
// –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 1 –≥–æ–¥ (12-18 –º–µ—Å—è—Ü–µ–≤)
1: [
  {
    id: 1,
    title: '–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞',
    description: '–ò—Å—Å–ª–µ–¥—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã: –ø–µ—Å–æ–∫, –∫—Ä—É–ø—ã, —Ç–∫–∞–Ω–∏',
    duration: '15 –º–∏–Ω',
    category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
    premium: false,
    icon: 'ü§≤',
    difficulty: '–õ–µ–≥–∫–æ',
    materials: ['–ö–æ—Ä–æ–±–∫–∞', '–†–∏—Å/–≥—Ä–µ—á–∫–∞', '–¢–∫–∞–Ω–∏ —Ä–∞–∑–Ω–æ–π —Ç–µ–∫—Å—Ç—É—Ä—ã', '–ú–µ–ª–∫–∏–µ –∏–≥—Ä—É—à–∫–∏'],
    instructions: [
      '–í–æ–∑—å–º–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –∫–æ—Ä–æ–±–∫—É –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä',
      '–ù–∞–ø–æ–ª–Ω–∏—Ç–µ –µ—ë —Ä–∏—Å–æ–º, –≥—Ä–µ—á–∫–æ–π –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫—Ä—É–ø–æ–π',
      '–î–æ–±–∞–≤—å—Ç–µ –∫—É—Å–æ—á–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∫–∞–Ω–µ–π',
      '–°–ø—Ä—è—á—å—Ç–µ –º–µ–ª–∫–∏–µ –∏–≥—Ä—É—à–∫–∏ –≤ –Ω–∞–ø–æ–ª–Ω–∏—Ç–µ–ª–µ',
      '–ü—É—Å—Ç—å –º–∞–ª—ã—à –∏—Å—Å–ª–µ–¥—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä—É–∫–∞–º–∏',
      '–ü–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –∏ –Ω–∞–∑—ã–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã'
    ],
    benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –≤–Ω–∏–º–∞–Ω–∏—è',
    ageRange: '12-18 –º–µ—Å—è—Ü–µ–≤'
  },
  {
    id: 2,
    title: '–ò–≥—Ä–∞ —Å –≤–æ–¥–æ–π',
    description: '–ü–µ—Ä–µ–ª–∏–≤–∞–µ–º –≤–æ–¥—É –º–µ–∂–¥—É –µ–º–∫–æ—Å—Ç—è–º–∏, —Ä–∞–∑–≤–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é',
    duration: '20 –º–∏–Ω',
    category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
    premium: false,
    icon: 'üíß',
    difficulty: '–õ–µ–≥–∫–æ',
    materials: ['2-3 –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞', '–í–æ–¥–∞', '–ì—É–±–∫–∞', '–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ'],
    instructions: [
      '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞',
      '–ù–∞–ª–µ–π—Ç–µ –≤–æ–¥—É –≤ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö',
      '–ü–æ–∫–∞–∂–∏—Ç–µ –º–∞–ª—ã—à—É, –∫–∞–∫ –ø–µ—Ä–µ–ª–∏–≤–∞—Ç—å –≤–æ–¥—É',
      '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ',
      '–î–∞–π—Ç–µ –≥—É–±–∫—É - –ø—É—Å—Ç—å –≤—ã–∂–∏–º–∞–µ—Ç –≤–æ–¥—É',
      '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ –¥–ª—è —É–±–æ—Ä–∫–∏!'
    ],
    benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—è, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è',
    ageRange: '10-24 –º–µ—Å—è—Ü–∞'
  },
  {
    id: 3,
    title: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
    description: '–ò–∑—É—á–∞–µ–º –∑–≤—É–∫–∏: –ø–æ–≥—Ä–µ–º—É—à–∫–∏, –±–∞—Ä–∞–±–∞–Ω, –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏',
    duration: '10 –º–∏–Ω',
    category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
    premium: true,
    icon: 'üéµ',
    difficulty: '–õ–µ–≥–∫–æ',
    materials: ['–ü–æ–≥—Ä–µ–º—É—à–∫–∏', '–ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏', '–°–∞–º–æ–¥–µ–ª—å–Ω—ã–π –±–∞—Ä–∞–±–∞–Ω', '–õ–æ–∂–∫–∏'],
    instructions: [
      '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–∑–Ω—ã–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
      '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∏–∑–≤–ª–µ–∫–∞—Ç—å –∑–≤—É–∫–∏ –∏–∑ –∫–∞–∂–¥–æ–≥–æ',
      '–ü—É—Å—Ç—å –º–∞–ª—ã—à –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∞–º',
      '–ò–≥—Ä–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ä–∏—Ç–º—ã',
      '–ü–æ–π—Ç–µ –ø–µ—Å–µ–Ω–∫–∏ –ø–æ–¥ –∞–∫–∫–æ–º–ø–∞–Ω–µ–º–µ–Ω—Ç',
      '–¢–∞–Ω—Ü—É–π—Ç–µ –ø–æ–¥ –º—É–∑—ã–∫—É'
    ],
    benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Å–ª—É—Ö, —á—É–≤—Å—Ç–≤–æ —Ä–∏—Ç–º–∞, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏–π, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏',
    ageRange: '8-18 –º–µ—Å—è—Ü–µ–≤'
  },
  {
    id: 10,
    title: '–ü–µ—Ä–≤—ã–µ –∫–Ω–∏–∂–∫–∏',
    description: '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —è—Ä–∫–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏, –∏–∑—É—á–∞–µ–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞',
    duration: '12 –º–∏–Ω',
    category: '–†–µ—á—å',
    premium: false,
    icon: 'üìñ',
    difficulty: '–õ–µ–≥–∫–æ',
    materials: ['–ö–∞—Ä—Ç–æ–Ω–Ω—ã–µ –∫–Ω–∏–∂–∫–∏ —Å –∫—Ä—É–ø–Ω—ã–º–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏', '–ö–Ω–∏–∂–∫–∏-–∏–≥—Ä—É—à–∫–∏', '–ú—è–≥–∫–∏–µ –∫–Ω–∏–∂–∫–∏'],
    instructions: [
      '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–∂–∫—É —Å —è—Ä–∫–∏–º–∏ –∫—Ä—É–ø–Ω—ã–º–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏',
      '–£—Å–∞–¥–∏—Ç–µ –º–∞–ª—ã—à–∞ –∫ —Å–µ–±–µ –Ω–∞ –∫–æ–ª–µ–Ω–∏',
      '–ü–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –Ω–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã',
      '–ì–æ–≤–æ—Ä–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏: "–∫–æ—Ç", "–¥–æ–º", "–º—è—á"',
      '–ü–æ–≤—Ç–æ—Ä—è–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑',
      '–ü–æ–∑–≤–æ–ª—å—Ç–µ —Ä–µ–±–µ–Ω–∫—É –ø–æ—Ç—Ä–æ–≥–∞—Ç—å –∏ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã'
    ],
    benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ä–µ—á—å, —Ä–∞—Å—à–∏—Ä—è–µ—Ç —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å, —É–ª—É—á—à–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ, –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫ —á—Ç–µ–Ω–∏—é',
    ageRange: '10-18 –º–µ—Å—è—Ü–µ–≤'
  },
  {
    id: 11,
    title: '–ò–≥—Ä–∞ "–ö—É-–∫—É"',
    description: '–†–∞–∑–≤–∏–≤–∞–µ–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤',
    duration: '8 –º–∏–Ω',
    category: '–†–∞–∑–≤–∏—Ç–∏–µ',
    premium: false,
    icon: 'üëÄ',
    difficulty: '–õ–µ–≥–∫–æ',
    materials: ['–ü–ª–∞—Ç–æ–∫ –∏–ª–∏ –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ', '–ò–≥—Ä—É—à–∫–∏', '–í–∞—à–∏ —Ä—É–∫–∏'],
    instructions: [
      '–ù–∞–∫—Ä–æ–π—Ç–µ –ª–∏—Ü–æ –ø–ª–∞—Ç–∫–æ–º',
      '–°–∫–∞–∂–∏—Ç–µ "–ö—É-–∫—É!" –∏ —É–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–æ–∫',
      '–†–∞–¥—É–π—Ç–µ—Å—å –≤—Å—Ç—Ä–µ—á–µ —Å –º–∞–ª—ã—à–æ–º',
      '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑',
      '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∫—Ä—ã—Ç—å –∏–≥—Ä—É—à–∫—É',
      '–ü—É—Å—Ç—å –º–∞–ª—ã—à —Å–∞–º –ø–æ–ø—Ä–æ–±—É–µ—Ç –∏–≥—Ä–∞—Ç—å'
    ],
    benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Å–≤—è–∑—å, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏',
    ageRange: '8-15 –º–µ—Å—è—Ü–µ–≤'
  },
  {
    id: 12,
    title: '–°–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –≤ –µ–º–∫–æ—Å—Ç–∏',
    description: '–£—á–∏–º—Å—è –∫–ª–∞—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–æ—Ä–æ–±–∫–∏ –∏ –≤–µ–¥–µ—Ä–∫–∏',
    duration: '18 –º–∏–Ω',
    category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
    premium: true,
    icon: 'ü™£',
    difficulty: '–õ–µ–≥–∫–æ',
    materials: ['–†–∞–∑–Ω—ã–µ –µ–º–∫–æ—Å—Ç–∏', '–ö—Ä—É–ø–Ω—ã–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã', '–ú—è—á–∏–∫–∏', '–ö—É–±–∏–∫–∏'],
    instructions: [
      '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞',
      '–ü–æ–∫–∞–∂–∏—Ç–µ –∫–∞–∫ —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–æ—Ä–æ–±–∫—É',
      '–ù–∞—á–Ω–∏—Ç–µ —Å –æ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞',
      '–•–≤–∞–ª–∏—Ç–µ –∑–∞ –∫–∞–∂–¥–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ',
      '–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –±–æ–ª—å—à–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤',
      '–ü—É—Å—Ç—å –º–∞–ª—ã—à –≤—ã–Ω–∏–º–∞–µ—Ç –∏ —Å–Ω–æ–≤–∞ —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç'
    ],
    benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é —Ä—É–∫ –∏ –≥–ª–∞–∑, –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤, –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏',
    ageRange: '12-20 –º–µ—Å—è—Ü–µ–≤'
  },
  {
    id: 13,
    title: '–ü—Ä–æ—Å—Ç–æ–π –º–∞—Å—Å–∞–∂',
    description: '–õ–µ–≥–∫–∏–π –º–∞—Å—Å–∞–∂ –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º—ã—à—Ü –∏ —Å–≤—è–∑–∏ —Å —Ä–µ–±–µ–Ω–∫–æ–º',
    duration: '10 –º–∏–Ω',
    category: '–†–∞–∑–≤–∏—Ç–∏–µ',
    premium: true,
    icon: 'üë∂',
    difficulty: '–õ–µ–≥–∫–æ',
    materials: ['–î–µ—Ç—Å–∫–æ–µ –º–∞—Å–ª–æ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)', '–ú—è–≥–∫–æ–µ –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ', '–°–ø–æ–∫–æ–π–Ω–∞—è –º—É–∑—ã–∫–∞'],
    instructions: [
      '–£–ª–æ–∂–∏—Ç–µ –º–∞–ª—ã—à–∞ –Ω–∞ —Å–ø–∏–Ω–∫—É –Ω–∞ –º—è–≥–∫—É—é –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å',
      '–ù–∞—á–Ω–∏—Ç–µ —Å –ª–µ–≥–∫–∏—Ö –ø–æ–≥–ª–∞–∂–∏–≤–∞–Ω–∏–π —Ä—É—á–µ–∫',
      '–ú–∞—Å—Å–∏—Ä—É–π—Ç–µ –ø–∞–ª—å—á–∏–∫–∏ –æ—Ç –æ—Å–Ω–æ–≤–∞–Ω–∏—è –∫ –∫–æ–Ω—á–∏–∫–∞–º',
      '–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ –Ω–æ–∂–∫–∞–º, –¥–µ–ª–∞–π—Ç–µ "–≤–µ–ª–æ—Å–∏–ø–µ–¥"',
      '–ü–æ–≥–ª–∞–∂–∏–≤–∞–π—Ç–µ –∂–∏–≤–æ—Ç–∏–∫ –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ',
      '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–±–Ω–∏–º–∞–Ω–∏–µ–º –∏ –ø–æ—Ü–µ–ª—É—è–º–∏'
    ],
    benefits: '–£–∫—Ä–µ–ø–ª—è–µ—Ç –º—ã—à—Ü—ã, —É–ª—É—á—à–∞–µ—Ç –∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏–µ, —É—Å–ø–æ–∫–∞–∏–≤–∞–µ—Ç, —É–∫—Ä–µ–ø–ª—è–µ—Ç —Å–≤—è–∑—å —Ä–æ–¥–∏—Ç–µ–ª—å-—Ä–µ–±–µ–Ω–æ–∫',
    ageRange: '6-18 –º–µ—Å—è—Ü–µ–≤'
  },
  {
    id: 14,
    title: '–ó–≤—É–∫–æ–ø–æ–¥—Ä–∞–∂–∞–Ω–∏–µ',
    description: '–ò–∑—É—á–∞–µ–º –∑–≤—É–∫–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
    duration: '12 –º–∏–Ω',
    category: '–†–µ—á—å',
    premium: false,
    icon: 'üê±',
    difficulty: '–õ–µ–≥–∫–æ',
    materials: ['–ö–∞—Ä—Ç–∏–Ω–∫–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö', '–ò–≥—Ä—É—à–∫–∏-–∂–∏–≤–æ—Ç–Ω—ã–µ', '–ö–Ω–∏–∂–∫–∏ —Å–æ –∑–≤—É–∫–∞–º–∏'],
    instructions: [
      '–ü–æ–∫–∞–∂–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –∫–æ—Ç–∞ –∏ —Å–∫–∞–∂–∏—Ç–µ "–º—è—É"',
      '–ü–æ–∫–∞–∂–∏—Ç–µ —Å–æ–±–∞—á–∫—É –∏ —Å–∫–∞–∂–∏—Ç–µ "–≥–∞–≤-–≥–∞–≤"',
      '–ò–∑–æ–±—Ä–∞–∑–∏—Ç–µ –∑–≤—É–∫ –º–∞—à–∏–Ω—ã "–±–∏-–±–∏"',
      '–ü–æ–≤—Ç–æ—Ä—è–π—Ç–µ –∑–≤—É–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑',
      '–ü–æ–æ—â—Ä—è–π—Ç–µ –ø–æ–ø—ã—Ç–∫–∏ –º–∞–ª—ã—à–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å',
      '–•–≤–∞–ª–∏—Ç–µ –∑–∞ –ª—é–±—ã–µ –∑–≤—É–∫–∏, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –Ω—É–∂–Ω—ã–µ'
    ],
    benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ä–µ—á—å, —Å–ª—É—Ö–æ–≤–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, –ø–∞–º—è—Ç—å, –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫ –ø–µ—Ä–≤—ã–º —Å–ª–æ–≤–∞–º',
    ageRange: '10-18 –º–µ—Å—è—Ü–µ–≤'
  }
  {
  id: 15,
  title: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø–µ—Å–∫–µ',
  description: '–ü–∞–ª—å—á–∏–∫–∞–º–∏ —Ä–∏—Å—É–µ–º —É–∑–æ—Ä—ã –Ω–∞ –º–µ–ª–∫–æ–º –ø–µ—Å–∫–µ',
  duration: '12 –º–∏–Ω',
  category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
  premium: true,
  icon: 'üèñÔ∏è',
  difficulty: '–õ–µ–≥–∫–æ',
  materials: ['–ü–æ–¥–Ω–æ—Å –∏–ª–∏ –∫–æ—Ä–æ–±–∫–∞', '–ú–µ–ª–∫–∏–π –ø–µ—Å–æ–∫ –∏–ª–∏ –º–∞–Ω–∫–∞', '–ò–≥—Ä—É—à–µ—á–Ω—ã–µ –≥—Ä–∞–±–ª–∏'],
  instructions: [
    '–ù–∞—Å—ã–ø—å—Ç–µ —Ç–æ–Ω–∫–∏–π —Å–ª–æ–π –ø–µ—Å–∫–∞ –≤ –ø–æ–¥–Ω–æ—Å',
    '–ü–æ–∫–∞–∂–∏—Ç–µ –º–∞–ª—ã—à—É, –∫–∞–∫ —Ä–∏—Å–æ–≤–∞—Ç—å –ø–∞–ª—å—á–∏–∫–æ–º',
    '–ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö –ª–∏–Ω–∏–π –∏ —Ç–æ—á–µ–∫',
    '–†–∏—Å—É–π—Ç–µ –≤–æ–ª–Ω—ã, –∫—Ä—É–≥–∏, –∑–∏–≥–∑–∞–≥–∏',
    '–í—Å—Ç—Ä—è—Ö–∏–≤–∞–π—Ç–µ –ø–æ–¥–Ω–æ—Å, —á—Ç–æ–±—ã "—Å—Ç–µ—Ä–µ—Ç—å" —Ä–∏—Å—É–Ω–æ–∫',
    '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Å–∞–º'
  ],
  benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é',
  ageRange: '10-18 –º–µ—Å—è—Ü–µ–≤'
},
{
  id: 16,
  title: '–ò–≥—Ä–∞ —Å –∫—Ä—É–ø–∞–º–∏',
  description: '–°–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ—Å—ã–ø–∞–µ–º —Ä–∞–∑–Ω—ã–µ –∫—Ä—É–ø—ã',
  duration: '18 –º–∏–Ω',
  category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
  premium: true,
  icon: 'üåæ',
  difficulty: '–õ–µ–≥–∫–æ',
  materials: ['–ì—Ä–µ—á–∫–∞, —Ä–∏—Å, —Ñ–∞—Å–æ–ª—å', '–ù–µ–±–æ–ª—å—à–∏–µ –µ–º–∫–æ—Å—Ç–∏', '–õ–æ–∂–∫–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞', '–í–æ—Ä–æ–Ω–∫–∞'],
  instructions: [
    '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–∑–Ω—ã–µ –≤–∏–¥—ã –∫—Ä—É–ø',
    '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –ø–µ—Ä–µ—Å—ã–ø–∞—Ç—å –∫—Ä—É–ø—É –ª–æ–∂–∫–æ–π',
    '–î–∞–π—Ç–µ –º–∞–ª—ã—à—É –ø–æ—Ç—Ä–æ–≥–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã',
    '–ü–µ—Ä–µ—Å—ã–ø–∞–π—Ç–µ –∫—Ä—É–ø—É –∏–∑ –æ–¥–Ω–æ–π –µ–º–∫–æ—Å—Ç–∏ –≤ –¥—Ä—É–≥—É—é',
    '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–æ—Ä–æ–Ω–∫—É –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è',
    '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥–∏—Ç–µ, —á—Ç–æ–±—ã —Ä–µ–±–µ–Ω–æ–∫ –Ω–µ —Ç—è–Ω—É–ª –∫—Ä—É–ø—É –≤ —Ä–æ—Ç'
  ],
  benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏–π, —Ç–∞–∫—Ç–∏–ª—å–Ω—É—é —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
  ageRange: '12-20 –º–µ—Å—è—Ü–µ–≤'
},
{
  id: 17,
  title: '–ú—è–≥–∫–∏–µ –∫—É–±–∏–∫–∏',
  description: '–°—Ç—Ä–æ–∏–º –±–∞—à–Ω–∏ –∏–∑ –º—è–≥–∫–∏—Ö –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∫—É–±–∏–∫–æ–≤',
  duration: '15 –º–∏–Ω',
  category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
  premium: true,
  icon: 'üß±',
  difficulty: '–õ–µ–≥–∫–æ',
  materials: ['–ú—è–≥–∫–∏–µ —Ç–∫–∞–Ω–µ–≤—ã–µ –∫—É–±–∏–∫–∏', '–ö—É–±–∏–∫–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞', '–¶–≤–µ—Ç–Ω—ã–µ –∫—É–±–∏–∫–∏'],
  instructions: [
    '–ü–æ–∫–∞–∂–∏—Ç–µ –º–∞–ª—ã—à—É, –∫–∞–∫ —Å—Ç–∞–≤–∏—Ç—å –∫—É–±–∏–∫ –Ω–∞ –∫—É–±–∏–∫',
    '–ù–∞—á–Ω–∏—Ç–µ —Å –¥–≤—É—Ö –∫—É–±–∏–∫–æ–≤',
    '–†–∞–¥—É–π—Ç–µ—Å—å, –∫–æ–≥–¥–∞ –±–∞—à–Ω—è –ø–∞–¥–∞–µ—Ç - —ç—Ç–æ —á–∞—Å—Ç—å –∏–≥—Ä—ã!',
    '–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏–∫–æ–≤',
    '–°—Ç—Ä–æ–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: –¥–æ—Ä–æ–∂–∫–∏, –∑–∞–±–æ—Ä—á–∏–∫–∏',
    '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ —Å–∞–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Å –ø–æ—Å—Ç—Ä–æ–π–∫–∞–º–∏'
  ],
  benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é —Ä—É–∫ –∏ –≥–ª–∞–∑, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞',
  ageRange: '9-18 –º–µ—Å—è—Ü–µ–≤'
},
{
  id: 18,
  title: '–¢–∞–Ω—Ü—ã —Å –ª–µ–Ω—Ç–∞–º–∏',
  description: '–î–≤–∏–≥–∞–µ–º—Å—è –ø–æ–¥ –º—É–∑—ã–∫—É —Å —Ü–≤–µ—Ç–Ω—ã–º–∏ –ª–µ–Ω—Ç–∞–º–∏',
  duration: '14 –º–∏–Ω',
  category: '–†–∞–∑–≤–∏—Ç–∏–µ',
  premium: true,
  icon: 'üéÄ',
  difficulty: '–õ–µ–≥–∫–æ',
  materials: ['–õ–µ–≥–∫–∏–µ —Ü–≤–µ—Ç–Ω—ã–µ –ª–µ–Ω—Ç—ã', '–°–ø–æ–∫–æ–π–Ω–∞—è –º—É–∑—ã–∫–∞', '–ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)'],
  instructions: [
    '–í–∫–ª—é—á–∏—Ç–µ –ø—Ä–∏—è—Ç–Ω—É—é —Å–ø–æ–∫–æ–π–Ω—É—é –º—É–∑—ã–∫—É',
    '–î–∞–π—Ç–µ –º–∞–ª—ã—à—É –ª–µ–Ω—Ç—É –≤ –∫–∞–∂–¥—É—é —Ä—É–∫—É',
    '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –º–∞—Ö–∞—Ç—å –ª–µ–Ω—Ç–∞–º–∏ –≤ —Ç–∞–∫—Ç –º—É–∑—ã–∫–µ',
    '–¢–∞–Ω—Ü—É–π—Ç–µ –≤–º–µ—Å—Ç–µ, –¥–≤–∏–≥–∞—è —Ä—É–∫–∞–º–∏ –≤–≤–µ—Ä—Ö-–≤–Ω–∏–∑',
    '–ö—Ä—É–∂–∏—Ç–µ—Å—å –º–µ–¥–ª–µ–Ω–Ω–æ —Å –ª–µ–Ω—Ç–∞–º–∏',
    '–ú–µ–Ω—è–π—Ç–µ —Ç–µ–º–ø –¥–≤–∏–∂–µ–Ω–∏–π –ø–æ–¥ –º—É–∑—ã–∫—É'
  ],
  benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —á—É–≤—Å—Ç–≤–æ —Ä–∏—Ç–º–∞, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏–π, –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å–ª—É—Ö, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Å—Ñ–µ—Ä—É',
  ageRange: '8-18 –º–µ—Å—è—Ü–µ–≤'
},
{
  id: 19,
  title: '–í–æ–ª—à–µ–±–Ω—ã–π –º–µ—à–æ—á–µ–∫',
  description: '–ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä—É—à–∫–∏ –Ω–∞ –æ—â—É–ø—å –≤ –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–º –º–µ—à–æ—á–∫–µ',
  duration: '16 –º–∏–Ω',
  category: '–†–∞–∑–≤–∏—Ç–∏–µ',
  premium: true,
  icon: 'üéí',
  difficulty: '–°—Ä–µ–¥–Ω–µ',
  materials: ['–ù–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –º–µ—à–æ—á–µ–∫', '5-6 —Ä–∞–∑–Ω—ã—Ö –∏–≥—Ä—É—à–µ–∫', '–ü—Ä–µ–¥–º–µ—Ç—ã —Ä–∞–∑–Ω–æ–π —Ñ–æ—Ä–º—ã'],
  instructions: [
    '–ü–æ–ª–æ–∂–∏—Ç–µ –∑–Ω–∞–∫–æ–º—ã–µ –∏–≥—Ä—É—à–∫–∏ –≤ –º–µ—à–æ—á–µ–∫',
    '–ü–æ–∫–∞–∂–∏—Ç–µ –∏–≥—Ä—É—à–∫–∏ –º–∞–ª—ã—à—É –∑–∞—Ä–∞–Ω–µ–µ',
    '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –∑–∞—Å—É–Ω–µ—Ç —Ä—É—á–∫—É –≤ –º–µ—à–æ—á–µ–∫',
    '–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–π—Ç–∏ –∏ –¥–æ—Å—Ç–∞—Ç—å –∏–≥—Ä—É—à–∫—É',
    '–†–∞–¥—É–π—Ç–µ—Å—å –∫–∞–∂–¥–æ–π –Ω–∞—Ö–æ–¥–∫–µ',
    '–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–π—Ç–µ, –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã'
  ],
  benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–∞–∫—Ç–∏–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, –ø–∞–º—è—Ç—å, –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É',
  ageRange: '12-20 –º–µ—Å—è—Ü–µ–≤'
},
{
  id: 20,
  title: '–ò–≥—Ä–∞ —Å –º—ã–ª—å–Ω—ã–º–∏ –ø—É–∑—ã—Ä—è–º–∏',
  description: '–õ–æ–≤–∏–º –∏ –ª–æ–ø–∞–µ–º –º—ã–ª—å–Ω—ã–µ –ø—É–∑—ã—Ä–∏',
  duration: '10 –º–∏–Ω',
  category: '–†–∞–∑–≤–∏—Ç–∏–µ',
  premium: true,
  icon: 'ü´ß',
  difficulty: '–õ–µ–≥–∫–æ',
  materials: ['–ú—ã–ª—å–Ω—ã–µ –ø—É–∑—ã—Ä–∏', '–†–∞–∑–Ω—ã–µ –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–∏—è –¥–ª—è –ø—É–∑—ã—Ä–µ–π'],
  instructions: [
    '–í—ã–¥—É–≤–∞–π—Ç–µ –ø—É–∑—ã—Ä–∏ –¥–ª—è –º–∞–ª—ã—à–∞',
    '–ü–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ, –∫–∞–∫ —Ç—è–Ω—É—Ç—å—Å—è –∫ –ø—É–∑—ã—Ä—è–º',
    '–ü–æ–æ—â—Ä—è–π—Ç–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–π–º–∞—Ç—å –∏–ª–∏ –ª–æ–ø–Ω—É—Ç—å –ø—É–∑—ã—Ä–∏',
    '–î—É–π—Ç–µ –ø—É–∑—ã—Ä–∏ –≤ —Ä–∞–∑–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã',
    '–°—á–∏—Ç–∞–π—Ç–µ –ø—É–∑—ã—Ä–∏ –≤—Å–ª—É—Ö: "–û–¥–∏–Ω, –¥–≤–∞, —Ç—Ä–∏!"',
    '–î–µ–ª–∞–π—Ç–µ –ø–∞—É–∑—ã, —á—Ç–æ–±—ã –º–∞–ª—ã—à –º–æ–≥ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è'
  ],
  benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏–π, –∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Å–ª–µ–∂–µ–Ω–∏–µ, —Ä–µ–∞–∫—Ü–∏—é, –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–∞–¥–æ—Å—Ç—å',
  ageRange: '6-18 –º–µ—Å—è—Ü–µ–≤'
},
{
  id: 21,
  title: '–°–≤–µ—Ç–æ–≤–æ–π —Å—Ç–æ–ª',
  description: '–ò—Å—Å–ª–µ–¥—É–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ —Å–≤–µ—Ç–æ–≤–æ–º —Å—Ç–æ–ª–µ',
  duration: '20 –º–∏–Ω',
  category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
  premium: true,
  icon: 'üí°',
  difficulty: '–°—Ä–µ–¥–Ω–µ',
  materials: ['–°–≤–µ—Ç–æ–≤–æ–π —Å—Ç–æ–ª –∏–ª–∏ –ø–ª–∞–Ω—à–µ—Ç', '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã', '–¶–≤–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞', '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∏–≥—Ä—É—à–∫–∏'],
  instructions: [
    '–í–∫–ª—é—á–∏—Ç–µ —Å–≤–µ—Ç–æ–≤–æ–π —Å—Ç–æ–ª –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–ª–∞–Ω—à–µ—Ç —Å –±–µ–ª—ã–º —ç–∫—Ä–∞–Ω–æ–º',
    '–ü–æ–ª–æ–∂–∏—Ç–µ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å',
    '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –ø—Ä–µ–¥–º–µ—Ç—ã –≤—ã–≥–ª—è–¥—è—Ç –≤ —Å–≤–µ—Ç–µ',
    '–î–≤–∏–≥–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —Å–æ–∑–¥–∞–≤–∞—è —Ç–µ–Ω–∏',
    '–ù–∞–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ —Ü–≤–µ—Ç–Ω—É—é –±—É–º–∞–≥—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤',
    '–ü—É—Å—Ç—å –º–∞–ª—ã—à —Å–∞–º –∏—Å—Å–ª–µ–¥—É–µ—Ç —Å–≤–µ—Ç–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã'
  ],
  benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–≤–µ—Ç–∞ –∏ —Ç–µ–Ω–∏, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é',
  ageRange: '10-20 –º–µ—Å—è—Ü–µ–≤'
}
],
    2: [
      {
        id: 4,
        title: '–°–æ–±–∏—Ä–∞–µ–º –ø–∏—Ä–∞–º–∏–¥–∫—É',
        description: '–†–∞–∑–≤–∏–≤–∞–µ–º –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤',
        duration: '15 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üìê',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–ü–∏—Ä–∞–º–∏–¥–∫–∞ —Å –∫–æ–ª—å—Ü–∞–º–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞'],
        instructions: [
          '–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É –ø–∏—Ä–∞–º–∏–¥–∫—É',
          '–†–∞–∑–±–µ—Ä–∏—Ç–µ –µ—ë –Ω–∞ —á–∞—Å—Ç–∏',
          '–û–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–Ω—è—Ç–∏—è "–±–æ–ª—å—à–æ–π" –∏ "–º–∞–ª–µ–Ω—å–∫–∏–π"',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–æ–±—Ä–∞—Ç—å —Å–∞–º',
          '–ü–æ–º–æ–≥–∞–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏',
          '–•–≤–∞–ª–∏—Ç–µ –∑–∞ –∫–∞–∂–¥–æ–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —Ç–µ—Ä–ø–µ–Ω–∏–µ',
        ageRange: '18-30 –º–µ—Å—è—Ü–µ–≤'
      },
      {
        id: 5,
        title: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏',
        description: '–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –∫—Ä–∞—Å–∫–∞–º–∏',
        duration: '25 –º–∏–Ω',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        premium: false,
        icon: 'üé®',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ü–∞–ª—å—á–∏–∫–æ–≤—ã–µ –∫—Ä–∞—Å–∫–∏', '–ë–æ–ª—å—à–æ–π –ª–∏—Å—Ç –±—É–º–∞–≥–∏', '–í–ª–∞–∂–Ω—ã–µ —Å–∞–ª—Ñ–µ—Ç–∫–∏'],
        instructions: [
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ',
          '–ù–∞–¥–µ–Ω—å—Ç–µ –Ω–∞ —Ä–µ–±–µ–Ω–∫–∞ —Å—Ç–∞—Ä—É—é –æ–¥–µ–∂–¥—É',
          '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –º–∞–∫–∞—Ç—å –ø–∞–ª–µ—Ü –≤ –∫—Ä–∞—Å–∫—É',
          '–ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤',
          '–†–∏—Å—É–π—Ç–µ –≤–º–µ—Å—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–≥—É—Ä—ã',
          '–ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Ç–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ —Ä–µ–±–µ–Ω–∫–∞'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, —Ü–≤–µ—Ç–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è',
        ageRange: '18-36 –º–µ—Å—è—Ü–µ–≤'
      },
      {
        id: 6,
        title: '–õ–µ–ø–∫–∞ –∏–∑ –ø–ª–∞—Å—Ç–∏–ª–∏–Ω–∞',
        description: '–†–∞–∑–≤–∏–≤–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É',
        duration: '30 –º–∏–Ω',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        premium: true,
        icon: 'üé≠',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ú—è–≥–∫–∏–π –ø–ª–∞—Å—Ç–∏–ª–∏–Ω', '–î–æ—Å–∫–∞ –¥–ª—è –ª–µ–ø–∫–∏', '–ü—Ä–æ—Å—Ç—ã–µ —Ñ–æ—Ä–º–æ—á–∫–∏'],
        instructions: [
          '–†–∞–∑–æ–≥—Ä–µ–π—Ç–µ –ø–ª–∞—Å—Ç–∏–ª–∏–Ω –≤ —Ä—É–∫–∞—Ö',
          '–ü–æ–∫–∞–∂–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–µ–º—ã: –∫–∞—Ç–∞–Ω–∏–µ, —Å–ø–ª—é—â–∏–≤–∞–Ω–∏–µ',
          '–õ–µ–ø–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–≥—É—Ä—ã: —à–∞—Ä–∏–∫–∏, –∫–æ–ª–±–∞—Å–∫–∏',
          '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–æ—á–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–≥—É—Ä',
          '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö',
          '–ù–µ —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ –∏–¥–µ–∞–ª—å–Ω–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —É—Å–∏–¥—á–∏–≤–æ—Å—Ç—å',
        ageRange: '24-36 –º–µ—Å—è—Ü–µ–≤'
      }
    ],
    3: [
      {
        id: 7,
        title: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º',
        description: '–ò–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è',
        duration: '20 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üåà',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–¶–≤–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã', '4-5 –∫–æ—Ä–æ–±–æ—á–µ–∫ –∏–ª–∏ –µ–º–∫–æ—Å—Ç–µ–π'],
        instructions: [
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã 4-5 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤',
          '–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É, –∫–∞–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ü–≤–µ—Ç–∞–º',
          '–ù–∞–∑—ã–≤–∞–π—Ç–µ –∫–∞–∂–¥—ã–π —Ü–≤–µ—Ç –ø—Ä–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤',
          '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–º–µ—Å—Ç–µ',
          '–£—Å–ª–æ–∂–Ω–∏—Ç–µ –∑–∞–¥–∞—á—É, –¥–æ–±–∞–≤–∏–≤ –±–æ–ª—å—à–µ —Ü–≤–µ—Ç–æ–≤'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –≤–Ω–∏–º–∞–Ω–∏–µ, —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å',
        ageRange: '2-4 –≥–æ–¥–∞'
      },
      {
        id: 8,
        title: '–ü—Ä–æ—Å—Ç—ã–µ –ø–∞–∑–ª—ã',
        description: '–ü–∞–∑–ª—ã –∏–∑ 4-6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ä–∞–∑–≤–∏–≤–∞–µ–º –ª–æ–≥–∏–∫—É',
        duration: '25 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üß©',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ü–∞–∑–ª—ã –∏–∑ 4-6 –∫—Ä—É–ø–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤', '–ö–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞'],
        instructions: [
          '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∑–ª —Å –∫—Ä—É–ø–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏',
          '–ü–æ–∫–∞–∂–∏—Ç–µ –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É',
          '–†–∞–∑–±–µ—Ä–∏—Ç–µ –ø–∞–∑–ª –Ω–∞ —á–∞—Å—Ç–∏',
          '–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–π—Ç–∏ —É–≥–ª–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏',
          '–°–æ–±–∏—Ä–∞–π—Ç–µ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, —Ö–≤–∞–ª—è –∑–∞ —É—Å–ø–µ—Ö–∏',
          '–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–∞–ª–µ–π'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —Ç–µ—Ä–ø–µ–Ω–∏–µ, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É',
        ageRange: '2,5-4 –≥–æ–¥–∞'
      },
      {
        id: 9,
        title: '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã',
        description: '–ò–≥—Ä–∞–µ–º –≤ –¥–æ–∫—Ç–æ—Ä–∞, –ø–æ–≤–∞—Ä–∞, –≤–æ–¥–∏—Ç–µ–ª—è',
        duration: '30 –º–∏–Ω',
        category: '–†–∞–∑–≤–∏—Ç–∏–µ',
        premium: true,
        icon: 'üë®‚Äç‚öïÔ∏è',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ò–≥—Ä—É—à–µ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', '–ö–æ—Å—Ç—é–º—ã –∏–ª–∏ –∞—Ç—Ä–∏–±—É—Ç—ã', '–ö—É–∫–ª—ã/–∏–≥—Ä—É—à–∫–∏'],
        instructions: [
          '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –∏–≥—Ä—ã (–¥–æ–∫—Ç–æ—Ä, –ø–æ–≤–∞—Ä, –∏ —Ç.–¥.)',
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã',
          '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∞–º',
          '–ú–µ–Ω—è–π—Ç–µ—Å—å —Ä–æ–ª—è–º–∏',
          '–ü—Ä–∏–¥—É–º—ã–≤–∞–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏, –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Ä–µ—á—å, —ç–º–ø–∞—Ç–∏—é, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π',
        ageRange: '2,5-5 –ª–µ—Ç'
      }
    ]
  });

  // –ë–∞–∑–∞ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  const [motivationalMessages] = useState({
    daily: [
      'üåü –í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å {name}! –°–µ–≥–æ–¥–Ω—è –∏–∑—É—á–∞–µ–º —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ?',
      'üí´ {name} –∂–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º —Å–µ–≥–æ–¥–Ω—è?',
      'üéØ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º streak! –£–∂–µ {streak} –¥–Ω–µ–π —Ä–∞–∑–≤–∏–≤–∞–µ–º—Å—è –≤–º–µ—Å—Ç–µ!',
      'üöÄ –ü–æ—Ä–∞ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å {name}! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å - –Ω–æ–≤–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ!',
      '‚≠ê {name} –≥–æ—Ç–æ–≤(–∞) –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–Ω–∏—è–º! –ù–∞—á–∏–Ω–∞–µ–º?'
    ],
    streak: [
      'üî• –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! {streak} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥! {name} –Ω–∞—Å—Ç–æ—è—â–∏–π —á–µ–º–ø–∏–æ–Ω!',
      'üëë –ü–æ—Ç—Ä—è—Å–∞—é—â–∏–π streak - {streak} –¥–Ω–µ–π! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!',
      'üèÜ {streak} –¥–Ω–µ–π –∑–∞–Ω—è—Ç–∏–π! {name} —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–º–Ω–µ–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!'
    ],
    encouragement: [
      'üí™ –î–∞–∂–µ 10 –º–∏–Ω—É—Ç –∑–∞–Ω—è—Ç–∏–π –ø—Ä–∏–Ω–µ—Å—É—Ç –ø–æ–ª—å–∑—É {name}!',
      'üå± –ö–∞–∂–¥–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ–≥–∞–µ—Ç {name} —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!',
      '‚ù§Ô∏è {name} –ª—é–±–∏—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è —Å –≤–∞–º–∏ –∑–∞ –∏–≥—Ä–∞–º–∏!'
    ]
  });

  // –ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const [notificationHistory, setNotificationHistory] = useState([
    {
      id: 1,
      message: '–í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å –ê–Ω–¥—Ä–µ–π! –°–µ–≥–æ–¥–Ω—è –∏–∑—É—á–∞–µ–º —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ?',
      timestamp: '2025-01-14 19:00',
      type: 'daily',
      opened: true
    },
    {
      id: 2,
      message: '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥! –ê–Ω–¥—Ä–µ–π –Ω–∞—Å—Ç–æ—è—â–∏–π —á–µ–º–ø–∏–æ–Ω!',
      timestamp: '2025-01-13 19:00',
      type: 'streak',
      opened: true
    }
  ]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const checkNotificationStatus = async () => {
    if (telegramUser?.id) {
      try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è:', telegramUser.id);
        
        const response = await fetch(`https://telegram-bot-server-production-8dfb.up.railway.app/api/telegram/status/${telegramUser.id}`);
        
        if (response.ok) {
          const status = await response.json();
          console.log('üìä –°—Ç–∞—Ç—É—Å —Å —Å–µ—Ä–≤–µ—Ä–∞:', status);
          
          if (status.connected) {
            console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
            setBotConnected(true);
            setNotificationSettings(prev => ({
              ...prev,
              enabled: status.enabled,
              time: status.time || prev.time,
              reminderType: status.type || prev.reminderType
            }));
          } else {
            console.log('‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
            setBotConnected(false);
          }
        } else {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞:', response.status);
          setBotConnected(false);
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
        setBotConnected(false);
      }
    }
  };

  // Telegram Mini App integration
  useEffect(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
    if (window.Telegram && window.Telegram.WebApp) {
      const tg = window.Telegram.WebApp;
      tg.ready();
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = tg.initDataUnsafe?.user;
      if (user) {
        setTelegramUser(user);
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è —Ä–µ–±–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        setChild(prev => ({
          ...prev,
          name: user.first_name || '–ú–∞–ª—ã—à'
        }));
      }

      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥
      tg.setHeaderColor('#ffffff');
      tg.setBackgroundColor('#f8fafc');
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
      tg.onEvent('backButtonClicked', () => {
        if (currentScreen !== 'main') {
          setCurrentScreen('main');
          setSelectedActivity(null);
        }
      });

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
      if (currentScreen !== 'main') {
        tg.BackButton.show();
      } else {
        tg.BackButton.hide();
      }
    }
  }, [currentScreen]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    if (telegramUser) {
      const timer = setTimeout(() => {
        checkNotificationStatus();
      }, 2000);
      
      return () => clearTimeout(timer);
    }
  }, [telegramUser]);
  
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Bot
  const connectToBot = async () => {
    try {
      console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É, telegramUser:', telegramUser);
      
      const response = await fetch('https://telegram-bot-server-production-8dfb.up.railway.app/api/telegram/connect', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userId: telegramUser?.id,
          username: telegramUser?.username,
          settings: notificationSettings
        })
      });

      const result = await response.json();
      console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);

      if (response.ok && result.success) {
        setBotConnected(true);
        setNotificationSettings(prev => ({ ...prev, enabled: true }));
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        let message = '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω—ã!';
        if (result.needsBotStart) {
          message += '\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /start';
        }
        
        if (window.Telegram?.WebApp) {
          window.Telegram.WebApp.showAlert(message);
        } else {
          alert(message);
        }
      } else {
        throw new Error(result.message || '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É:', error);
      if (window.Telegram?.WebApp) {
        window.Telegram.WebApp.showAlert('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: ' + error.message);
      } else {
        alert('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: ' + error.message);
      }
    }
  };

  const sendTestNotification = async () => {
    if (!botConnected) {
      if (window.Telegram?.WebApp) {
        window.Telegram.WebApp.showAlert('–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –±–æ—Ç—É!');
      }
      return;
    }

    try {
      const message = getRandomMessage(notificationSettings.reminderType);
      
      const response = await fetch('https://telegram-bot-server-production-8dfb.up.railway.app/api/telegram/send-notification', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userId: telegramUser?.id,
          message: message
        })
      });

      if (response.ok) {
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        const newNotification = {
          id: Date.now(),
          message: message,
          timestamp: new Date().toISOString(),
          type: notificationSettings.reminderType,
          opened: false
        };
        
        setNotificationHistory(prev => [newNotification, ...prev]);
        
        if (window.Telegram?.WebApp) {
          window.Telegram.WebApp.showAlert('–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ Telegram Payments
  const createTelegramPayment = async () => {
    if (!window.Telegram?.WebApp) {
      alert('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ Telegram');
      return;
    }

    setPaymentStatus('processing');
    
    try {
      // –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–æ–π—Å —á–µ—Ä–µ–∑ Telegram Bot API
      const response = await fetch('https://telegram-bot-server-production-8dfb.up.railway.app/api/telegram/create-invoice', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userId: telegramUser?.id,
          amount: 299,
          description: '–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –†–∞–∑–≤–∏–≤–∞–π–∫–∞',
          payload: `premium_card_${telegramUser?.id}_${Date.now()}`
        })
      });

      if (response.ok) {
        const { invoiceUrl } = await response.json();
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–Ω–≤–æ–π—Å –≤ Telegram
        window.Telegram.WebApp.openInvoice(invoiceUrl, (status) => {
          if (status === 'paid') {
            setPaymentStatus('success');
            setIsPremium(true);
            setTimeout(() => {
              setShowPayment(false);
              setPaymentStatus('idle');
            }, 2000);
          } else {
            setPaymentStatus('error');
          }
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
      setPaymentStatus('error');
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ –∫–∞—Ä—Ç—É
const createCardPayment = async () => {
  if (!window.Telegram?.WebApp) {
    alert('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ Telegram');
    return;
  }

  setPaymentStatus('processing');

  try {
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–æ–π—Å —á–µ—Ä–µ–∑ Telegram Bot API (–¥–ª—è –∫–∞—Ä—Ç)
    const response = await fetch('https://telegram-bot-server-production-8dfb.up.railway.app/api/telegram/create-invoice', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        userId: telegramUser?.id,
        amount: 299
      })
    });

    if (response.ok) {
      const { invoiceUrl } = await response.json();
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–Ω–≤–æ–π—Å –≤ Telegram
      window.Telegram.WebApp.openInvoice(invoiceUrl, (status) => {
        if (status === 'paid') {
          setPaymentStatus('success');
          setIsPremium(true);
          setTimeout(() => {
            setShowPayment(false);
            setPaymentStatus('idle');
          }, 2000);
        } else {
          setPaymentStatus('error');
        }
      });
    } else {
      setPaymentStatus('error');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
    setPaymentStatus('error');
  }
};

  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram Stars
  const createStarsPayment = async () => {
    if (!window.Telegram?.WebApp) {
      alert('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ Telegram');
      return;
    }

    setPaymentStatus('processing');
    
    try {
      // –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars
      const response = await fetch('https://telegram-bot-server-production-8dfb.up.railway.app/api/telegram/create-stars-invoice', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userId: telegramUser?.id,
          stars: 100, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥
          description: '–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –†–∞–∑–≤–∏–≤–∞–π–∫–∞',
          payload: `premium_stars_${Date.now()}`
        })
      });

      if (response.ok) {
        const { invoiceUrl } = await response.json();
        
        window.Telegram.WebApp.openInvoice(invoiceUrl, (status) => {
          if (status === 'paid') {
            setPaymentStatus('success');
            setIsPremium(true);
            setTimeout(() => {
              setShowPayment(false);
              setPaymentStatus('idle');
            }, 2000);
          } else {
            setPaymentStatus('error');
          }
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
      setPaymentStatus('error');
    }
  };

  // –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
  const simulatePaymentSuccess = () => {
    setPaymentStatus('success');
    setIsPremium(true);
    setTimeout(() => {
      setShowPayment(false);
      setPaymentStatus('idle');
    }, 2000);
  };

  // –£—Ç–∏–ª–∏—Ç—ã
  const getAgeText = (age) => {
    if (age === 1) return '–≥–æ–¥';
    if (age < 5) return '–≥–æ–¥–∞';
    return '–ª–µ—Ç';
  };

  const getCategoryColor = (category) => {
    const colors = {
      '–ú–æ—Ç–æ—Ä–∏–∫–∞': 'bg-blue-100 text-blue-800',
      '–†–µ—á—å': 'bg-green-100 text-green-800',
      '–õ–æ–≥–∏–∫–∞': 'bg-purple-100 text-purple-800',
      '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ': 'bg-pink-100 text-pink-800',
      '–†–∞–∑–≤–∏—Ç–∏–µ': 'bg-orange-100 text-orange-800'
    };
    return colors[category] || 'bg-gray-100 text-gray-800';
  };

  const getDifficultyColor = (difficulty) => {
    const colors = {
      '–õ–µ–≥–∫–æ': 'bg-green-100 text-green-800',
      '–°—Ä–µ–¥–Ω–µ': 'bg-yellow-100 text-yellow-800',
      '–°–ª–æ–∂–Ω–æ': 'bg-red-100 text-red-800'
    };
    return colors[difficulty] || 'bg-gray-100 text-gray-800';
  };

  const getNotificationTypeColor = (type) => {
    const colors = {
      'daily': 'bg-blue-100 text-blue-800',
      'streak': 'bg-orange-100 text-orange-800',
      'encouragement': 'bg-green-100 text-green-800',
      'reminder': 'bg-purple-100 text-purple-800'
    };
    return colors[type] || 'bg-gray-100 text-gray-800';
  };

  const getFilteredActivities = () => {
    const activities = activitiesDatabase[child.age] || [];
    if (selectedCategory === 'all') {
      return activities;
    }
    return activities.filter(activity => activity.category === selectedCategory);
  };

  const getActivityCategories = () => {
    const activities = activitiesDatabase[child.age] || [];
    const categories = [...new Set(activities.map(activity => activity.category))];
    return categories.map(cat => ({
      id: cat,
      name: cat,
      count: activities.filter(a => a.category === cat).length
    }));
  };

  const getRandomMessage = (type) => {
    const messages = motivationalMessages[type] || motivationalMessages.daily;
    const randomMessage = messages[Math.floor(Math.random() * messages.length)];
    return randomMessage
      .replace('{name}', child.name)
      .replace('{streak}', child.streak);
  };

  // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã –¥–ª—è Telegram
  const PaymentModal = () => {
    if (!showPayment) return null;

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
        <div className="bg-white rounded-2xl p-6 max-w-md w-full max-h-[90vh] overflow-y-auto">
          <div className="text-center">
            <div className="bg-gradient-to-r from-purple-600 to-pink-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-white text-2xl">üëë</span>
            </div>
            
            <h2 className="text-2xl font-bold text-gray-800 mb-2">–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞</h2>
            <p className="text-gray-600 mb-6">–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
            
            <div className="bg-gray-50 rounded-lg p-4 mb-6">
              <h3 className="font-semibold text-gray-800 mb-3">–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –ø—Ä–µ–º–∏—É–º:</h3>
              <ul className="text-sm text-gray-600 space-y-2">
                <li className="flex items-center">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
                </li>
                <li className="flex items-center">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ä–∞–∑–≤–∏—Ç–∏—è
                </li>
                <li className="flex items-center">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                </li>
                <li className="flex items-center">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
                </li>
                <li className="flex items-center">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
                </li>
              </ul>
            </div>
            
            <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg p-4 mb-6">
              <div className="flex items-center justify-between">
                <span className="text-gray-600">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                <span className="text-2xl font-bold text-purple-600">299‚ÇΩ/–º–µ—Å</span>
              </div>
              <p className="text-sm text-gray-500 mt-1">–∏–ª–∏ 100 ‚≠ê Telegram Stars</p>
            </div>
            
            {paymentStatus === 'processing' && (
              <div className="mb-4">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600 mx-auto"></div>
                <p className="text-sm text-gray-600 mt-2">–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...</p>
              </div>
            )}
            
            {paymentStatus === 'success' && (
              <div className="mb-4 p-4 bg-green-50 rounded-lg">
                <div className="text-green-500 text-2xl mb-2">‚úì</div>
                <p className="text-green-800 font-semibold">–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!</p>
                <p className="text-sm text-green-600">–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω</p>
              </div>
            )}
            
            {paymentStatus === 'error' && (
              <div className="mb-4 p-4 bg-red-50 rounded-lg">
                <div className="text-blue-500 text-2xl mb-2">üí¨</div>
                <p className="text-sm text-blue-600">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - —Ç–∞–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã</p>
              </div>
            )}
            
            <div className="space-y-3">
              <button
                onClick={createCardPayment}
                disabled={paymentStatus === 'processing'}
                className="w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-3 rounded-lg font-medium hover:from-blue-600 hover:to-blue-700 transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
              >
                <span className="mr-2">üí≥</span>
                {paymentStatus === 'processing' ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π'}
              </button>
              
              <button
                onClick={createStarsPayment}
                disabled={paymentStatus === 'processing'}
                className="w-full bg-gradient-to-r from-yellow-500 to-yellow-600 text-white py-3 rounded-lg font-medium hover:from-yellow-600 hover:to-yellow-700 transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
              >
                <span className="mr-2">‚≠ê</span>
                {paymentStatus === 'processing' ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–û–ø–ª–∞—Ç–∏—Ç—å Stars'}
              </button>
              
              <button
                onClick={() => setShowPayment(false)}
                className="w-full bg-gray-300 text-gray-700 py-3 rounded-lg font-medium hover:bg-gray-400 transition-colors"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Telegram
  if (currentScreen === 'main') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
        <div className="bg-white shadow-sm px-4 py-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-gray-800">–ü—Ä–∏–≤–µ—Ç, {child.name}! üëã</h1>
              <p className="text-gray-600">–í–æ–∑—Ä–∞—Å—Ç: {child.age} {getAgeText(child.age)}</p>
              {telegramUser && (
                <p className="text-xs text-gray-500 mt-1">
                  Telegram: @{telegramUser.username || telegramUser.first_name}
                </p>
              )}
            </div>
            <div className="flex items-center space-x-3">
              <div className="flex items-center bg-orange-100 px-3 py-1 rounded-full">
                <span className="text-sm font-medium text-orange-800">üèÜ {child.streak} –¥–Ω–µ–π</span>
              </div>
              <button 
                onClick={() => setCurrentScreen('notifications')}
                className="p-2 bg-gray-100 rounded-full hover:bg-gray-200 transition-colors relative"
              >
                <span className="text-xl">üîî</span>
                {botConnected && (
                  <span className="absolute -top-1 -right-1 w-3 h-3 bg-green-500 rounded-full"></span>
                )}
              </button>
              <button 
                onClick={() => setCurrentScreen('settings')}
                className="p-2 bg-gray-100 rounded-full hover:bg-gray-200 transition-colors"
              >
                ‚öôÔ∏è
              </button>
            </div>
          </div>
        </div>

        {/* Telegram Bot Connection */}
        {!botConnected && (
          <div className="mx-4 mt-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="font-bold flex items-center">ü§ñ –ü–æ–¥–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <p className="text-sm opacity-90">–ë–æ—Ç –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –∑–∞–Ω—è—Ç–∏—è—Ö –≤ Telegram</p>
              </div>
              <button 
                onClick={connectToBot}
                className="bg-white bg-opacity-20 text-white px-4 py-2 rounded-lg font-medium hover:bg-opacity-30 transition-colors"
              >
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å
              </button>
            </div>
          </div>
        )}

        {/* Notification Status */}
        {botConnected && (
          <div className="mx-4 mt-4 bg-gradient-to-r from-green-500 to-green-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="font-bold flex items-center">‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã</h3>
                <p className="text-sm opacity-90">–°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ {notificationSettings.time}</p>
              </div>
              <button 
                onClick={() => setCurrentScreen('notifications')}
                className="bg-white bg-opacity-20 text-white px-4 py-2 rounded-lg font-medium hover:bg-opacity-30 transition-colors"
              >
                –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
              </button>
            </div>
          </div>
        )}

        {!isPremium && (
          <div className="mx-4 mt-4 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="font-bold flex items-center">üëë –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞</h3>
                <p className="text-sm opacity-90">–û—Ç–∫—Ä–æ–π –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</p>
              </div>
              <button 
                onClick={() => setShowPayment(true)}
                className="bg-white text-purple-600 px-4 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors"
              >
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å
              </button>
            </div>
          </div>
        )}

        <div className="px-4 py-6">
          <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
            <div className="text-center mb-6">
              <div className="bg-gradient-to-r from-green-400 to-blue-500 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-3xl">‚ñ∂Ô∏è</span>
              </div>
              <h2 className="text-xl font-bold text-gray-800 mb-2">–í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è!</h2>
              <p className="text-gray-600">–í—ã–±–µ—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è {child.name}</p>
            </div>
            
            <button 
              onClick={() => setCurrentScreen('activities')}
              className="w-full bg-gradient-to-r from-green-500 to-blue-500 text-white py-4 rounded-xl font-medium text-lg hover:from-green-600 hover:to-blue-600 transition-all transform hover:scale-105"
            >
              –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </button>
          </div>

          <div className="grid grid-cols-2 gap-4 mb-6">
            <div className="bg-white rounded-xl p-4 shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-2xl font-bold text-blue-600">{(activitiesDatabase[child.age] || []).length}</p>
                  <p className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
                </div>
                <span className="text-2xl">üéØ</span>
              </div>
            </div>
            <div className="bg-white rounded-xl p-4 shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-2xl font-bold text-purple-600">{progressData.totalTime}—á</p>
                  <p className="text-sm text-gray-600">–í—Ä–µ–º—è —Ä–∞–∑–≤–∏—Ç–∏—è</p>
                </div>
                <span className="text-2xl">‚è∞</span>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-2 gap-4">
            <button 
              onClick={() => setCurrentScreen('progress')}
              className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow"
            >
              <div className="flex items-center justify-center mb-2">
                <span className="text-2xl">üìÖ</span>
              </div>
              <p className="text-sm font-medium text-gray-800">–ü—Ä–æ–≥—Ä–µ—Å—Å</p>
            </button>
            <button 
              onClick={() => setCurrentScreen('library')}
              className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow"
            >
              <div className="flex items-center justify-center mb-2">
                <span className="text-2xl">üìö</span>
              </div>
              <p className="text-sm font-medium text-gray-800">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞</p>
            </button>
          </div>
        </div>

        {/* Age Selector for testing */}
        <div className="px-4 pb-6">
          <div className="bg-gray-100 rounded-lg p-4">
            <p className="text-sm text-gray-600 mb-2">–¢–µ—Å—Ç –≤–æ–∑—Ä–∞—Å—Ç–æ–≤:</p>
            <div className="flex gap-2 flex-wrap">
              {[1,2,3,4,5,6,7].map(age => (
                <button 
                  key={age}
                  onClick={() => setChild({...child, age})}
                  className={`px-3 py-1 rounded text-sm ${
                    child.age === age ? 'bg-blue-500 text-white' : 'bg-white text-gray-600'
                  }`}
                >
                  {age} {getAgeText(age)}
                </button>
              ))}
            </div>
          </div>
        </div>

        <PaymentModal />
      </div>
    );
  }

  // –≠–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram Bot
  if (currentScreen === 'notifications') {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => setCurrentScreen('main')}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div>
              <h1 className="text-xl font-bold text-gray-800">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h1>
              <p className="text-sm text-gray-600">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π —á–µ—Ä–µ–∑ Telegram</p>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Bot Connection Status */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <div className="flex items-center justify-between mb-4">
              <div>
                <h2 className="text-lg font-bold text-gray-800">Telegram Bot</h2>
                <p className="text-sm text-gray-600">@{notificationSettings.botUsername}</p>
              </div>
              <div className={`px-3 py-1 rounded-full text-sm font-medium ${
                botConnected ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'
              }`}>
                {botConnected ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'}
              </div>
            </div>

            {!botConnected ? (
              <div className="space-y-4">
                <div className="bg-blue-50 rounded-lg p-4">
                  <h3 className="font-semibold text-blue-900 mb-2">–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</h3>
                  <ol className="text-sm text-blue-800 space-y-1">
                    <li>1. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @{notificationSettings.botUsername} –≤ Telegram</li>
                    <li>2. –ù–∞–∂–º–∏—Ç–µ /start</li>
                    <li>3. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å"</li>
                  </ol>
                </div>
                
                <button
                  onClick={connectToBot}
                  className="w-full bg-blue-500 text-white py-3 rounded-lg font-medium hover:bg-blue-600 transition-colors"
                >
                  –ü–æ–¥–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞
                </button>
              </div>
            ) : (
              <div className="space-y-4">
                <div className="bg-green-50 rounded-lg p-4">
                  <h3 className="font-semibold text-green-900 mb-2">‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!</h3>
                  <p className="text-sm text-green-800">
                    –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö –ø—Ä—è–º–æ –≤ Telegram
                  </p>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                  </label>
                  <input 
                    type="time" 
                    value={notificationSettings.time}
                    onChange={(e) => setNotificationSettings({
                      ...notificationSettings, 
                      time: e.target.value
                    })}
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ß–∞—Å—Ç–æ—Ç–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
                  </label>
                  <select 
                    value={notificationSettings.frequency}
                    onChange={(e) => setNotificationSettings({
                      ...notificationSettings, 
                      frequency: e.target.value
                    })}
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  >
                    <option value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</option>
                    <option value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</option>
                    <option value="custom">–í—ã–±—Ä–∞—Ç—å –¥–Ω–∏</option>
                  </select>
                </div>
              </div>
            )}
          </div>

          {/* Notification Type */}
          {botConnected && (
            <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
              <h2 className="text-lg font-bold text-gray-800 mb-4">–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π</h2>
              <div className="space-y-3">
                {[
                  { 
                    value: 'motivational', 
                    label: '–ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ', 
                    description: '–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∑–∞–Ω—è—Ç–∏–π',
                    example: getRandomMessage('daily')
                  },
                  { 
                    value: 'simple', 
                    label: '–ü—Ä–æ—Å—Ç—ã–µ', 
                    description: '–ö—Ä–∞—Ç–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω—è—Ç–∏–π',
                    example: `–í—Ä–µ–º—è –¥–ª—è –∑–∞–Ω—è—Ç–∏–π —Å ${child.name}!`
                  },
                  { 
                    value: 'streak', 
                    label: '–° streak', 
                    description: '–ê–∫—Ü–µ–Ω—Ç –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç–∏',
                    example: getRandomMessage('streak')
                  }
                ].map((type) => (
                  <button
                    key={type.value}
                    onClick={() => setNotificationSettings({
                      ...notificationSettings,
                      reminderType: type.value
                    })}
                    className={`w-full p-4 rounded-lg border-2 transition-colors text-left ${
                      notificationSettings.reminderType === type.value
                        ? 'border-blue-500 bg-blue-50'
                        : 'border-gray-200 hover:border-gray-300'
                    }`}
                  >
                    <div className="flex items-center justify-between mb-2">
                      <h3 className="font-semibold text-gray-800">{type.label}</h3>
                      {notificationSettings.reminderType === type.value && (
                        <span className="text-blue-500">‚úì</span>
                      )}
                    </div>
                    <p className="text-sm text-gray-600 mb-2">{type.description}</p>
                    <p className="text-xs text-gray-500 italic">"{type.example}"</p>
                  </button>
                ))}
              </div>
            </div>
          )}

          {/* Test Notification */}
          {botConnected && (
            <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
              <h2 className="text-lg font-bold text-gray-800 mb-4">–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h2>
              <p className="text-sm text-gray-600 mb-4">
                –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
              </p>
              
              <div className="bg-blue-50 border-l-4 border-blue-500 p-4 rounded-lg mb-4">
                <div className="flex items-center mb-2">
                  <span className="text-blue-500 mr-2">ü§ñ</span>
                  <span className="font-semibold text-blue-900">–†–∞–∑–≤–∏–≤–∞–π–∫–∞ –ë–æ—Ç</span>
                  <span className="text-xs text-blue-600 ml-auto">{notificationSettings.time}</span>
                </div>
                <p className="text-blue-800">
                  {getRandomMessage(notificationSettings.reminderType)}
                </p>
              </div>

              <button 
                onClick={sendTestNotification}
                className="w-full bg-blue-500 text-white py-3 rounded-lg font-medium hover:bg-blue-600 transition-colors"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
              </button>
            </div>
          )}

          {/* Notification History */}
          <div className="bg-white rounded-xl p-6 shadow-sm">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h2>
            <div className="space-y-3">
              {notificationHistory.map((notification) => (
                <div 
                  key={notification.id} 
                  className={`p-3 rounded-lg ${
                    notification.opened ? 'bg-gray-50' : 'bg-blue-50'
                  }`}
                >
                  <div className="flex items-center justify-between mb-2">
                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getNotificationTypeColor(notification.type)}`}>
                      {notification.type === 'daily' ? '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ' : 
                       notification.type === 'streak' ? 'Streak' : '–î—Ä—É–≥–æ–µ'}
                    </span>
                    <span className="text-xs text-gray-500">
                      {new Date(notification.timestamp).toLocaleString('ru-RU')}
                    </span>
                  </div>
                  <p className="text-sm text-gray-700">{notification.message}</p>
                  {!notification.opened && (
                    <span className="inline-block w-2 h-2 bg-blue-500 rounded-full mt-2"></span>
                  )}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

// –≠–∫—Ä–∞–Ω –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
  if (currentScreen === 'activities') {
    const categories = getActivityCategories();
    const filteredActivities = getFilteredActivities();
    const freeActivities = filteredActivities.filter(a => !a.premium);
    const premiumActivities = filteredActivities.filter(a => a.premium);

    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => {
                setSelectedActivity(null);
                setCurrentScreen('main');
              }}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div>
              <h1 className="text-xl font-bold text-gray-800">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h1>
              <p className="text-sm text-gray-600">{child.age} {getAgeText(child.age)} ‚Ä¢ {filteredActivities.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</p>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Categories Filter */}
          <div className="mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
            <div className="flex gap-2 overflow-x-auto pb-2">
              <button
                onClick={() => setSelectedCategory('all')}
                className={`px-4 py-2 rounded-full whitespace-nowrap transition-all ${
                  selectedCategory === 'all'
                    ? 'bg-blue-500 text-white'
                    : 'bg-white text-gray-600 hover:bg-gray-100'
                }`}
              >
                –í—Å–µ ({(activitiesDatabase[child.age] || []).length})
              </button>
              {categories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => setSelectedCategory(category.id)}
                  className={`px-4 py-2 rounded-full whitespace-nowrap transition-all ${
                    selectedCategory === category.id
                      ? 'bg-blue-500 text-white'
                      : 'bg-white text-gray-600 hover:bg-gray-100'
                  }`}
                >
                  {category.name} ({category.count})
                </button>
              ))}
            </div>
          </div>

          {/* Free Activities */}
          {freeActivities.length > 0 && (
            <div className="mb-8">
              <h2 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
                <span className="text-green-500 mr-2">üÜì</span>
                –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ({freeActivities.length})
              </h2>
              <div className="space-y-3">
                {freeActivities.map((activity) => (
                  <div key={activity.id} className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow">
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center mb-2">
                          <span className="text-2xl mr-3">{activity.icon}</span>
                          <div className="flex-1">
                            <h3 className="font-semibold text-gray-800">{activity.title}</h3>
                            <div className="flex items-center gap-2 mt-1">
                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getCategoryColor(activity.category)}`}>
                                {activity.category}
                              </span>
                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getDifficultyColor(activity.difficulty)}`}>
                                {activity.difficulty}
                              </span>
                              <span className="text-xs text-gray-500 flex items-center">
                                ‚è±Ô∏è {activity.duration}
                              </span>
                            </div>
                          </div>
                        </div>
                        <p className="text-sm text-gray-600 ml-11 mb-2">{activity.description}</p>
                        <p className="text-xs text-gray-500 ml-11">–í–æ–∑—Ä–∞—Å—Ç: {activity.ageRange}</p>
                      </div>
                      <div className="ml-4 flex flex-col gap-2">


<button
  onClick={() => {
    setSelectedActivity(activity);
    setCurrentScreen('activity-details');
  }}
  className="bg-blue-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-600 transition-colors text-sm"
>
  –ü–æ–¥—Ä–æ–±–Ω–µ–µ
</button>
                        
<button 
  onClick={() => {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.showAlert(
        `üöÄ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${activity.title}" –Ω–∞—á–∞—Ç–∞!\n\n` +
        `‚è±Ô∏è –í—Ä–µ–º—è: ${activity.duration}\n` +
        `üéØ –ü–æ–ª—å–∑–∞: ${activity.benefits}\n\n` +
        `–£–¥–∞—á–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π —Å ${child.name}! üí™`
      );
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
      const minutes = parseInt(activity.duration.replace(' –º–∏–Ω', '').trim());
      if (minutes) {
        setTimeout(() => {
          window.Telegram.WebApp.showAlert(`‚è∞ –ü—Ä–æ—à–ª–æ ${minutes} –º–∏–Ω—É—Ç!\n\n–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${activity.title}" –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ\n\n–ö–∞–∫ –ø—Ä–æ—à–ª–∏ –∑–∞–Ω—è—Ç–∏—è?`);
        }, minutes * 60 * 1000); // —Ä–µ–∞–ª—å–Ω—ã–µ –º–∏–Ω—É—Ç—ã
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ —Ç–∞–π–º–µ—Ä–∞
        setTimeout(() => {
          window.Telegram.WebApp.showAlert(`‚è∞ –¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${minutes} –º–∏–Ω—É—Ç!\n\n–ú—ã –Ω–∞–ø–æ–º–Ω–∏–º –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –≤—ã–π–¥–µ—Ç! ‚è±Ô∏è`);
        }, 2000);
      }
    } else {
      alert(`–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${activity.title}" –Ω–∞—á–∞—Ç–∞! üéØ`);
    }
  }}
  className="bg-green-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-600 transition-colors text-sm"
>
  –ù–∞—á–∞—Ç—å
</button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Premium Activities */}
          {premiumActivities.length > 0 && (
            <div className="mb-6">
              <h2 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
                <span className="text-yellow-500 mr-2">üëë</span>
                –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ({premiumActivities.length})
              </h2>
              <div className="space-y-3">
                {premiumActivities.map((activity) => (
                  <div key={activity.id} className={`bg-white rounded-xl p-4 shadow-sm ${!isPremium ? 'opacity-75' : 'hover:shadow-md transition-shadow'}`}>
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center mb-2">
                          <span className="text-2xl mr-3">{activity.icon}</span>
                          <div className="flex-1">
                            <h3 className="font-semibold text-gray-800 flex items-center">
                              {activity.title}
                              {!isPremium && <span className="ml-2 text-gray-400">üîí</span>}
                            </h3>
                            <div className="flex items-center gap-2 mt-1">
                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getCategoryColor(activity.category)}`}>
                                {activity.category}
                              </span>
                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getDifficultyColor(activity.difficulty)}`}>
                                {activity.difficulty}
                              </span>
                              <span className="text-xs text-gray-500 flex items-center">
                                ‚è±Ô∏è {activity.duration}
                              </span>
                            </div>
                          </div>
                        </div>
                        <p className="text-sm text-gray-600 ml-11 mb-2">{activity.description}</p>
                        <p className="text-xs text-gray-500 ml-11">–í–æ–∑—Ä–∞—Å—Ç: {activity.ageRange}</p>
                      </div>
                      <div className="ml-4 flex flex-col gap-2">
                        <button 
                          onClick={() => {
                            if (isPremium) {
                              setSelectedActivity(activity);
                            } else {
                              setShowPayment(true);
                            }
                          }}
                          className={`px-4 py-2 rounded-lg font-medium transition-colors text-sm ${
                            isPremium 
                              ? 'bg-blue-500 text-white hover:bg-blue-600' 
                              : 'bg-gray-300 text-gray-500'
                          }`}
                        >
                          {isPremium ? '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' : '–ü—Ä–µ–º–∏—É–º'}
                        </button>
                        <button 
                          onClick={() => {
                            if (isPremium) {
                              if (window.Telegram?.WebApp) {
                                window.Telegram.WebApp.showAlert(`–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${activity.title}" –Ω–∞—á–∞—Ç–∞! ‚ú®`);
                              } else {
                                alert(`–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${activity.title}" –Ω–∞—á–∞—Ç–∞! ‚ú®`);
                              }
                            } else {
                              setShowPayment(true);
                            }
                          }}
                          className={`px-4 py-2 rounded-lg font-medium transition-colors text-sm ${
                            isPremium 
                              ? 'bg-purple-500 text-white hover:bg-purple-600' 
                              : 'bg-gray-300 text-gray-500'
                          }`}
                        >
                          {isPremium ? '–ù–∞—á–∞—Ç—å' : '–ü—Ä–µ–º–∏—É–º'}
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Upgrade prompt for non-premium users */}
          {!isPremium && premiumActivities.length > 0 && (
            <div className="bg-gradient-to-r from-purple-600 to-pink-600 rounded-xl p-6 text-white text-center">
              <h3 className="text-lg font-bold mb-2">üöÄ –†–∞–∑–±–ª–æ–∫–∏—Ä—É–π –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!</h3>
              <p className="text-sm opacity-90 mb-4">
                –ü–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ {premiumActivities.length} –ø—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
              </p>
              <div className="bg-white bg-opacity-20 rounded-lg p-3 mb-4">
                <div className="text-sm space-y-1">
                  <p>‚ú® –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ –∏–≥—Ä—ã</p>
                  <p>üìö –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤</p>
                  <p>üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ä–∞–∑–≤–∏—Ç–∏—è</p>
                  <p>üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</p>
                </div>
              </div>
              <button 
                onClick={() => setShowPayment(true)}
                className="bg-white text-purple-600 px-6 py-3 rounded-lg font-medium hover:bg-gray-100 transition-colors"
              >
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º - 299‚ÇΩ/–º–µ—Å
              </button>
            </div>
          )}

          {/* No activities message */}
          {filteredActivities.length === 0 && (
            <div className="text-center py-12">
              <div className="text-6xl mb-4">üéØ</div>
              <h3 className="text-xl font-bold text-gray-800 mb-2">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
              <p className="text-gray-600 mb-6">
                –î–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ {child.age} {getAgeText(child.age)} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{selectedCategory}" –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –Ω–µ—Ç
              </p>
              <button 
                onClick={() => setSelectedCategory('all')}
                className="bg-blue-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-600 transition-colors"
              >
                –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
              </button>
            </div>
          )}
        </div>
      </div>
    );
  }

// –ù–û–í–´–ô —ç–∫—Ä–∞–Ω –¥–µ—Ç–∞–ª–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
if (currentScreen === 'activity-details' && selectedActivity) {
  return (
import React, { useState, useEffect } from 'react';

const ChildDevelopmentApp = () => {
  const [currentScreen, setCurrentScreen] = useState('main');
  const [isPremium, setIsPremium] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedActivity, setSelectedActivity] = useState(null);
  const [showPayment, setShowPayment] = useState(false);
  const [paymentStatus, setPaymentStatus] = useState('idle');
  const [telegramUser, setTelegramUser] = useState(null);
  const [botConnected, setBotConnected] = useState(false);
  const [child, setChild] = useState({
    name: '–ê–Ω–¥—Ä–µ–π',
    age: 2,
    streak: 7
  });
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram Bot
  const [notificationSettings, setNotificationSettings] = useState({
    enabled: false,
    time: '19:00',
    frequency: 'daily',
    reminderType: 'motivational',
    botUsername: 'razvivay–∫–∞_bot',
    quietHours: {
      enabled: true,
      start: '21:00',
      end: '08:00'
    },
    weekendMode: false,
    customDays: {
      monday: true,
      tuesday: true,
      wednesday: true,
      thursday: true,
      friday: true,
      saturday: true,
      sunday: false
    }
  });

  // –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const [progressData] = useState({
    weeklyActivities: [true, true, false, true, true, false, false],
    totalActivities: 45,
    totalTime: 12.5,
    skillsProgress: {
      motor: 85,
      speech: 70,
      logic: 60,
      creativity: 90,
      development: 75
    },
    achievements: [
      { id: 1, title: '–ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è', description: '7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥', icon: 'üéØ', unlocked: true },
      { id: 2, title: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π', description: '10 —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π', icon: 'üé®', unlocked: true },
      { id: 3, title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', description: '15 –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–≥—Ä', icon: 'üîç', unlocked: false, progress: 12 },
      { id: 4, title: '–ú–µ—Å—è—Ü —Ä–∞–∑–≤–∏—Ç–∏—è', description: '30 –¥–Ω–µ–π –∑–∞–Ω—è—Ç–∏–π', icon: 'üìÖ', unlocked: false, progress: 15 }
    ],
    recentActivities: [
      { name: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º', category: '–õ–æ–≥–∏–∫–∞', date: '2025-01-13', duration: 20 },
      { name: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏', category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', date: '2025-01-13', duration: 25 },
      { name: '–ü—Ä–æ—Å—Ç—ã–µ –ø–∞–∑–ª—ã', category: '–õ–æ–≥–∏–∫–∞', date: '2025-01-12', duration: 15 }
    ]
  });

  // –ë–∞–∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
  const [activitiesDatabase] = useState({
    1: [
      {
        id: 1,
        title: '–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞',
        description: '–ò—Å—Å–ª–µ–¥—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã: –ø–µ—Å–æ–∫, –∫—Ä—É–ø—ã, —Ç–∫–∞–Ω–∏',
        duration: '15 –º–∏–Ω',
        category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
        premium: false,
        icon: 'ü§≤',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–ö–æ—Ä–æ–±–∫–∞', '–†–∏—Å/–≥—Ä–µ—á–∫–∞', '–¢–∫–∞–Ω–∏ —Ä–∞–∑–Ω–æ–π —Ç–µ–∫—Å—Ç—É—Ä—ã', '–ú–µ–ª–∫–∏–µ –∏–≥—Ä—É—à–∫–∏'],
        instructions: [
          '–í–æ–∑—å–º–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –∫–æ—Ä–æ–±–∫—É –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä',
          '–ù–∞–ø–æ–ª–Ω–∏—Ç–µ –µ—ë —Ä–∏—Å–æ–º, –≥—Ä–µ—á–∫–æ–π –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫—Ä—É–ø–æ–π',
          '–î–æ–±–∞–≤—å—Ç–µ –∫—É—Å–æ—á–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∫–∞–Ω–µ–π',
          '–°–ø—Ä—è—á—å—Ç–µ –º–µ–ª–∫–∏–µ –∏–≥—Ä—É—à–∫–∏ –≤ –Ω–∞–ø–æ–ª–Ω–∏—Ç–µ–ª–µ',
          '–ü—É—Å—Ç—å –º–∞–ª—ã—à –∏—Å—Å–ª–µ–¥—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä—É–∫–∞–º–∏',
          '–ü–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –∏ –Ω–∞–∑—ã–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –≤–Ω–∏–º–∞–Ω–∏—è',
        ageRange: '12-18 –º–µ—Å—è—Ü–µ–≤'
      },
      {
        id: 2,
        title: '–ò–≥—Ä–∞ —Å –≤–æ–¥–æ–π',
        description: '–ü–µ—Ä–µ–ª–∏–≤–∞–µ–º –≤–æ–¥—É –º–µ–∂–¥—É –µ–º–∫–æ—Å—Ç—è–º–∏, —Ä–∞–∑–≤–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é',
        duration: '20 –º–∏–Ω',
        category: '–ú–æ—Ç–æ—Ä–∏–∫–∞',
        premium: false,
        icon: 'üíß',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['2-3 –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞', '–í–æ–¥–∞', '–ì—É–±–∫–∞', '–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ'],
        instructions: [
          '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –µ–º–∫–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞',
          '–ù–∞–ª–µ–π—Ç–µ –≤–æ–¥—É –≤ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö',
          '–ü–æ–∫–∞–∂–∏—Ç–µ –º–∞–ª—ã—à—É, –∫–∞–∫ –ø–µ—Ä–µ–ª–∏–≤–∞—Ç—å –≤–æ–¥—É',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ',
          '–î–∞–π—Ç–µ –≥—É–±–∫—É - –ø—É—Å—Ç—å –≤—ã–∂–∏–º–∞–µ—Ç –≤–æ–¥—É',
          '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ –¥–ª—è —É–±–æ—Ä–∫–∏!'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—è, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è',
        ageRange: '10-24 –º–µ—Å—è—Ü–∞'
      },
      {
        id: 3,
        title: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
        description: '–ò–∑—É—á–∞–µ–º –∑–≤—É–∫–∏: –ø–æ–≥—Ä–µ–º—É—à–∫–∏, –±–∞—Ä–∞–±–∞–Ω, –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏',
        duration: '10 –º–∏–Ω',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        premium: true,
        icon: 'üéµ',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–ü–æ–≥—Ä–µ–º—É—à–∫–∏', '–ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏', '–°–∞–º–æ–¥–µ–ª—å–Ω—ã–π –±–∞—Ä–∞–±–∞–Ω', '–õ–æ–∂–∫–∏'],
        instructions: [
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–∑–Ω—ã–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
          '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∏–∑–≤–ª–µ–∫–∞—Ç—å –∑–≤—É–∫–∏ –∏–∑ –∫–∞–∂–¥–æ–≥–æ',
          '–ü—É—Å—Ç—å –º–∞–ª—ã—à –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∞–º',
          '–ò–≥—Ä–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ä–∏—Ç–º—ã',
          '–ü–æ–π—Ç–µ –ø–µ—Å–µ–Ω–∫–∏ –ø–æ–¥ –∞–∫–∫–æ–º–ø–∞–Ω–µ–º–µ–Ω—Ç',
          '–¢–∞–Ω—Ü—É–π—Ç–µ –ø–æ–¥ –º—É–∑—ã–∫—É'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Å–ª—É—Ö, —á—É–≤—Å—Ç–≤–æ —Ä–∏—Ç–º–∞, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏–π, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏',
        ageRange: '8-18 –º–µ—Å—è—Ü–µ–≤'
      }
    ],
    2: [
      {
        id: 4,
        title: '–°–æ–±–∏—Ä–∞–µ–º –ø–∏—Ä–∞–º–∏–¥–∫—É',
        description: '–†–∞–∑–≤–∏–≤–∞–µ–º –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤',
        duration: '15 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üìê',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–ü–∏—Ä–∞–º–∏–¥–∫–∞ —Å –∫–æ–ª—å—Ü–∞–º–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞'],
        instructions: [
          '–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É –ø–∏—Ä–∞–º–∏–¥–∫—É',
          '–†–∞–∑–±–µ—Ä–∏—Ç–µ –µ—ë –Ω–∞ —á–∞—Å—Ç–∏',
          '–û–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–Ω—è—Ç–∏—è "–±–æ–ª—å—à–æ–π" –∏ "–º–∞–ª–µ–Ω—å–∫–∏–π"',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–æ–±—Ä–∞—Ç—å —Å–∞–º',
          '–ü–æ–º–æ–≥–∞–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏',
          '–•–≤–∞–ª–∏—Ç–µ –∑–∞ –∫–∞–∂–¥–æ–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —Ç–µ—Ä–ø–µ–Ω–∏–µ',
        ageRange: '18-30 –º–µ—Å—è—Ü–µ–≤'
      },
      {
        id: 5,
        title: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏',
        description: '–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –∫—Ä–∞—Å–∫–∞–º–∏',
        duration: '25 –º–∏–Ω',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        premium: false,
        icon: 'üé®',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ü–∞–ª—å—á–∏–∫–æ–≤—ã–µ –∫—Ä–∞—Å–∫–∏', '–ë–æ–ª—å—à–æ–π –ª–∏—Å—Ç –±—É–º–∞–≥–∏', '–í–ª–∞–∂–Ω—ã–µ —Å–∞–ª—Ñ–µ—Ç–∫–∏'],
        instructions: [
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ',
          '–ù–∞–¥–µ–Ω—å—Ç–µ –Ω–∞ —Ä–µ–±–µ–Ω–∫–∞ —Å—Ç–∞—Ä—É—é –æ–¥–µ–∂–¥—É',
          '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –º–∞–∫–∞—Ç—å –ø–∞–ª–µ—Ü –≤ –∫—Ä–∞—Å–∫—É',
          '–ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤',
          '–†–∏—Å—É–π—Ç–µ –≤–º–µ—Å—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–≥—É—Ä—ã',
          '–ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Ç–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ —Ä–µ–±–µ–Ω–∫–∞'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, —Ü–≤–µ—Ç–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è',
        ageRange: '18-36 –º–µ—Å—è—Ü–µ–≤'
      },
      {
        id: 6,
        title: '–õ–µ–ø–∫–∞ –∏–∑ –ø–ª–∞—Å—Ç–∏–ª–∏–Ω–∞',
        description: '–†–∞–∑–≤–∏–≤–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É',
        duration: '30 –º–∏–Ω',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        premium: true,
        icon: 'üé≠',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ú—è–≥–∫–∏–π –ø–ª–∞—Å—Ç–∏–ª–∏–Ω', '–î–æ—Å–∫–∞ –¥–ª—è –ª–µ–ø–∫–∏', '–ü—Ä–æ—Å—Ç—ã–µ —Ñ–æ—Ä–º–æ—á–∫–∏'],
        instructions: [
          '–†–∞–∑–æ–≥—Ä–µ–π—Ç–µ –ø–ª–∞—Å—Ç–∏–ª–∏–Ω –≤ —Ä—É–∫–∞—Ö',
          '–ü–æ–∫–∞–∂–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–µ–º—ã: –∫–∞—Ç–∞–Ω–∏–µ, —Å–ø–ª—é—â–∏–≤–∞–Ω–∏–µ',
          '–õ–µ–ø–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–≥—É—Ä—ã: —à–∞—Ä–∏–∫–∏, –∫–æ–ª–±–∞—Å–∫–∏',
          '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–æ—á–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–≥—É—Ä',
          '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö',
          '–ù–µ —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ –∏–¥–µ–∞–ª—å–Ω–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —É—Å–∏–¥—á–∏–≤–æ—Å—Ç—å',
        ageRange: '24-36 –º–µ—Å—è—Ü–µ–≤'
      }
    ],
    3: [
      {
        id: 7,
        title: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º',
        description: '–ò–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è',
        duration: '20 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üåà',
        difficulty: '–õ–µ–≥–∫–æ',
        materials: ['–¶–≤–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã', '4-5 –∫–æ—Ä–æ–±–æ—á–µ–∫ –∏–ª–∏ –µ–º–∫–æ—Å—Ç–µ–π'],
        instructions: [
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã 4-5 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤',
          '–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–±–µ–Ω–∫—É, –∫–∞–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ü–≤–µ—Ç–∞–º',
          '–ù–∞–∑—ã–≤–∞–π—Ç–µ –∫–∞–∂–¥—ã–π —Ü–≤–µ—Ç –ø—Ä–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤',
          '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–º–µ—Å—Ç–µ',
          '–£—Å–ª–æ–∂–Ω–∏—Ç–µ –∑–∞–¥–∞—á—É, –¥–æ–±–∞–≤–∏–≤ –±–æ–ª—å—à–µ —Ü–≤–µ—Ç–æ–≤'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –≤–Ω–∏–º–∞–Ω–∏–µ, —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å',
        ageRange: '2-4 –≥–æ–¥–∞'
      },
      {
        id: 8,
        title: '–ü—Ä–æ—Å—Ç—ã–µ –ø–∞–∑–ª—ã',
        description: '–ü–∞–∑–ª—ã –∏–∑ 4-6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ä–∞–∑–≤–∏–≤–∞–µ–º –ª–æ–≥–∏–∫—É',
        duration: '25 –º–∏–Ω',
        category: '–õ–æ–≥–∏–∫–∞',
        premium: false,
        icon: 'üß©',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ü–∞–∑–ª—ã –∏–∑ 4-6 –∫—Ä—É–ø–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤', '–ö–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞'],
        instructions: [
          '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∑–ª —Å –∫—Ä—É–ø–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏',
          '–ü–æ–∫–∞–∂–∏—Ç–µ –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É',
          '–†–∞–∑–±–µ—Ä–∏—Ç–µ –ø–∞–∑–ª –Ω–∞ —á–∞—Å—Ç–∏',
          '–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–π—Ç–∏ —É–≥–ª–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏',
          '–°–æ–±–∏—Ä–∞–π—Ç–µ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, —Ö–≤–∞–ª—è –∑–∞ —É—Å–ø–µ—Ö–∏',
          '–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–∞–ª–µ–π'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —Ç–µ—Ä–ø–µ–Ω–∏–µ, –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É',
        ageRange: '2,5-4 –≥–æ–¥–∞'
      },
      {
        id: 9,
        title: '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã',
        description: '–ò–≥—Ä–∞–µ–º –≤ –¥–æ–∫—Ç–æ—Ä–∞, –ø–æ–≤–∞—Ä–∞, –≤–æ–¥–∏—Ç–µ–ª—è',
        duration: '30 –º–∏–Ω',
        category: '–†–∞–∑–≤–∏—Ç–∏–µ',
        premium: true,
        icon: 'üë®‚Äç‚öïÔ∏è',
        difficulty: '–°—Ä–µ–¥–Ω–µ',
        materials: ['–ò–≥—Ä—É—à–µ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', '–ö–æ—Å—Ç—é–º—ã –∏–ª–∏ –∞—Ç—Ä–∏–±—É—Ç—ã', '–ö—É–∫–ª—ã/–∏–≥—Ä—É—à–∫–∏'],
        instructions: [
          '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –∏–≥—Ä—ã (–¥–æ–∫—Ç–æ—Ä, –ø–æ–≤–∞—Ä, –∏ —Ç.–¥.)',
          '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã',
          '–ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å',
          '–ü—É—Å—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∞–º',
          '–ú–µ–Ω—è–π—Ç–µ—Å—å —Ä–æ–ª—è–º–∏',
          '–ü—Ä–∏–¥—É–º—ã–≤–∞–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏'
        ],
        benefits: '–†–∞–∑–≤–∏–≤–∞–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏, –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Ä–µ—á—å, —ç–º–ø–∞—Ç–∏—é, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π',
        ageRange: '2,5-5 –ª–µ—Ç'
      }
    ]
  });

  // –£—Ç–∏–ª–∏—Ç—ã
  const getAgeText = (age) => {
    if (age === 1) return '–≥–æ–¥';
    if (age < 5) return '–≥–æ–¥–∞';
    return '–ª–µ—Ç';
  };

  const getCategoryColor = (category) => {
    const colors = {
      '–ú–æ—Ç–æ—Ä–∏–∫–∞': 'bg-blue-100 text-blue-800',
      '–†–µ—á—å': 'bg-green-100 text-green-800',
      '–õ–æ–≥–∏–∫–∞': 'bg-purple-100 text-purple-800',
      '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ': 'bg-pink-100 text-pink-800',
      '–†–∞–∑–≤–∏—Ç–∏–µ': 'bg-orange-100 text-orange-800'
    };
    return colors[category] || 'bg-gray-100 text-gray-800';
  };

  const getDifficultyColor = (difficulty) => {
    const colors = {
      '–õ–µ–≥–∫–æ': 'bg-green-100 text-green-800',
      '–°—Ä–µ–¥–Ω–µ': 'bg-yellow-100 text-yellow-800',
      '–°–ª–æ–∂–Ω–æ': 'bg-red-100 text-red-800'
    };
    return colors[difficulty] || 'bg-gray-100 text-gray-800';
  };

  const getFilteredActivities = () => {
    const activities = activitiesDatabase[child.age] || [];
    if (selectedCategory === 'all') {
      return activities;
    }
    return activities.filter(activity => activity.category === selectedCategory);
  };

  const getActivityCategories = () => {
    const activities = activitiesDatabase[child.age] || [];
    const categories = [...new Set(activities.map(activity => activity.category))];
    return categories.map(cat => ({
      id: cat,
      name: cat,
      count: activities.filter(a => a.category === cat).length
    }));
  };

  // –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (currentScreen === 'main') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
        <div className="bg-white shadow-sm px-4 py-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-gray-800">–ü—Ä–∏–≤–µ—Ç, {child.name}! üëã</h1>
              <p className="text-gray-600">–í–æ–∑—Ä–∞—Å—Ç: {child.age} {getAgeText(child.age)}</p>
            </div>
            <div className="flex items-center space-x-3">
              <div className="flex items-center bg-orange-100 px-3 py-1 rounded-full">
                <span className="text-sm font-medium text-orange-800">üèÜ {child.streak} –¥–Ω–µ–π</span>
              </div>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
            <div className="text-center mb-6">
              <div className="bg-gradient-to-r from-green-400 to-blue-500 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-3xl">‚ñ∂Ô∏è</span>
              </div>
              <h2 className="text-xl font-bold text-gray-800 mb-2">–í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è!</h2>
              <p className="text-gray-600">–í—ã–±–µ—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è {child.name}</p>
            </div>
            
            <button 
              onClick={() => setCurrentScreen('activities')}
              className="w-full bg-gradient-to-r from-green-500 to-blue-500 text-white py-4 rounded-xl font-medium text-lg hover:from-green-600 hover:to-blue-600 transition-all transform hover:scale-105"
            >
              –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </button>
          </div>

          <div className="grid grid-cols-2 gap-4 mb-6">
            <div className="bg-white rounded-xl p-4 shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-2xl font-bold text-blue-600">{(activitiesDatabase[child.age] || []).length}</p>
                  <p className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
                </div>
                <span className="text-2xl">üéØ</span>
              </div>
            </div>
            <div className="bg-white rounded-xl p-4 shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-2xl font-bold text-purple-600">{progressData.totalTime}—á</p>
                  <p className="text-sm text-gray-600">–í—Ä–µ–º—è —Ä–∞–∑–≤–∏—Ç–∏—è</p>
                </div>
                <span className="text-2xl">‚è∞</span>
              </div>
            </div>
          </div>

          {/* Age Selector for testing */}
          <div className="bg-gray-100 rounded-lg p-4">
            <p className="text-sm text-gray-600 mb-2">–¢–µ—Å—Ç –≤–æ–∑—Ä–∞—Å—Ç–æ–≤:</p>
            <div className="flex gap-2 flex-wrap">
              {[1,2,3,4,5,6,7].map(age => (
                <button 
                  key={age}
                  onClick={() => setChild({...child, age})}
                  className={`px-3 py-1 rounded text-sm ${
                    child.age === age ? 'bg-blue-500 text-white' : 'bg-white text-gray-600'
                  }`}
                >
                  {age} {getAgeText(age)}
                </button>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –≠–∫—Ä–∞–Ω –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
  if (currentScreen === 'activities') {
    const categories = getActivityCategories();
    const filteredActivities = getFilteredActivities();
    const freeActivities = filteredActivities.filter(a => !a.premium);
    const premiumActivities = filteredActivities.filter(a => a.premium);

    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => setCurrentScreen('main')}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div>
              <h1 className="text-xl font-bold text-gray-800">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h1>
              <p className="text-sm text-gray-600">{child.age} {getAgeText(child.age)} ‚Ä¢ {filteredActivities.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</p>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Categories Filter */}
          <div className="mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
            <div className="flex gap-2 overflow-x-auto pb-2">
              <button
                onClick={() => setSelectedCategory('all')}
                className={`px-4 py-2 rounded-full whitespace-nowrap transition-all ${
                  selectedCategory === 'all'
                    ? 'bg-blue-500 text-white'
                    : 'bg-white text-gray-600 hover:bg-gray-100'
                }`}
              >
                –í—Å–µ ({(activitiesDatabase[child.age] || []).length})
              </button>
              {categories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => setSelectedCategory(category.id)}
                  className={`px-4 py-2 rounded-full whitespace-nowrap transition-all ${
                    selectedCategory === category.id
                      ? 'bg-blue-500 text-white'
                      : 'bg-white text-gray-600 hover:bg-gray-100'
                  }`}
                >
                  {category.name} ({category.count})
                </button>
              ))}
            </div>
          </div>

          {/* Free Activities */}
          {freeActivities.length > 0 && (
            <div className="mb-8">
              <h2 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
                <span className="text-green-500 mr-2">üÜì</span>
                –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ({freeActivities.length})
              </h2>
              <div className="space-y-3">
                {freeActivities.map((activity) => (
                  <div key={activity.id} className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow">
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center mb-2">
                          <span className="text-2xl mr-3">{activity.icon}</span>
                          <div className="flex-1">
                            <h3 className="font-semibold text-gray-800">{activity.title}</h3>
                            <div className="flex items-center gap-2 mt-1">
                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getCategoryColor(activity.category)}`}>
                                {activity.category}
                              </span>
                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getDifficultyColor(activity.difficulty)}`}>
                                {activity.difficulty}
                              </span>
                              <span className="text-xs text-gray-500 flex items-center">
                                ‚è±Ô∏è {activity.duration}
                              </span>
                            </div>
                          </div>
                        </div>
                        <p className="text-sm text-gray-600 ml-11 mb-2">{activity.description}</p>
                        <p className="text-xs text-gray-500 ml-11">–í–æ–∑—Ä–∞—Å—Ç: {activity.ageRange}</p>
                      </div>
                      <div className="ml-4 flex flex-col gap-2">
                        <button 
                          onClick={() => {
                            console.log('üîç –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" –¥–ª—è:', activity.title);
                            setSelectedActivity(activity);
                            setCurrentScreen('activity-details');
                          }}
                          className="bg-blue-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-600 transition-colors text-sm"
                        >
                          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                        </button>
                        
                        <button 
                          onClick={() => {
                            alert(`üöÄ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${activity.title}" –Ω–∞—á–∞—Ç–∞!`);
                          }}
                          className="bg-green-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-600 transition-colors text-sm"
                        >
                          –ù–∞—á–∞—Ç—å
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Premium Activities */}
          {premiumActivities.length > 0 && (
            <div className="mb-6">
              <h2 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
                <span className="text-yellow-500 mr-2">üëë</span>
                –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ({premiumActivities.length})
              </h2>
              <div className="space-y-3">
                {premiumActivities.map((activity) => (
                  <div key={activity.id} className={`bg-white rounded-xl p-4 shadow-sm ${!isPremium ? 'opacity-75' : 'hover:shadow-md transition-shadow'}`}>
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center mb-2">
                          <span className="text-2xl mr-3">{activity.icon}</span>
                          <div className="flex-1">
                            <h3 className="font-semibold text-gray-800 flex items-center">
                              {activity.title}
                              {!isPremium && <span className="ml-2 text-gray-400">üîí</span>}
                            </h3>
                            <div className="flex items-center gap-2 mt-1">
                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getCategoryColor(activity.category)}`}>
                                {activity.category}
                              </span>
                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getDifficultyColor(activity.difficulty)}`}>
                                {activity.difficulty}
                              </span>
                              <span className="text-xs text-gray-500 flex items-center">
                                ‚è±Ô∏è {activity.duration}
                              </span>
                            </div>
                          </div>
                        </div>
                        <p className="text-sm text-gray-600 ml-11 mb-2">{activity.description}</p>
                        <p className="text-xs text-gray-500 ml-11">–í–æ–∑—Ä–∞—Å—Ç: {activity.ageRange}</p>
                      </div>
                      <div className="ml-4 flex flex-col gap-2">
                        <button 
                          onClick={() => {
                            if (isPremium) {
                              setSelectedActivity(activity);
                              setCurrentScreen('activity-details');
                            } else {
                              alert('–ù—É–∂–µ–Ω –ø—Ä–µ–º–∏—É–º –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!');
                            }
                          }}
                          className={`px-4 py-2 rounded-lg font-medium transition-colors text-sm ${
                            isPremium 
                              ? 'bg-blue-500 text-white hover:bg-blue-600' 
                              : 'bg-gray-300 text-gray-500'
                          }`}
                        >
                          {isPremium ? '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' : '–ü—Ä–µ–º–∏—É–º'}
                        </button>
                        <button 
                          onClick={() => {
                            if (isPremium) {
                              alert(`‚ú® –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${activity.title}" –Ω–∞—á–∞—Ç–∞!`);
                            } else {
                              alert('–ù—É–∂–µ–Ω –ø—Ä–µ–º–∏—É–º –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!');
                            }
                          }}
                          className={`px-4 py-2 rounded-lg font-medium transition-colors text-sm ${
                            isPremium 
                              ? 'bg-purple-500 text-white hover:bg-purple-600' 
                              : 'bg-gray-300 text-gray-500'
                          }`}
                        >
                          {isPremium ? '–ù–∞—á–∞—Ç—å' : '–ü—Ä–µ–º–∏—É–º'}
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Upgrade prompt for non-premium users */}
          {!isPremium && premiumActivities.length > 0 && (
            <div className="bg-gradient-to-r from-purple-600 to-pink-600 rounded-xl p-6 text-white text-center">
              <h3 className="text-lg font-bold mb-2">üöÄ –†–∞–∑–±–ª–æ–∫–∏—Ä—É–π –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!</h3>
              <p className="text-sm opacity-90 mb-4">
                –ü–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ {premiumActivities.length} –ø—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
              </p>
              <button 
                onClick={() => setIsPremium(true)}
                className="bg-white text-purple-600 px-6 py-3 rounded-lg font-medium hover:bg-gray-100 transition-colors"
              >
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º - 299‚ÇΩ/–º–µ—Å
              </button>
            </div>
          )}
        </div>
      </div>
    );
  }

  // –ù–û–í–´–ô –≠–ö–†–ê–ù! –î–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  if (currentScreen === 'activity-details' && selectedActivity) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => {
                setSelectedActivity(null);
                setCurrentScreen('activities');
              }}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div className="flex items-center">
              <span className="text-2xl mr-3">{selectedActivity.icon}</span>
              <div>
                <h1 className="text-xl font-bold text-gray-800">{selectedActivity.title}</h1>
                <p className="text-sm text-gray-600">{selectedActivity.ageRange} ‚Ä¢ {selectedActivity.duration}</p>
              </div>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Activity Info */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <div className="flex items-center gap-2 mb-4">
              <span className={`px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(selectedActivity.category)}`}>
                {selectedActivity.category}
              </span>
              <span className={`px-3 py-1 rounded-full text-sm font-medium ${getDifficultyColor(selectedActivity.difficulty)}`}>
                {selectedActivity.difficulty}
              </span>
              {selectedActivity.premium && (
                <span className="px-3 py-1 bg-yellow-100 text-yellow-800 text-sm rounded-full font-medium">
                  üëë –ü—Ä–µ–º–∏—É–º
                </span>
              )}
            </div>
            
            <p className="text-gray-700 mb-4">{selectedActivity.description}</p>
            
            <div className="bg-blue-50 rounded-lg p-4">
              <h3 className="font-semibold text-blue-900 mb-2">üéØ –ü–æ–ª—å–∑–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è:</h3>
              <p className="text-blue-800 text-sm">{selectedActivity.benefits}</p>
            </div>
          </div>

          {/* Materials */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h3 className="text-lg font-bold text-gray-800 mb-4">üì¶ –ß—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:</h3>
            <div className="grid grid-cols-1 gap-2">
              {selectedActivity.materials.map((material, index) => (
                <div key={index} className="flex items-center p-3 bg-gray-50 rounded-lg">
                  <span className="text-green-500 mr-3">‚úì</span>
                  <span className="text-gray-700">{material}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Instructions */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h3 className="text-lg font-bold text-gray-800 mb-4">üìã –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
            <div className="space-y-3">
              {selectedActivity.instructions.map((instruction, index) => (
                <div key={index} className="flex items-start p-3 bg-gray-50 rounded-lg">
                  <span className="bg-blue-500 text-white w-6 h-6 rounded-full flex items-center justify-center text-sm font-bold mr-3 mt-0.5 flex-shrink-0">
                    {index + 1}
                  </span>
                  <span className="text-gray-700">{instruction}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Action Buttons */}
          <div className="space-y-3">
            <button 
              onClick={() => {
                alert(`üöÄ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${selectedActivity.title}" –Ω–∞—á–∞—Ç–∞!\n\n‚è±Ô∏è –í—Ä–µ–º—è: ${selectedActivity.duration}\nüéØ –¶–µ–ª—å: ${selectedActivity.benefits}\n\n–£–¥–∞—á–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π —Å ${child.name}! üí™`);
              }}
              className="w-full bg-gradient-to-r from-green-500 to-blue-500 text-white py-4 rounded-xl font-medium text-lg hover:from-green-600 hover:to-blue-600 transition-all"
            >
              üöÄ –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </button>
            
            <div className="grid grid-cols-2 gap-3">
              <button 
                onClick={() => {
                  alert(`‚è∞ –¢–∞–π–º–µ—Ä –Ω–∞ ${selectedActivity.duration} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`);
                }}
                className="bg-white text-gray-700 py-3 rounded-lg font-medium border-2 border-gray-200 hover:border-gray-300 transition-colors"
              >
                ‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä
              </button>
              <button 
                onClick={() => {
                  alert('üì∏ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –≥–∞–ª–µ—Ä–µ—é!');
                }}
                className="bg-white text-gray-700 py-3 rounded-lg font-medium border-2 border-gray-200 hover:border-gray-300 transition-colors"
              >
                üì∏ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤
  return (
    <div className="min-h-screen bg-gray-50">
      <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
        <div className="flex items-center">
          <button 
            onClick={() => setCurrentScreen('main')}
            className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
          >
            <span className="text-2xl">‚Üê</span>
          </button>
          <h1 className="text-xl font-bold text-gray-800">–≠–∫—Ä–∞–Ω: {currentScreen}</h1>
        </div>
      </div>
      
      <div className="px-4 py-20 text-center">
        <h2 className="text-xl font-bold mb-4">–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h2>
        <p className="text-gray-600 mb-6">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö</p>
        <button 
          onClick={() => setCurrentScreen('main')}
          className="bg-blue-500 text-white px-6 py-2 rounded-lg"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        </button>
      </div>
    </div>
  );

};

export default ChildDevelopmentApp;
  );
}
  
  // –î–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  if (selectedActivity) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => setSelectedActivity(null)}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div className="flex items-center">
              <span className="text-2xl mr-3">{selectedActivity.icon}</span>
              <div>
                <h1 className="text-xl font-bold text-gray-800">{selectedActivity.title}</h1>
                <p className="text-sm text-gray-600">{selectedActivity.ageRange} ‚Ä¢ {selectedActivity.duration}</p>
              </div>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Activity Info */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <div className="flex items-center gap-2 mb-4">
              <span className={`px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(selectedActivity.category)}`}>
                {selectedActivity.category}
              </span>
              <span className={`px-3 py-1 rounded-full text-sm font-medium ${getDifficultyColor(selectedActivity.difficulty)}`}>
                {selectedActivity.difficulty}
              </span>
              {selectedActivity.premium && (
                <span className="px-3 py-1 bg-yellow-100 text-yellow-800 text-sm rounded-full font-medium">
                  üëë –ü—Ä–µ–º–∏—É–º
                </span>
              )}
            </div>
            
            <p className="text-gray-700 mb-4">{selectedActivity.description}</p>
            
            <div className="bg-blue-50 rounded-lg p-4">
              <h3 className="font-semibold text-blue-900 mb-2">üéØ –ü–æ–ª—å–∑–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è:</h3>
              <p className="text-blue-800 text-sm">{selectedActivity.benefits}</p>
            </div>
          </div>

          {/* Materials */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h3 className="text-lg font-bold text-gray-800 mb-4">üì¶ –ß—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:</h3>
            <div className="grid grid-cols-1 gap-2">
              {selectedActivity.materials.map((material, index) => (
                <div key={index} className="flex items-center p-3 bg-gray-50 rounded-lg">
                  <span className="text-green-500 mr-3">‚úì</span>
                  <span className="text-gray-700">{material}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Instructions */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h3 className="text-lg font-bold text-gray-800 mb-4">üìã –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
            <div className="space-y-3">
              {selectedActivity.instructions.map((instruction, index) => (
                <div key={index} className="flex items-start p-3 bg-gray-50 rounded-lg">
                  <span className="bg-blue-500 text-white w-6 h-6 rounded-full flex items-center justify-center text-sm font-bold mr-3 mt-0.5 flex-shrink-0">
                    {index + 1}
                  </span>
                  <span className="text-gray-700">{instruction}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Action Buttons */}
          <div className="space-y-3">
<button 
  onClick={() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    const today = new Date().toISOString().split('T')[0];
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.showAlert(
        `üöÄ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${selectedActivity.title}" –Ω–∞—á–∞—Ç–∞!\n\n` +
        `‚è±Ô∏è –í—Ä–µ–º—è: ${selectedActivity.duration}\n` +
        `üéØ –¶–µ–ª—å: ${selectedActivity.benefits}\n\n` +
        `–£–¥–∞—á–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π —Å ${child.name}! üí™`
      );
    } else {
      alert(`üöÄ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å "${selectedActivity.title}" –Ω–∞—á–∞—Ç–∞!`);
    }
    
// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–∞–π–º–µ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
const minutes = parseInt(selectedActivity.duration);
if (minutes && window.Telegram?.WebApp) {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω
  setTimeout(() => {
    window.Telegram.WebApp.showAlert(`‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!\n\n–ü—Ä–æ—à–ª–æ ${minutes} –º–∏–Ω—É—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ "${selectedActivity.title}"\n\n–ö–∞–∫ –¥–µ–ª–∞? –ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è? üòä`);
  }, minutes * 60 * 1000);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á—Ç–æ —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω
  setTimeout(() => {
    window.Telegram.WebApp.showAlert(`‚è∞ –¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${minutes} –º–∏–Ω—É—Ç!\n\n–ú—ã –Ω–∞–ø–æ–º–Ω–∏–º –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –≤—ã–π–¥–µ—Ç! ‚è±Ô∏è`);
  }, 2000); // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
}
  }}
  className="w-full bg-gradient-to-r from-green-500 to-blue-500 text-white py-4 rounded-xl font-medium text-lg hover:from-green-600 hover:to-blue-600 transition-all"
>
  üöÄ –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
</button>
            
            <div className="grid grid-cols-2 gap-3">
              <button 
                onClick={() => {
                  if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.showAlert(`‚è∞ –¢–∞–π–º–µ—Ä –Ω–∞ ${selectedActivity.duration} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`);
                  } else {
                    alert(`‚è∞ –¢–∞–π–º–µ—Ä –Ω–∞ ${selectedActivity.duration} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`);
                  }
                }}
                className="bg-white text-gray-700 py-3 rounded-lg font-medium border-2 border-gray-200 hover:border-gray-300 transition-colors"
              >
                ‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä
              </button>
              <button 
                onClick={() => {
                  if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.showAlert('üì∏ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –≥–∞–ª–µ—Ä–µ—é!');
                  } else {
                    alert('üì∏ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –≥–∞–ª–µ—Ä–µ—é!');
                  }
                }}
                className="bg-white text-gray-700 py-3 rounded-lg font-medium border-2 border-gray-200 hover:border-gray-300 transition-colors"
              >
                üì∏ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              </button>
            </div>
            
            <button 
              onClick={() => {
                if (botConnected) {
                  sendTestNotification();
                } else {
                  if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.showAlert('–ü–æ–¥–∫–ª—é—á–∏—Ç–µ Telegram –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π!');
                  } else {
                    alert('–ü–æ–¥–∫–ª—é—á–∏—Ç–µ Telegram –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π!');
                  }
                }
              }}
              className="w-full bg-purple-500 text-white py-3 rounded-lg font-medium hover:bg-purple-600 transition-colors"
            >
              üîî –ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞–≤—Ç—Ä–∞
            </button>
          </div>
        </div>
      </div>
    );
  }

// –≠–∫—Ä–∞–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  if (currentScreen === 'progress') {
    const completedThisWeek = progressData.weeklyActivities.filter(Boolean).length;
    const totalDaysThisWeek = 7;
    const weeklyProgress = (completedThisWeek / totalDaysThisWeek) * 100;

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤
    const getSkillName = (key) => {
      const names = {
        motor: '–ú–µ–ª–∫–∞—è –º–æ—Ç–æ—Ä–∏–∫–∞',
        speech: '–†–µ—á—å –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è', 
        logic: '–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ',
        creativity: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏',
        development: '–û–±—â–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ'
      };
      return names[key];
    };

    const getSkillColor = (key) => {
      const colors = {
        motor: 'bg-blue-500',
        speech: 'bg-green-500',
        logic: 'bg-purple-500', 
        creativity: 'bg-pink-500',
        development: 'bg-orange-500'
      };
      return colors[key];
    };

    const getSkillIcon = (key) => {
      const icons = {
        motor: 'ü§≤',
        speech: 'üí¨',
        logic: 'üß†',
        creativity: 'üé®',
        development: 'üå±'
      };
      return icons[key];
    };

    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => setCurrentScreen('main')}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div>
              <h1 className="text-xl font-bold text-gray-800">–ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑–≤–∏—Ç–∏—è</h1>
              <p className="text-sm text-gray-600">{child.name} ‚Ä¢ {child.age} {getAgeText(child.age)}</p>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Current Streak */}
          <div className="bg-gradient-to-r from-orange-400 to-red-500 rounded-xl p-6 text-white mb-6 relative overflow-hidden">
            <div className="absolute top-0 right-0 opacity-20 text-6xl">üî•</div>
            <div className="relative z-10">
              <h2 className="text-2xl font-bold mb-2">üî• {child.streak} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥!</h2>
              <p className="opacity-90">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!</p>
              <div className="mt-4 flex items-center">
                <div className="bg-white bg-opacity-20 rounded-full px-4 py-2">
                  <span className="text-sm font-medium">–°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å: {child.streak + 3} –¥–Ω–µ–π</span>
                </div>
              </div>
            </div>
          </div>

          {/* Weekly Progress */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-lg font-bold text-gray-800">–≠—Ç–∞ –Ω–µ–¥–µ–ª—è</h2>
              <div className="flex items-center bg-blue-100 px-3 py-1 rounded-full">
                <span className="text-sm font-medium text-blue-800">{completedThisWeek}/{totalDaysThisWeek} –¥–Ω–µ–π</span>
              </div>
            </div>
            
            {/* Weekly Calendar */}
            <div className="grid grid-cols-7 gap-2 mb-4">
              {['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'].map((day, index) => (
                <div key={day} className="text-center">
                  <div className="text-xs text-gray-600 mb-2">{day}</div>
                  <div className={`w-10 h-10 rounded-full flex items-center justify-center transition-all ${
                    progressData.weeklyActivities[index] 
                      ? 'bg-green-500 text-white shadow-lg transform scale-110' 
                      : 'bg-gray-200 text-gray-400'
                  }`}>
                    {progressData.weeklyActivities[index] ? '‚úì' : index + 1}
                  </div>
                </div>
              ))}
            </div>
            
            {/* Progress Bar */}
            <div className="bg-gray-100 rounded-full h-3 mb-4">
              <div 
                className="h-3 rounded-full bg-gradient-to-r from-green-400 to-blue-500 transition-all duration-500"
                style={{ width: `${weeklyProgress}%` }}
              ></div>
            </div>
            
            <div className="flex items-center justify-between text-sm">
              <span className="text-gray-600">–ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ–¥–µ–ª–∏</span>
              <span className="font-bold text-green-600">{Math.round(weeklyProgress)}%</span>
            </div>
          </div>

          {/* Skills Development */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-6">–†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤</h2>
            <div className="space-y-5">
              {Object.entries(progressData.skillsProgress).map(([key, progress]) => (
                <div key={key}>
                  <div className="flex items-center justify-between mb-3">
                    <div className="flex items-center">
                      <span className="text-2xl mr-3">{getSkillIcon(key)}</span>
                      <div>
                        <span className="font-medium text-gray-800">{getSkillName(key)}</span>
                        <div className="text-xs text-gray-500">–£—Ä–æ–≤–µ–Ω—å: {progress >= 90 ? '–û—Ç–ª–∏—á–Ω–æ' : progress >= 70 ? '–•–æ—Ä–æ—à–æ' : progress >= 50 ? '–°—Ä–µ–¥–Ω–µ' : '–†–∞–∑–≤–∏–≤–∞–µ–º'}</div>
                      </div>
                    </div>
                    <div className="text-right">
                      <span className="text-lg font-bold text-gray-800">{progress}%</span>
                    </div>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className={`h-2 rounded-full transition-all duration-700 ${getSkillColor(key)}`}
                      style={{ width: `${progress}%` }}
                    ></div>
                  </div>
                </div>
              ))}
            </div>
            
            {/* Skills Summary */}
            <div className="mt-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg">
              <h3 className="font-semibold text-gray-800 mb-2">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h3>
              <div className="text-sm text-gray-600 space-y-1">
                {progressData.skillsProgress.logic < 70 && (
                  <p>‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–≥—Ä –∏ –ø–∞–∑–ª–æ–≤</p>
                )}
                {progressData.skillsProgress.speech < 70 && (
                  <p>‚Ä¢ –ë–æ–ª—å—à–µ —á–∏—Ç–∞–π—Ç–µ –∏ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–π—Ç–µ —Å —Ä–µ–±–µ–Ω–∫–æ–º</p>
                )}
                {progressData.skillsProgress.motor < 80 && (
                  <p>‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –º–µ–ª–∫–æ–π –º–æ—Ç–æ—Ä–∏–∫–∏</p>
                )}
                {Math.min(...Object.values(progressData.skillsProgress)) >= 70 && (
                  <p>‚Ä¢ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í—Å–µ –Ω–∞–≤—ã–∫–∏ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ! üåü</p>
                )}
              </div>
            </div>
          </div>

          {/* Achievements */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
            <div className="grid grid-cols-1 gap-4">
              {progressData.achievements.map((achievement) => (
                <div 
                  key={achievement.id} 
                  className={`p-4 rounded-lg border-2 transition-all ${
                    achievement.unlocked 
                      ? 'border-yellow-300 bg-gradient-to-r from-yellow-50 to-orange-50 shadow-md' 
                      : 'border-gray-200 bg-gray-50'
                  }`}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center">
                      <div className={`text-3xl mr-4 ${achievement.unlocked ? 'animate-bounce' : ''}`}>
                        {achievement.icon}
                      </div>
                      <div>
                        <h3 className={`font-semibold ${
                          achievement.unlocked ? 'text-yellow-800' : 'text-gray-500'
                        }`}>
                          {achievement.title}
                        </h3>
                        <p className="text-sm text-gray-600">{achievement.description}</p>
                        
                        {!achievement.unlocked && achievement.progress && (
                          <div className="mt-2">
                            <div className="flex justify-between text-xs text-gray-500 mb-1">
                              <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                              <span>{achievement.progress}/15</span>
                            </div>
                            <div className="w-32 bg-gray-200 rounded-full h-1.5">
                              <div 
                                className="h-1.5 rounded-full bg-yellow-400 transition-all duration-500"
                                style={{ width: `${(achievement.progress / 15) * 100}%` }}
                              ></div>
                            </div>
                          </div>
                        )}
                      </div>
                    </div>
                    
                    {achievement.unlocked && (
                      <div className="bg-yellow-500 text-white px-3 py-1 rounded-full text-xs font-medium">
                        –ü–æ–ª—É—á–µ–Ω–æ!
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Statistics */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
            <div className="grid grid-cols-2 gap-4">
              <div className="bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-blue-600">{progressData.totalActivities}</div>
                <div className="text-sm text-blue-800">–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</div>
              </div>
              <div className="bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-green-600">{progressData.totalTime}—á</div>
                <div className="text-sm text-green-800">–í—Ä–µ–º—è —Ä–∞–∑–≤–∏—Ç–∏—è</div>
              </div>
              <div className="bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-purple-600">{Math.round(Object.values(progressData.skillsProgress).reduce((a, b) => a + b, 0) / Object.keys(progressData.skillsProgress).length)}%</div>
                <div className="text-sm text-purple-800">–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</div>
              </div>
              <div className="bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-orange-600">{progressData.achievements.filter(a => a.unlocked).length}</div>
                <div className="text-sm text-orange-800">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π</div>
              </div>
            </div>
          </div>

          {/* Recent Activities */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h2>
            <div className="space-y-3">
              {progressData.recentActivities.map((activity, index) => (
                <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                  <div className="flex items-center flex-1">
                    <div className="w-10 h-10 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full flex items-center justify-center mr-3">
                      <span className="text-white text-sm font-bold">{index + 1}</span>
                    </div>
                    <div className="flex-1">
                      <h3 className="font-medium text-gray-800 text-sm">{activity.name}</h3>
                      <div className="flex items-center gap-2 mt-1">
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getCategoryColor(activity.category)}`}>
                          {activity.category}
                        </span>
                        <span className="text-xs text-gray-500">
                          {new Date(activity.date).toLocaleDateString('ru-RU')}
                        </span>
                      </div>
                    </div>
                  </div>
                  <div className="text-right">
                    <p className="text-sm font-medium text-gray-700">{activity.duration} –º–∏–Ω</p>
                    <p className="text-xs text-green-600">‚úì –ó–∞–≤–µ—Ä—à–µ–Ω–æ</p>
                  </div>
                </div>
              ))}
            </div>
            
            <button 
              onClick={() => setCurrentScreen('activities')}
              className="w-full mt-4 bg-blue-500 text-white py-3 rounded-lg font-medium hover:bg-blue-600 transition-colors"
            >
              –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </button>
          </div>

          {/* Motivation Card */}
          <div className="bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl p-6 text-white text-center">
            <div className="text-4xl mb-3">üåü</div>
            <h3 className="text-lg font-bold mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!</h3>
            <p className="text-sm opacity-90 mb-4">
              {child.name} –¥–µ–ª–∞–µ—Ç –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ —É—Å–ø–µ—Ö–∏! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –Ω–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –∏ –Ω–∞–≤—ã–∫–∏.
            </p>
            <div className="bg-white bg-opacity-20 rounded-lg p-3">
              <p className="text-sm font-medium">
                üí° –°–æ–≤–µ—Ç –¥–Ω—è: {weeklyProgress >= 70 ? '–û—Ç–ª–∏—á–Ω–æ! –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ç–∞–∫–æ–π —Ä–∏—Ç–º!' : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Ö–æ—Ç—è –±—ã 15 –º–∏–Ω—É—Ç'}
              </p>
            </div>
          </div>
        </div>
      </div>
    );
  }

// –≠–∫—Ä–∞–Ω –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
  if (currentScreen === 'library') {
    // –î–æ–±–∞–≤–ª—è–µ–º –±–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    const libraryContent = {
      categories: [
        { id: 'development', name: '–†–∞–∑–≤–∏—Ç–∏–µ', icon: 'üß†', count: 23 },
        { id: 'health', name: '–ó–¥–æ—Ä–æ–≤—å–µ', icon: 'üè•', count: 18 },
        { id: 'education', name: '–û–±—É—á–µ–Ω–∏–µ', icon: 'üìñ', count: 31 },
        { id: 'psychology', name: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', icon: 'üí≠', count: 15 },
        { id: 'nutrition', name: '–ü–∏—Ç–∞–Ω–∏–µ', icon: 'üçé', count: 12 },
        { id: 'safety', name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', icon: 'üõ°Ô∏è', count: 9 }
      ],
      articles: [
        {
          id: 1,
          title: '–ö–∞–∫ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Ä–µ—á—å —É —Ä–µ–±–µ–Ω–∫–∞ 2-3 –ª–µ—Ç',
          description: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–µ—á–µ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –≤ —Ä–∞–Ω–Ω–µ–º –≤–æ–∑—Ä–∞—Å—Ç–µ',
          readTime: '5 –º–∏–Ω',
          category: 'development',
          premium: false,
          author: '–õ–æ–≥–æ–ø–µ–¥ –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
          rating: 4.8,
          views: 1247
        },
        {
          id: 2,
          title: '–õ—É—á—à–∏–µ –∏–≥—Ä—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –º–µ–ª–∫–æ–π –º–æ—Ç–æ—Ä–∏–∫–∏',
          description: '–ü—Ä–æ—Å—Ç—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –∏–≥—Ä—ã –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º—ã—à—Ü —Ä—É–∫ –∏ –ø–∞–ª—å—Ü–µ–≤',
          readTime: '7 –º–∏–Ω',
          category: 'development',
          premium: false,
          author: '–ü–µ–¥–∏–∞—Ç—Ä –ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
          rating: 4.9,
          views: 987
        },
        {
          id: 3,
          title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ: —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π',
          description: '–ß—Ç–æ –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å —Ä–µ–±–µ–Ω–æ–∫ –ø–µ—Ä–µ–¥ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –≤ –ø–µ—Ä–≤—ã–π –∫–ª–∞—Å—Å',
          readTime: '10 –º–∏–Ω',
          category: 'education',
          premium: true,
          author: '–ü–µ–¥–∞–≥–æ–≥ –û–ª—å–≥–∞ –í–æ–ª–∫–æ–≤–∞',
          rating: 4.9,
          views: 1543
        },
        {
          id: 4,
          title: '–î–µ—Ç—Å–∫–∏–µ —Å—Ç—Ä–∞—Ö–∏: –∫–∞–∫ –ø–æ–º–æ—á—å —Ä–µ–±–µ–Ω–∫—É',
          description: '–†–∞–±–æ—Ç–∞–µ–º —Å —Ç–∏–ø–∏—á–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ö–∞–º–∏ –¥–µ—Ç–µ–π —Ä–∞–∑–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞',
          readTime: '6 –º–∏–Ω',
          category: 'psychology',
          premium: true,
          author: '–ü—Å–∏—Ö–æ–ª–æ–≥ –î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
          rating: 4.6,
          views: 445
        },
        {
          id: 5,
          title: '–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –¥–æ—à–∫–æ–ª—å–Ω–∏–∫–æ–≤',
          description: '–°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –¥–µ—Ç–µ–π 3-6 –ª–µ—Ç',
          readTime: '8 –º–∏–Ω',
          category: 'nutrition',
          premium: true,
          author: '–î–∏–µ—Ç–æ–ª–æ–≥ –ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
          rating: 4.7,
          views: 756
        },
        {
          id: 6,
          title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–æ–º–∞: –¥–µ—Ç—Å–∫–∏–µ –∑–∞–º–∫–∏ –∏ –∑–∞—â–∏—Ç–∞',
          description: '–ö–∞–∫ –æ–±–µ–∑–æ–ø–∞—Å–∏—Ç—å –¥–æ–º –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∞–ª—ã—à–∞',
          readTime: '4 –º–∏–Ω',
          category: 'safety',
          premium: false,
          author: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
          rating: 4.5,
          views: 523
        },
        {
          id: 7,
          title: '–ö—Ä–∏–∑–∏—Å 3 –ª–µ—Ç: –∫–∞–∫ –ø–µ—Ä–µ–∂–∏—Ç—å —Å–ª–æ–∂–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
          description: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π',
          readTime: '12 –º–∏–Ω',
          category: 'psychology',
          premium: true,
          author: '–ü—Å–∏—Ö–æ–ª–æ–≥ –ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞',
          rating: 4.8,
          views: 892
        },
        {
          id: 8,
          title: '–§–∏–∑–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ä–µ–±–µ–Ω–∫–∞: –Ω–æ—Ä–º—ã –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è',
          description: '–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—Å—Ç–æ—Ä–æ–∂–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª–µ–π –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –º–∞–ª—ã—à–∞',
          readTime: '9 –º–∏–Ω',
          category: 'health',
          premium: false,
          author: '–ü–µ–¥–∏–∞—Ç—Ä –ò–≤–∞–Ω –°–º–∏—Ä–Ω–æ–≤',
          rating: 4.7,
          views: 1124
        }
      ],
      videos: [
        {
          id: 1,
          title: '–ú–∞—Å—Å–∞–∂ –¥–ª—è –º–∞–ª—ã—à–µ–π: —É–∫—Ä–µ–ø–ª—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ',
          duration: '15 –º–∏–Ω',
          category: 'health',
          premium: false,
          thumbnail: 'üë∂',
          views: 2341,
          description: '–¢–µ—Ö–Ω–∏–∫–∏ –¥–µ—Ç—Å–∫–æ–≥–æ –º–∞—Å—Å–∞–∂–∞ –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞'
        },
        {
          id: 2,
          title: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è —Å –¥–µ—Ç—å–º–∏ 4-6 –ª–µ—Ç',
          duration: '22 –º–∏–Ω',
          category: 'development',
          premium: true,
          thumbnail: 'üé®',
          views: 1567,
          description: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π'
        },
        {
          id: 3,
          title: '–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å –¥–µ—Ç—è–º: —á—Ç–æ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å –∫–∞–∂–¥—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å',
          duration: '28 –º–∏–Ω',
          category: 'health',
          premium: true,
          thumbnail: 'üè•',
          views: 3456,
          description: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –æ–∫–∞–∑–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π –ø–æ–º–æ—â–∏'
        },
        {
          id: 4,
          title: '–†–∞–∑–≤–∏—Ç–∏–µ —Ä–µ—á–∏ —á–µ—Ä–µ–∑ –∏–≥—Ä—É',
          duration: '18 –º–∏–Ω',
          category: 'development',
          premium: false,
          thumbnail: 'üó£Ô∏è',
          views: 1890,
          description: '–ò–≥—Ä–æ–≤—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–µ—á–∏'
        }
      ]
    };

    const getFilteredArticles = () => {
      if (selectedCategory === 'all') {
        return libraryContent.articles;
      }
      return libraryContent.articles.filter(article => article.category === selectedCategory);
    };

    const getFilteredVideos = () => {
      if (selectedCategory === 'all') {
        return libraryContent.videos;
      }
      return libraryContent.videos.filter(video => video.category === selectedCategory);
    };

    const filteredArticles = getFilteredArticles();
    const filteredVideos = getFilteredVideos();
    const freeArticles = filteredArticles.filter(article => !article.premium);
    const premiumArticles = filteredArticles.filter(article => article.premium);
    const freeVideos = filteredVideos.filter(video => !video.premium);
    const premiumVideos = filteredVideos.filter(video => video.premium);

    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => setCurrentScreen('main')}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div>
              <h1 className="text-xl font-bold text-gray-800">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞</h1>
              <p className="text-sm text-gray-600">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π</p>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Welcome Banner */}
          <div className="bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl p-6 text-white mb-6">
            <div className="flex items-center justify-between">
              <div>
                <h2 className="text-xl font-bold mb-2">üìö –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É!</h2>
                <p className="text-sm opacity-90">
                  –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è {child.name}
                </p>
              </div>
              <div className="text-4xl">üìñ</div>
            </div>
          </div>

          {/* Categories */}
          <div className="mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
            <div className="grid grid-cols-2 gap-4 mb-4">
              {libraryContent.categories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => setSelectedCategory(category.id)}
                  className={`p-4 rounded-xl text-left transition-all ${
                    selectedCategory === category.id
                      ? 'bg-blue-500 text-white shadow-lg transform scale-105'
                      : 'bg-white shadow-sm hover:shadow-md hover:scale-102'
                  }`}
                >
                  <div className="text-2xl mb-2">{category.icon}</div>
                  <h3 className="font-semibold text-sm">{category.name}</h3>
                  <p className={`text-xs ${
                    selectedCategory === category.id ? 'text-blue-100' : 'text-gray-500'
                  }`}>
                    {category.count} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
                  </p>
                </button>
              ))}
            </div>
            
            <button
              onClick={() => setSelectedCategory('all')}
              className={`w-full p-3 rounded-lg text-center transition-all ${
                selectedCategory === 'all'
                  ? 'bg-gray-800 text-white'
                  : 'bg-white text-gray-600 hover:bg-gray-100'
              }`}
            >
              –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ({libraryContent.articles.length + libraryContent.videos.length} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤)
            </button>
          </div>

          {/* Featured Videos */}
          {(freeVideos.length > 0 || premiumVideos.length > 0) && (
            <div className="mb-6">
              <h2 className="text-lg font-bold text-gray-800 mb-4">üé• –í–∏–¥–µ–æ—É—Ä–æ–∫–∏</h2>
              
              {/* Free Videos */}
              {freeVideos.length > 0 && (
                <div className="mb-4">
                  <h3 className="text-md font-semibold text-gray-700 mb-3 flex items-center">
                    <span className="text-green-500 mr-2">üÜì</span>
                    –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≤–∏–¥–µ–æ ({freeVideos.length})
                  </h3>
                  <div className="space-y-3">
                    {freeVideos.map((video) => (
                      <div 
                        key={video.id} 
                        className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow"
                      >
                        <div className="flex items-center justify-between">
                          <div className="flex items-center flex-1">
                            <div className="w-16 h-16 bg-gradient-to-br from-red-400 to-pink-500 rounded-lg flex items-center justify-center mr-4">
                              <span className="text-2xl">{video.thumbnail}</span>
                            </div>
                            <div className="flex-1">
                              <h3 className="font-semibold text-gray-800">{video.title}</h3>
                              <p className="text-sm text-gray-600 mb-1">{video.description}</p>
                              <div className="flex items-center gap-2">
                                <span className="text-xs text-gray-500">‚è±Ô∏è {video.duration}</span>
                                <span className="text-xs text-gray-500">üëÅÔ∏è {video.views}</span>
                              </div>
                            </div>
                          </div>
                          <button 
                            onClick={() => {
                              if (window.Telegram?.WebApp) {
                                window.Telegram.WebApp.showAlert(`üì∫ –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–µ–æ "${video.title}"`);
                              } else {
                                alert(`üì∫ –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–µ–æ "${video.title}"`);
                              }
                            }}
                            className="ml-4 bg-red-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-red-600 transition-colors"
                          >
                            –°–º–æ—Ç—Ä–µ—Ç—å
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {/* Premium Videos */}
              {premiumVideos.length > 0 && (
                <div className="mb-4">
                  <h3 className="text-md font-semibold text-gray-700 mb-3 flex items-center">
                    <span className="text-yellow-500 mr-2">üëë</span>
                    –ü—Ä–µ–º–∏—É–º –≤–∏–¥–µ–æ ({premiumVideos.length})
                  </h3>
                  <div className="space-y-3">
                    {premiumVideos.map((video) => (
                      <div 
                        key={video.id} 
                        className={`bg-white rounded-xl p-4 shadow-sm ${!isPremium ? 'opacity-75' : 'hover:shadow-md transition-shadow'}`}
                      >
                        <div className="flex items-center justify-between">
                          <div className="flex items-center flex-1">
                            <div className="w-16 h-16 bg-gradient-to-br from-red-400 to-pink-500 rounded-lg flex items-center justify-center mr-4">
                              <span className="text-2xl">{video.thumbnail}</span>
                            </div>
                            <div className="flex-1">
                              <h3 className="font-semibold text-gray-800 flex items-center">
                                {video.title}
                                {!isPremium && <span className="ml-2 text-gray-400">üîí</span>}
                              </h3>
                              <p className="text-sm text-gray-600 mb-1">{video.description}</p>
                              <div className="flex items-center gap-2">
                                <span className="text-xs text-gray-500">‚è±Ô∏è {video.duration}</span>
                                <span className="text-xs text-gray-500">üëÅÔ∏è {video.views}</span>
                                <span className="px-2 py-1 bg-yellow-100 text-yellow-800 text-xs rounded-full font-medium">
                                  –ü—Ä–µ–º–∏—É–º
                                </span>
                              </div>
                            </div>
                          </div>
                          <button 
                            onClick={() => {
                              if (isPremium) {
                                if (window.Telegram?.WebApp) {
                                  window.Telegram.WebApp.showAlert(`üì∫ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–º–∏—É–º –≤–∏–¥–µ–æ "${video.title}"`);
                                } else {
                                  alert(`üì∫ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–º–∏—É–º –≤–∏–¥–µ–æ "${video.title}"`);
                                }
                              } else {
                                setShowPayment(true);
                              }
                            }}
                            className={`ml-4 px-4 py-2 rounded-lg font-medium transition-colors ${
                              isPremium
                                ? 'bg-red-500 text-white hover:bg-red-600'
                                : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                            }`}
                          >
                            {isPremium ? '–°–º–æ—Ç—Ä–µ—Ç—å' : '–ü—Ä–µ–º–∏—É–º'}
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          )}

          {/* Articles */}
          {(freeArticles.length > 0 || premiumArticles.length > 0) && (
            <div className="mb-6">
              <h2 className="text-lg font-bold text-gray-800 mb-4">üìñ –°—Ç–∞—Ç—å–∏</h2>
              
              {/* Free Articles */}
              {freeArticles.length > 0 && (
                <div className="mb-6">
                  <h3 className="text-md font-semibold text-gray-700 mb-3 flex items-center">
                    <span className="text-green-500 mr-2">üÜì</span>
                    –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ ({freeArticles.length})
                  </h3>
                  <div className="space-y-3">
                    {freeArticles.map((article) => (
                      <div key={article.id} className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow">
                        <div className="flex items-start justify-between">
                          <div className="flex-1">
                            <h3 className="font-semibold text-gray-800 mb-2">{article.title}</h3>
                            <p className="text-sm text-gray-600 mb-3">{article.description}</p>
                            <div className="flex items-center gap-3 text-xs text-gray-500">
                              <span>üë§ {article.author}</span>
                              <span>‚è±Ô∏è {article.readTime}</span>
                              <span>‚≠ê {article.rating}</span>
                              <span>üëÅÔ∏è {article.views}</span>
                            </div>
                          </div>
                          <button 
                            onClick={() => {
                              if (window.Telegram?.WebApp) {
                                window.Telegram.WebApp.showAlert(`üìñ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å—é "${article.title}"`);
                              } else {
                                alert(`üìñ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å—é "${article.title}"`);
                              }
                            }}
                            className="ml-4 bg-blue-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-600 transition-colors"
                          >
                            –ß–∏—Ç–∞—Ç—å
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {/* Premium Articles */}
              {premiumArticles.length > 0 && (
                <div className="mb-6">
                  <h3 className="text-md font-semibold text-gray-700 mb-3 flex items-center">
                    <span className="text-yellow-500 mr-2">üëë</span>
                    –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—å–∏ ({premiumArticles.length})
                  </h3>
                  <div className="space-y-3">
                    {premiumArticles.map((article) => (
                      <div key={article.id} className={`bg-white rounded-xl p-4 shadow-sm ${!isPremium ? 'opacity-75' : 'hover:shadow-md transition-shadow'}`}>
                        <div className="flex items-start justify-between">
                          <div className="flex-1">
                            <h3 className="font-semibold text-gray-800 mb-2 flex items-center">
                              {article.title}
                              {!isPremium && <span className="ml-2 text-gray-400">üîí</span>}
                            </h3>
                            <p className="text-sm text-gray-600 mb-3">{article.description}</p>
                            <div className="flex items-center gap-3 text-xs text-gray-500">
                              <span>üë§ {article.author}</span>
                              <span>‚è±Ô∏è {article.readTime}</span>
                              <span>‚≠ê {article.rating}</span>
                              <span>üëÅÔ∏è {article.views}</span>
                              <span className="px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full font-medium">
                                –ü—Ä–µ–º–∏—É–º
                              </span>
                            </div>
                          </div>
                          <button 
                            onClick={() => {
                              if (isPremium) {
                                if (window.Telegram?.WebApp) {
                                  window.Telegram.WebApp.showAlert(`üìñ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—å—é "${article.title}"`);
                                } else {
                                  alert(`üìñ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—å—é "${article.title}"`);
                                }
                              } else {
                                setShowPayment(true);
                              }
                            }}
                            className={`ml-4 px-4 py-2 rounded-lg font-medium transition-colors ${
                              isPremium 
                                ? 'bg-purple-500 text-white hover:bg-purple-600' 
                                : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                            }`}
                          >
                            {isPremium ? '–ß–∏—Ç–∞—Ç—å' : '–ü—Ä–µ–º–∏—É–º'}
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          )}

          {/* No content message */}
          {filteredArticles.length === 0 && filteredVideos.length === 0 && (
            <div className="text-center py-12">
              <div className="text-6xl mb-4">üìö</div>
              <h3 className="text-xl font-bold text-gray-800 mb-2">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
              <p className="text-gray-600 mb-6">
                –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{selectedCategory}" –ø–æ–∫–∞ –Ω–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
              </p>
              <button 
                onClick={() => setSelectedCategory('all')}
                className="bg-blue-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-600 transition-colors"
              >
                –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
              </button>
            </div>
          )}

          {/* Upgrade prompt for non-premium users */}
          {!isPremium && (premiumArticles.length > 0 || premiumVideos.length > 0) && (
            <div className="bg-gradient-to-r from-purple-600 to-pink-600 rounded-xl p-6 text-white text-center">
              <h3 className="text-lg font-bold mb-2">üìö –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ!</h3>
              <p className="text-sm opacity-90 mb-4">
                –ü–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ {premiumArticles.length + premiumVideos.length} —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
              </p>
              <div className="bg-white bg-opacity-20 rounded-lg p-4 mb-4">
                <div className="grid grid-cols-2 gap-4 text-sm">
                  <div className="text-center">
                    <div className="text-2xl mb-1">üìñ</div>
                    <div className="font-semibold">{premiumArticles.length} —Å—Ç–∞—Ç–µ–π</div>
                    <div className="opacity-80">–û—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl mb-1">üé•</div>
                    <div className="font-semibold">{premiumVideos.length} –≤–∏–¥–µ–æ</div>
                    <div className="opacity-80">–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã</div>
                  </div>
                </div>
              </div>
              <button 
                onClick={() => setShowPayment(true)}
                className="bg-white text-purple-600 px-6 py-3 rounded-lg font-medium hover:bg-gray-100 transition-colors"
              >
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º - 299‚ÇΩ/–º–µ—Å
              </button>
            </div>
          )}

          {/* Popular Topics */}
          <div className="bg-white rounded-xl p-6 shadow-sm">
            <h2 className="text-lg font-bold text-gray-800 mb-4">üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã</h2>
            <div className="flex flex-wrap gap-2">
              {[
                '–†–∞–∑–≤–∏—Ç–∏–µ —Ä–µ—á–∏',
                '–ú–µ–ª–∫–∞—è –º–æ—Ç–æ—Ä–∏–∫–∞', 
                '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ',
                '–î–µ—Ç—Å–∫–∏–µ —Å—Ç—Ä–∞—Ö–∏',
                '–ü–∏—Ç–∞–Ω–∏–µ —Ä–µ–±–µ–Ω–∫–∞',
                '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–æ–º–∞',
                '–ö—Ä–∏–∑–∏—Å 3 –ª–µ—Ç',
                '–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ'
              ].map((topic) => (
                <button 
                  key={topic}
                  onClick={() => {
                    if (window.Telegram?.WebApp) {
                      window.Telegram.WebApp.showAlert(`üîç –ü–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ —Ç–µ–º–µ "${topic}"`);
                    } else {
                      alert(`üîç –ü–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ —Ç–µ–º–µ "${topic}"`);
                    }
                  }}
                  className="px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-full text-sm text-gray-700 transition-colors"
                >
                  {topic}
                </button>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }
  
// –≠–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è
  if (currentScreen === 'settings') {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
          <div className="flex items-center">
            <button 
              onClick={() => setCurrentScreen('main')}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <span className="text-2xl">‚Üê</span>
            </button>
            <div>
              <h1 className="text-xl font-bold text-gray-800">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
              <p className="text-sm text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –ø–æ–¥–ø–∏—Å–∫–æ–π</p>
            </div>
          </div>
        </div>

        <div className="px-4 py-6">
          {/* Child Info */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–±–µ–Ω–∫–µ</h2>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–ò–º—è</label>
                <input 
                  type="text" 
                  value={child.name}
                  onChange={(e) => setChild({...child, name: e.target.value})}
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ä–µ–±–µ–Ω–∫–∞"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–í–æ–∑—Ä–∞—Å—Ç</label>
                <select 
                  value={child.age}
                  onChange={(e) => setChild({...child, age: parseInt(e.target.value)})}
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  {[1,2,3,4,5,6,7].map(age => (
                    <option key={age} value={age}>{age} {getAgeText(age)}</option>
                  ))}
                </select>
              </div>
            </div>
          </div>

          {/* Telegram Integration Status */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">Telegram –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</h2>
            
            {/* User Info */}
            {telegramUser && (
              <div className="bg-blue-50 rounded-lg p-4 mb-4">
                <div className="flex items-center">
                  <div className="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center mr-3">
                    <span className="text-white text-lg">üë§</span>
                  </div>
                  <div>
                    <h3 className="font-semibold text-blue-900">{telegramUser.first_name}</h3>
                    <p className="text-sm text-blue-700">
                      @{telegramUser.username || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} ‚Ä¢ ID: {telegramUser.id}
                    </p>
                  </div>
                </div>
              </div>
            )}

            {/* Bot Connection Status */}
            <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg mb-4">
              <div className="flex items-center">
                <span className="text-2xl mr-3">ü§ñ</span>
                <div>
                  <h3 className="font-medium text-gray-800">Telegram –ë–æ—Ç</h3>
                  <p className="text-sm text-gray-600">
                    @{notificationSettings.botUsername}
                  </p>
                </div>
              </div>
              <div className="flex items-center">
                <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                  botConnected ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'
                }`}>
                  {botConnected ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'}
                </span>
                {botConnected && (
                  <span className="w-3 h-3 bg-green-500 rounded-full ml-2"></span>
                )}
              </div>
            </div>

            {/* Bot Actions */}
            <div className="grid grid-cols-1 gap-3">
              {!botConnected ? (
                <button 
                  onClick={connectToBot}
                  className="bg-blue-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-600 transition-colors"
                >
                  üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞
                </button>
              ) : (
                <>
                  <button 
                    onClick={() => setCurrentScreen('notifications')}
                    className="bg-blue-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-600 transition-colors"
                  >
                    ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </button>
                  <button 
                    onClick={sendTestNotification}
                    className="bg-purple-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-purple-600 transition-colors"
                  >
                    üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </button>
                </>
              )}
            </div>
          </div>

          {/* Premium Status */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ü–æ–¥–ø–∏—Å–∫–∞</h2>
            {isPremium ? (
              <div className="text-center py-4">
                <div className="bg-gradient-to-r from-purple-600 to-pink-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-white text-2xl">üëë</span>
                </div>
                <h3 className="text-lg font-bold text-gray-800">–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–µ–Ω</h3>
                <p className="text-gray-600 mb-4">–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã</p>
                
                <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg p-4 mb-4">
                  <div className="text-sm text-gray-600 space-y-1">
                    <p>‚úÖ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
                    <p>‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</p>
                    <p>‚úÖ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</p>
                    <p>‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</p>
                  </div>
                </div>

                <button 
                  onClick={() => {
                    setIsPremium(false);
                    if (window.Telegram?.WebApp) {
                      window.Telegram.WebApp.showAlert('–ü—Ä–µ–º–∏—É–º –æ—Ç–∫–ª—é—á–µ–Ω (–¥–ª—è –¥–µ–º–æ)');
                    }
                  }}
                  className="text-red-600 hover:text-red-700 text-sm underline"
                >
                  –û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º (–¥–ª—è —Ç–µ—Å—Ç–∞)
                </button>
              </div>
            ) : (
              <div className="text-center py-4">
                <div className="text-6xl mb-4">üíé</div>
                <h3 className="text-lg font-bold text-gray-800 mb-2">–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h3>
                <p className="text-gray-600 mb-4">
                  –ü–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                </p>
                
                <div className="bg-gray-50 rounded-lg p-4 mb-6">
                  <div className="text-sm text-gray-600 space-y-2">
                    <div className="flex items-center justify-center">
                      <span className="text-purple-500 mr-2">üëë</span>
                      <span>–í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</span>
                    </div>
                    <div className="flex items-center justify-center">
                      <span className="text-blue-500 mr-2">üìä</span>
                      <span>–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</span>
                    </div>
                    <div className="flex items-center justify-center">
                      <span className="text-green-500 mr-2">üéØ</span>
                      <span>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ä–∞–∑–≤–∏—Ç–∏—è</span>
                    </div>
                    <div className="flex items-center justify-center">
                      <span className="text-orange-500 mr-2">üìö</span>
                      <span>–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</span>
                    </div>
                  </div>
                </div>

                <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg p-4 mb-6">
                  <div className="flex items-center justify-between">
                    <span className="text-gray-600">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                    <span className="text-2xl font-bold text-purple-600">299‚ÇΩ/–º–µ—Å</span>
                  </div>
                  <p className="text-sm text-gray-500 mt-1">–∏–ª–∏ 100 ‚≠ê Telegram Stars</p>
                </div>

                <button 
                  onClick={() => setShowPayment(true)}
                  className="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-3 rounded-lg font-medium hover:from-purple-700 hover:to-pink-700 transition-all"
                >
                  –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–º–∏—É–º
                </button>
              </div>
            )}
          </div>

          {/* App Info */}
          <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</h2>
            <div className="space-y-3">
              <div className="flex items-center justify-between py-2 border-b border-gray-100">
                <span className="text-gray-600">–í–µ—Ä—Å–∏—è</span>
                <span className="font-medium text-gray-800">1.0.0</span>
              </div>
              <div className="flex items-center justify-between py-2 border-b border-gray-100">
                <span className="text-gray-600">–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫</span>
                <span className="font-medium text-gray-800">–†–∞–∑–≤–∏–≤–∞–π–∫–∞ Team</span>
              </div>
              <div className="flex items-center justify-between py-2 border-b border-gray-100">
                <span className="text-gray-600">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</span>
                <span className="font-medium text-gray-800">23.01.2025</span>
              </div>
              <div className="flex items-center justify-between py-2">
                <span className="text-gray-600">Telegram Bot</span>
                <span className="font-medium text-gray-800">@{notificationSettings.botUsername}</span>
              </div>
            </div>
          </div>

          {/* Support & Feedback */}
          <div className="bg-white rounded-xl p-6 shadow-sm">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h2>
            <div className="space-y-3">
              <button 
                onClick={() => {
                  if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.openLink('https://t.me/razvivay–∫–∞_support');
                  } else {
                    window.open('https://t.me/razvivay–∫–∞_support', '_blank');
                  }
                }}
                className="w-full bg-blue-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-600 transition-colors flex items-center justify-center"
              >
                <span className="mr-2">üí¨</span>
                –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
              </button>
              
              <button 
                onClick={() => {
                  if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.showPopup({
                      title: '–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                      message: '–ù—Ä–∞–≤–∏—Ç—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ? –ü–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É!',
                      buttons: [
                        {id: 'rate', type: 'default', text: '–û—Ü–µ–Ω–∏—Ç—å'},
                        {id: 'cancel', type: 'cancel', text: '–û—Ç–º–µ–Ω–∞'}
                      ]
                    }, (buttonId) => {
                      if (buttonId === 'rate') {
                        window.Telegram.WebApp.showAlert('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê');
                      }
                    });
                  } else {
                    alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê');
                  }
                }}
                className="w-full bg-yellow-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-yellow-600 transition-colors flex items-center justify-center"
              >
                <span className="mr-2">‚≠ê</span>
                –û—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
              </button>
              
              <button 
                onClick={() => {
                  if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.openLink('https://razvivay–∫–∞.ru/privacy');
                  } else {
                    window.open('https://razvivay–∫–∞.ru/privacy', '_blank');
                  }
                }}
                className="w-full bg-gray-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-gray-600 transition-colors flex items-center justify-center"
              >
                <span className="mr-2">üìã</span>
                –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –û—Å—Ç–∞–ª—å–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã (–∑–∞–≥–ª—É—à–∫–∞)
  return (
    <div className="min-h-screen bg-gray-50">
      <div className="bg-white shadow-sm px-4 py-4 sticky top-0 z-10">
        <div className="flex items-center">
          <button 
            onClick={() => setCurrentScreen('main')}
            className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
          >
            <span className="text-2xl">‚Üê</span>
          </button>
          <h1 className="text-xl font-bold text-gray-800">–≠–∫—Ä–∞–Ω: {currentScreen}</h1>
        </div>
      </div>
      
      <div className="px-4 py-20 text-center">
        <h2 className="text-xl font-bold mb-4">–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h2>
        <p className="text-gray-600 mb-6">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö</p>
        <button 
          onClick={() => setCurrentScreen('main')}
          className="bg-blue-500 text-white px-6 py-2 rounded-lg"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        </button>
      </div>
    </div>
  );

};

export default ChildDevelopmentApp;

import React, { useState, useEffect } from 'react';
import { Bell, Play, Settings, Star, Calendar, Trophy, Lock, Crown, Clock, Users, Book, Target } from 'lucide-react';

const ChildDevelopmentApp = () => {
  const [currentScreen, setCurrentScreen] = useState('main');
  const [isPremium, setIsPremium] = useState(false);
  const [child, setChild] = useState({
    name: '–ú–∞–∫—Å–∏–º',
    age: 3,
    streak: 7
  });
  const [notifications, setNotifications] = useState({
    enabled: true,
    time: '19:00',
    frequency: 'daily'
  });

  const activities = {
    1: [
      { title: '–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞', description: '–ò—Å—Å–ª–µ–¥—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã', duration: '15 –º–∏–Ω', premium: false },
      { title: '–ò–≥—Ä–∞ —Å –≤–æ–¥–æ–π', description: '–ü–µ—Ä–µ–ª–∏–≤–∞–µ–º –≤–æ–¥—É –º–µ–∂–¥—É –µ–º–∫–æ—Å—Ç—è–º–∏', duration: '20 –º–∏–Ω', premium: false },
      { title: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', description: '–†–∞–∑–≤–∏–≤–∞–µ–º —Å–ª—É—Ö –∏ —Ä–∏—Ç–º', duration: '10 –º–∏–Ω', premium: true },
      { title: '–ú–∞—Å—Å–∞–∂ –ª–∞–¥–æ—à–µ–∫', description: '–°—Ç–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Ä–≤–Ω—ã–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è', duration: '5 –º–∏–Ω', premium: true }
    ],
    2: [
      { title: '–°–æ–±–∏—Ä–∞–µ–º –ø–∏—Ä–∞–º–∏–¥–∫—É', description: '–†–∞–∑–≤–∏–≤–∞–µ–º –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É', duration: '15 –º–∏–Ω', premium: false },
      { title: '–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—á–∏–∫–∞–º–∏', description: '–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ', duration: '25 –º–∏–Ω', premium: false },
      { title: '–ò–≥—Ä–∞ –≤ –ø—Ä—è—Ç–∫–∏', description: '–†–∞–∑–≤–∏–≤–∞–µ–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤', duration: '20 –º–∏–Ω', premium: true },
      { title: '–õ–µ–ø–∫–∞ –∏–∑ –ø–ª–∞—Å—Ç–∏–ª–∏–Ω–∞', description: '–†–∞–∑–≤–∏–≤–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å', duration: '30 –º–∏–Ω', premium: true }
    ],
    3: [
      { title: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–≤–µ—Ç–∞–º', description: '–ò–∑—É—á–∞–µ–º —Ü–≤–µ—Ç–∞ –∏ —Ñ–æ—Ä–º—ã', duration: '20 –º–∏–Ω', premium: false },
      { title: '–ü—Ä–æ—Å—Ç—ã–µ –ø–∞–∑–ª—ã', description: '–†–∞–∑–≤–∏–≤–∞–µ–º –ª–æ–≥–∏–∫—É', duration: '25 –º–∏–Ω', premium: false },
      { title: '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã', description: '–ò–≥—Ä–∞–µ–º –≤ –¥–æ–∫—Ç–æ—Ä–∞ –∏–ª–∏ –ø–æ–≤–∞—Ä–∞', duration: '30 –º–∏–Ω', premium: true },
      { title: '–ò–∑—É—á–∞–µ–º –∞–ª—Ñ–∞–≤–∏—Ç', description: '–ü–µ—Ä–≤—ã–µ –±—É–∫–≤—ã –∏ –∑–≤—É–∫–∏', duration: '15 –º–∏–Ω', premium: true }
    ],
    4: [
      { title: '–°—Ç—Ä–æ–∏–º –∏–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞', description: '–†–∞–∑–≤–∏–≤–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ', duration: '35 –º–∏–Ω', premium: false },
      { title: '–°—á–∏—Ç–∞–µ–º –¥–æ 10', description: '–û—Å–Ω–æ–≤—ã –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏', duration: '20 –º–∏–Ω', premium: false },
      { title: '–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏–∏', description: '–†–∞–∑–≤–∏–≤–∞–µ–º —Ä–µ—á—å –∏ —Ñ–∞–Ω—Ç–∞–∑–∏—é', duration: '25 –º–∏–Ω', premium: true },
      { title: '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –º–∞–≥–Ω–∏—Ç–∞–º–∏', description: '–ò–∑—É—á–∞–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞', duration: '30 –º–∏–Ω', premium: true }
    ],
    5: [
      { title: '–†–µ—à–∞–µ–º –∑–∞–≥–∞–¥–∫–∏', description: '–†–∞–∑–≤–∏–≤–∞–µ–º –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ', duration: '25 –º–∏–Ω', premium: false },
      { title: '–ò–∑—É—á–∞–µ–º —á–∞—Å—ã', description: '–ü–æ–Ω—è—Ç–∏–µ –≤—Ä–µ–º–µ–Ω–∏', duration: '20 –º–∏–Ω', premium: false },
      { title: '–ì–æ—Ç–æ–≤–∏–º –≤–º–µ—Å—Ç–µ', description: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏', duration: '45 –º–∏–Ω', premium: true },
      { title: '–ò–∑—É—á–∞–µ–º –∫–∞—Ä—Ç—É –º–∏—Ä–∞', description: '–†–∞—Å—à–∏—Ä—è–µ–º –∫—Ä—É–≥–æ–∑–æ—Ä', duration: '30 –º–∏–Ω', premium: true }
    ],
    6: [
      { title: '–ü–∏—Å—å–º–æ –∏ —á—Ç–µ–Ω–∏–µ', description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ', duration: '30 –º–∏–Ω', premium: false },
      { title: '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏', description: '–°–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ', duration: '25 –º–∏–Ω', premium: false },
      { title: '–ù–∞—É—á–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã', description: '–ò–∑—É—á–∞–µ–º –æ–∫—Ä—É–∂–∞—é—â–∏–π –º–∏—Ä', duration: '40 –º–∏–Ω', premium: true },
      { title: '–ò–∑—É—á–∞–µ–º –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫', description: '–ü–µ—Ä–≤—ã–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞', duration: '20 –º–∏–Ω', premium: true }
    ],
    7: [
      { title: '–ß—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥', description: '–†–∞–∑–≤–∏–≤–∞–µ–º –Ω–∞–≤—ã–∫–∏ —á—Ç–µ–Ω–∏—è', duration: '30 –º–∏–Ω', premium: false },
      { title: '–†–µ—à–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤', description: '–£–≥–ª—É–±–ª—è–µ–º –∑–Ω–∞–Ω–∏—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏', duration: '25 –º–∏–Ω', premium: false },
      { title: '–ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞', description: '–°–æ–∑–¥–∞–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é', duration: '50 –º–∏–Ω', premium: true },
      { title: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–µ—Ç–µ–π', description: '–û—Å–Ω–æ–≤—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è', duration: '35 –º–∏–Ω', premium: true }
    ]
  };

  const getAgeText = (age) => {
    if (age === 1) return '–≥–æ–¥';
    if (age < 5) return '–≥–æ–¥–∞';
    return '–ª–µ—Ç';
  };

  const MainScreen = () => (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
      <div className="bg-white shadow-sm px-4 py-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold text-gray-800">–ü—Ä–∏–≤–µ—Ç, {child.name}! üëã</h1>
            <p className="text-gray-600">–í–æ–∑—Ä–∞—Å—Ç: {child.age} {getAgeText(child.age)}</p>
          </div>
          <div className="flex items-center space-x-3">
            <div className="flex items-center bg-orange-100 px-3 py-1 rounded-full">
              <Trophy className="w-4 h-4 text-orange-600 mr-1" />
              <span className="text-sm font-medium text-orange-800">{child.streak} –¥–Ω–µ–π</span>
            </div>
            <button 
              onClick={() => setCurrentScreen('settings')}
              className="p-2 bg-gray-100 rounded-full hover:bg-gray-200 transition-colors"
            >
              <Settings className="w-5 h-5 text-gray-600" />
            </button>
          </div>
        </div>
      </div>

      {!isPremium && (
        <div className="mx-4 mt-4 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg p-4 text-white">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="font-bold flex items-center">
                <Crown className="w-5 h-5 mr-2" />
                –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞
              </h3>
              <p className="text-sm opacity-90">–û—Ç–∫—Ä–æ–π –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</p>
            </div>
            <button 
              onClick={() => setIsPremium(true)}
              className="bg-white text-purple-600 px-4 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors"
            >
              –ü–æ–¥–∫–ª—é—á–∏—Ç—å
            </button>
          </div>
        </div>
      )}

      <div className="px-4 py-6">
        <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
          <div className="text-center mb-6">
            <div className="bg-gradient-to-r from-green-400 to-blue-500 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4">
              <Play className="w-8 h-8 text-white" />
            </div>
            <h2 className="text-xl font-bold text-gray-800 mb-2">–í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è!</h2>
            <p className="text-gray-600">–í—ã–±–µ—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è {child.name}</p>
          </div>
          
          <button 
            onClick={() => setCurrentScreen('activities')}
            className="w-full bg-gradient-to-r from-green-500 to-blue-500 text-white py-4 rounded-xl font-medium text-lg hover:from-green-600 hover:to-blue-600 transition-all transform hover:scale-105"
          >
            –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
          </button>
        </div>

        <div className="grid grid-cols-2 gap-4 mb-6">
          <div className="bg-white rounded-xl p-4 shadow-sm">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold text-blue-600">24</p>
                <p className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
              </div>
              <Target className="w-8 h-8 text-blue-500" />
            </div>
          </div>
          <div className="bg-white rounded-xl p-4 shadow-sm">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-2xl font-bold text-purple-600">12—á</p>
                <p className="text-sm text-gray-600">–í—Ä–µ–º—è —Ä–∞–∑–≤–∏—Ç–∏—è</p>
              </div>
              <Clock className="w-8 h-8 text-purple-500" />
            </div>
          </div>
        </div>

        <div className="grid grid-cols-2 gap-4">
          <button 
            onClick={() => setCurrentScreen('progress')}
            className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow"
          >
            <div className="flex items-center justify-center mb-2">
              <Calendar className="w-6 h-6 text-green-500" />
            </div>
            <p className="text-sm font-medium text-gray-800">–ü—Ä–æ–≥—Ä–µ—Å—Å</p>
          </button>
          <button 
            onClick={() => setCurrentScreen('library')}
            className="bg-white rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow"
          >
            <div className="flex items-center justify-center mb-2">
              <Book className="w-6 h-6 text-blue-500" />
            </div>
            <p className="text-sm font-medium text-gray-800">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞</p>
          </button>
        </div>
      </div>
    </div>
  );

  const ActivitiesScreen = () => {
    const childActivities = activities[child.age] || activities[3];
    const freeActivities = childActivities.filter(a => !a.premium);
    const premiumActivities = childActivities.filter(a => a.premium);

    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow-sm px-4 py-4">
          <div className="flex items-center">
            <button 
              onClick={() => setCurrentScreen('main')}
              className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              ‚Üê
            </button>
            <h1 className="text-xl font-bold text-gray-800">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ({child.age} {getAgeText(child.age)})</h1>
          </div>
        </div>

        <div className="px-4 py-6">
          <div className="mb-8">
            <h2 className="text-lg font-bold text-gray-800 mb-4">–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h2>
            <div className="space-y-3">
              {freeActivities.map((activity, index) => (
                <div key={index} className="bg-white rounded-xl p-4 shadow-sm">
                  <div className="flex items-center justify-between">
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-800">{activity.title}</h3>
                      <p className="text-sm text-gray-600 mt-1">{activity.description}</p>
                      <div className="flex items-center mt-2">
                        <Clock className="w-4 h-4 text-gray-400 mr-1" />
                        <span className="text-sm text-gray-500">{activity.duration}</span>
                      </div>
                    </div>
                    <button className="bg-green-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-600 transition-colors">
                      –ù–∞—á–∞—Ç—å
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div>
            <h2 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
              <Crown className="w-5 h-5 text-yellow-500 mr-2" />
              –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            </h2>
            <div className="space-y-3">
              {premiumActivities.map((activity, index) => (
                <div key={index} className={`bg-white rounded-xl p-4 shadow-sm ${!isPremium ? 'opacity-75' : ''}`}>
                  <div className="flex items-center justify-between">
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-800 flex items-center">
                        {activity.title}
                        {!isPremium && <Lock className="w-4 h-4 text-gray-400 ml-2" />}
                      </h3>
                      <p className="text-sm text-gray-600 mt-1">{activity.description}</p>
                      <div className="flex items-center mt-2">
                        <Clock className="w-4 h-4 text-gray-400 mr-1" />
                        <span className="text-sm text-gray-500">{activity.duration}</span>
                      </div>
                    </div>
                    <button 
                      className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                        isPremium 
                          ? 'bg-purple-500 text-white hover:bg-purple-600' 
                          : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                      }`}
                      disabled={!isPremium}
                      onClick={() => !isPremium && setIsPremium(true)}
                    >
                      {isPremium ? '–ù–∞—á–∞—Ç—å' : '–ü—Ä–µ–º–∏—É–º'}
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  };

  const SettingsScreen = () => (
    <div className="min-h-screen bg-gray-50">
      <div className="bg-white shadow-sm px-4 py-4">
        <div className="flex items-center">
          <button 
            onClick={() => setCurrentScreen('main')}
            className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
          >
            ‚Üê
          </button>
          <h1 className="text-xl font-bold text-gray-800">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
        </div>
      </div>

      <div className="px-4 py-6">
        <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
          <h2 className="text-lg font-bold text-gray-800 mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–±–µ–Ω–∫–µ</h2>
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–ò–º—è</label>
              <input 
                type="text" 
                value={child.name}
                onChange={(e) => setChild({...child, name: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–í–æ–∑—Ä–∞—Å—Ç</label>
              <select 
                value={child.age}
                onChange={(e) => setChild({...child, age: parseInt(e.target.value)})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                {[1,2,3,4,5,6,7].map(age => (
                  <option key={age} value={age}>{age} {getAgeText(age)}</option>
                ))}
              </select>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
          <h2 className="text-lg font-bold text-gray-800 mb-4">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</h2>
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <span className="text-gray-700">–í–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</span>
              <button 
                onClick={() => setNotifications({...notifications, enabled: !notifications.enabled})}
                className={`w-12 h-6 rounded-full p-1 transition-colors ${
                  notifications.enabled ? 'bg-green-500' : 'bg-gray-300'
                }`}
              >
                <div className={`w-4 h-4 rounded-full bg-white transition-transform ${
                  notifications.enabled ? 'translate-x-6' : 'translate-x-0'
                }`}></div>
              </button>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</label>
              <input 
                type="time" 
                value={notifications.time}
                onChange={(e) => setNotifications({...notifications, time: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–ß–∞—Å—Ç–æ—Ç–∞</label>
              <select 
                value={notifications.frequency}
                onChange={(e) => setNotifications({...notifications, frequency: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</option>
                <option value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</option>
                <option value="custom">–ù–∞—Å—Ç—Ä–æ–∏—Ç—å</option>
              </select>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-sm">
          <h2 className="text-lg font-bold text-gray-800 mb-4">–ü–æ–¥–ø–∏—Å–∫–∞</h2>
          {isPremium ? (
            <div className="text-center py-4">
              <div className="bg-gradient-to-r from-purple-600 to-pink-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                <Crown className="w-8 h-8 text-white" />
              </div>
              <h3 className="text-lg font-bold text-gray-800">–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–µ–Ω</h3>
              <p className="text-gray-600">–°–ª–µ–¥—É—é—â–µ–µ —Å–ø–∏—Å–∞–Ω–∏–µ: 15 –∞–≤–≥—É—Å—Ç–∞ 2025</p>
              <button 
                onClick={() => setIsPremium(false)}
                className="mt-4 text-red-600 hover:text-red-700 text-sm"
              >
                –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
              </button>
            </div>
          ) : (
            <div className="text-center py-4">
              <h3 className="text-lg font-bold text-gray-800 mb-2">–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h3>
              <p className="text-gray-600 mb-4">‚Ä¢ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏<br/>‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã<br/>‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</p>
              <button 
                onClick={() => setIsPremium(true)}
                className="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-3 rounded-lg font-medium hover:from-purple-700 hover:to-pink-700 transition-all"
              >
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è - 299‚ÇΩ/–º–µ—Å
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );

  const ProgressScreen = () => (
    <div className="min-h-screen bg-gray-50">
      <div className="bg-white shadow-sm px-4 py-4">
        <div className="flex items-center">
          <button 
            onClick={() => setCurrentScreen('main')}
            className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
          >
            ‚Üê
          </button>
          <h1 className="text-xl font-bold text-gray-800">–ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑–≤–∏—Ç–∏—è</h1>
        </div>
      </div>

      <div className="px-4 py-6">
        <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
          <h2 className="text-lg font-bold text-gray-800 mb-4">–≠—Ç–∞ –Ω–µ–¥–µ–ª—è</h2>
          <div className="grid grid-cols-7 gap-2 mb-4">
            {['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'].map((day, index) => (
              <div key={day} className="text-center">
                <div className="text-xs text-gray-600 mb-1">{day}</div>
                <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                  index < 5 ? 'bg-green-500 text-white' : 'bg-gray-200'
                }`}>
                  {index < 5 ? '‚úì' : ''}
                </div>
              </div>
            ))}
          </div>
          <div className="bg-gray-100 rounded-lg p-4">
            <div className="flex items-center justify-between">
              <span className="text-gray-700">–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</span>
              <span className="font-bold text-green-600">15 –∏–∑ 21</span>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-sm mb-6">
          <h2 className="text-lg font-bold text-gray-800 mb-4">–†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤</h2>
          <div className="space-y-4">
            {[
              { skill: '–ú–µ–ª–∫–∞—è –º–æ—Ç–æ—Ä–∏–∫–∞', progress: 85, color: 'bg-blue-500' },
              { skill: '–†–µ—á—å –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è', progress: 70, color: 'bg-green-500' },
              { skill: '–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ', progress: 60, color: 'bg-purple-500' },
              { skill: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏', progress: 90, color: 'bg-pink-500' }
            ].map((item, index) => (
              <div key={index}>
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm font-medium text-gray-700">{item.skill}</span>
                  <span className="text-sm text-gray-500">{item.progress}%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div 
                    className={`h-2 rounded-full ${item.color}`}
                    style={{ width: `${item.progress}%` }}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-sm">
          <h2 className="text-lg font-bold text-gray-800 mb-4">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
          <div className="grid grid-cols-2 gap-4">
            {[
              { title: '–ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è', icon: 'üéØ', unlocked: true },
              { title: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π', icon: 'üé®', unlocked: true },
              { title: '–ú–∞–ª–µ–Ω—å–∫–∏–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', icon: 'üîç', unlocked: false },
              { title: '–ú–µ—Å—è—Ü —Ä–∞–∑–≤–∏—Ç–∏—è', icon: 'üìÖ', unlocked: false }
            ].map((achievement, index) => (
              <div key={index} className={`p-4 rounded-lg border-2 ${
                achievement.unlocked 
                  ? 'border-yellow-300 bg-yellow-50' 
                  : 'border-gray-200 bg-gray-50'
              }`}>
                <div className="text-2xl mb-2">{achievement.icon}</div>
                <h3 className={`font-medium ${
                  achievement.unlocked ? 'text-yellow-800' : 'text-gray-500'
                }`}>{achievement.title}</h3>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  const LibraryScreen = () => (
    <div className="min-h-screen bg-gray-50">
      <div className="bg-white shadow-sm px-4 py-4">
        <div className="flex items-center">
          <button 
            onClick={() => setCurrentScreen('main')}
            className="mr-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
          >
            ‚Üê
          </button>
          <h1 className="text-xl font-bold text-gray-800">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞</h1>
        </div>
      </div>

      <div className="px-4 py-6">
        <div className="grid grid-cols-2 gap-4 mb-6">
          {[
            { title: '–°—Ç–∞—Ç—å–∏ –æ —Ä–∞–∑–≤–∏—Ç–∏–∏', icon: 'üìö', count: 47 },
            { title: '–í–∏–¥–µ–æ—É—Ä–æ–∫–∏', icon: 'üé•', count: 23 },
            { title: '–ò–≥—Ä—ã –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', icon: 'üéÆ', count: 156 },
            { title: '–°–æ–≤–µ—Ç—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤', icon: 'üë®‚Äç‚öïÔ∏è', count: 12 }
          ].map((category, index) => (
            <div key={index} className="bg-white rounded-xl p-4 shadow-sm">
              <div className="text-3xl mb-2">{category.icon}</div>
              <h3 className="font-semibold text-gray-800">{category.title}</h3>
              <p className="text-sm text-gray-600">{category.count} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</p>
            </div>
          ))}
        </div>

        <div className="bg-white rounded-xl p-6 shadow-sm">
          <h2 className="text-lg font-bold text-gray-800 mb-4">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏</h2>
          <div className="space-y-4">
            {[
              {
                title: '–ö–∞–∫ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Ä–µ—á—å —É —Ä–µ–±–µ–Ω–∫–∞ 3-4 –ª–µ—Ç',
                readTime: '5 –º–∏–Ω',
                premium: false
              },
              {
                title: '–õ—É—á—à–∏–µ –∏–≥—Ä—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –º–µ–ª–∫–æ–π –º–æ—Ç–æ—Ä–∏–∫–∏',
                readTime: '7 –º–∏–Ω',
                premium: false
              },
              {
                title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ: —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π',
                readTime: '10 –º–∏–Ω',
                premium: true
              },
              {
                title: '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –¥–æ—à–∫–æ–ª—å–Ω–∏–∫–∞',
                readTime: '8 –º–∏–Ω',
                premium: true
              }
            ].map((article, index) => (
              <div key={index} className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <div className="flex-1">
                  <h3 className="font-medium text-gray-800 flex items-center">
                    {article.title}
                    {article.premium && <Lock className="w-4 h-4 text-gray-400 ml-2" />}
                  </h3>
                  <p className="text-sm text-gray-600 mt-1">{article.readTime} —á—Ç–µ–Ω–∏—è</p>
                </div>
                <button className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                  article.premium && !isPremium
                    ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                    : 'bg-blue-500 text-white hover:bg-blue-600'
                }`}>
                  –ß–∏—Ç–∞—Ç—å
                </button>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="max-w-md mx-auto bg-white min-h-screen">
      {currentScreen === 'main' && <MainScreen />}
      {currentScreen === 'activities' && <ActivitiesScreen />}
      {currentScreen === 'settings' && <SettingsScreen />}
      {currentScreen === 'progress' && <ProgressScreen />}
      {currentScreen === 'library' && <LibraryScreen />}
    </div>
  );
};

export default ChildDevelopmentApp;

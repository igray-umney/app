// Telegram Web App –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

class TelegramWebApp {
  constructor() {
    this.tg = window.Telegram?.WebApp;
    this.initData = null;
    this.user = null;
    this.isPremium = false;
    
    if (this.tg) {
      this.init();
    }
  }
  
  init() {
    // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    this.tg.expand();
    
    // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
    this.tg.enableClosingConfirmation();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
    this.tg.setHeaderColor('#6366f1');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    this.initData = this.tg.initDataUnsafe;
    this.user = this.initData?.user;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const urlParams = new URLSearchParams(window.location.search);
    this.isPremium = urlParams.get('premium') === 'true';
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
    this.setupMainButton();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    this.setupBackButton();
  }
  
  setupMainButton() {
    if (!this.tg) return;
    
    this.tg.MainButton.setParams({
      text: '–ö—É–ø–∏—Ç—å Premium üëë',
      color: '#8b5cf6',
      text_color: '#ffffff',
      is_visible: !this.isPremium,
      is_active: true
    });
    
    this.tg.MainButton.onClick(() => {
      this.requestPremium();
    });
  }
  
  setupBackButton() {
    if (!this.tg) return;
    
    this.tg.BackButton.onClick(() => {
      this.tg.close();
    });
  }
  
  showBackButton() {
    if (this.tg) {
      this.tg.BackButton.show();
    }
  }
  
  hideBackButton() {
    if (this.tg) {
      this.tg.BackButton.hide();
    }
  }
  
  requestPremium() {
    if (!this.tg) return;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É –ø—Ä–µ–º–∏—É–º–∞ –±–æ—Ç—É
    this.tg.sendData(JSON.stringify({
      action: 'buy_premium',
      user_id: this.user?.id
    }));
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showNotification(message) {
    if (this.tg) {
      this.tg.showPopup({
        title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
        message: message,
        buttons: [{
          type: 'ok'
        }]
      });
    } else {
      alert(message);
    }
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  showConfirm(title, message, callback) {
    if (this.tg) {
      this.tg.showPopup({
        title: title,
        message: message,
        buttons: [
          { id: 'yes', type: 'default', text: '–î–∞' },
          { id: 'no', type: 'cancel' }
        ]
      }, (buttonId) => {
        callback(buttonId === 'yes');
      });
    } else {
      callback(confirm(message));
    }
  }
  
  // –í–∏–±—Ä–∞—Ü–∏—è
  hapticFeedback(type = 'light') {
    if (this.tg) {
      switch(type) {
        case 'light':
          this.tg.HapticFeedback.impactOccurred('light');
          break;
        case 'medium':
          this.tg.HapticFeedback.impactOccurred('medium');
          break;
        case 'heavy':
          this.tg.HapticFeedback.impactOccurred('heavy');
          break;
        case 'error':
          this.tg.HapticFeedback.notificationOccurred('error');
          break;
        case 'success':
          this.tg.HapticFeedback.notificationOccurred('success');
          break;
        case 'warning':
          this.tg.HapticFeedback.notificationOccurred('warning');
          break;
      }
    }
  }
  
  // –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  ready() {
    if (this.tg) {
      this.tg.ready();
    }
  }
  
  // –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  close() {
    if (this.tg) {
      this.tg.close();
    }
  }
  
  // –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É
  openLink(url) {
    if (this.tg) {
      this.tg.openLink(url);
    } else {
      window.open(url, '_blank');
    }
  }
  
  // –û—Ç–∫—Ä—ã—Ç—å —Å—á–µ—Ç Telegram
  openInvoice(url) {
    if (this.tg) {
      this.tg.openInvoice(url);
    }
  }
  
  // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  getUserData() {
    return {
      id: this.user?.id || null,
      first_name: this.user?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      last_name: this.user?.last_name || '',
      username: this.user?.username || '',
      language_code: this.user?.language_code || 'ru',
      is_premium: this.isPremium
    };
  }
  
  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –æ–±–ª–∞–∫–æ Telegram
  async saveToCloud(key, value) {
    if (this.tg && this.tg.CloudStorage) {
      return new Promise((resolve, reject) => {
        this.tg.CloudStorage.setItem(key, JSON.stringify(value), (error, result) => {
          if (error) {
            reject(error);
          } else {
            resolve(result);
          }
        });
      });
    }
    // Fallback –Ω–∞ localStorage
    localStorage.setItem(key, JSON.stringify(value));
    return Promise.resolve();
  }
  
  // –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±–ª–∞–∫–∞ Telegram
  async getFromCloud(key) {
    if (this.tg && this.tg.CloudStorage) {
      return new Promise((resolve, reject) => {
        this.tg.CloudStorage.getItem(key, (error, value) => {
          if (error) {
            reject(error);
          } else {
            try {
              resolve(value ? JSON.parse(value) : null);
            } catch (e) {
              resolve(value);
            }
          }
        });
      });
    }
    // Fallback –Ω–∞ localStorage
    const value = localStorage.getItem(key);
    return Promise.resolve(value ? JSON.parse(value) : null);
  }
  
  // –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É
  updateTheme() {
    if (this.tg) {
      const theme = this.tg.themeParams;
      document.documentElement.style.setProperty('--tg-theme-bg-color', theme.bg_color || '#ffffff');
      document.documentElement.style.setProperty('--tg-theme-text-color', theme.text_color || '#000000');
      document.documentElement.style.setProperty('--tg-theme-hint-color', theme.hint_color || '#999999');
      document.documentElement.style.setProperty('--tg-theme-link-color', theme.link_color || '#2481cc');
      document.documentElement.style.setProperty('--tg-theme-button-color', theme.button_color || '#5288c1');
      document.documentElement.style.setProperty('--tg-theme-button-text-color', theme.button_text_color || '#ffffff');
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const telegram = new TelegramWebApp();

export default telegram;
